{"version":3,"sources":["../../../map/main/geo/GeoPoint.ts","../../../../../node_modules/tslib/tslib.es6.js","../../../map/main/geo/GeoPointInterpolator.ts","../../../map/main/geo/GeoBox.ts","../../../map/main/graphics/MapGraphicsView.ts","../../../map/main/layer/MapTile.ts","../../../map/main/layer/MapLayerView.ts","../../../map/main/MapView.ts","../../../map/main/graphics/MapGraphicsViewController.ts","../../../map/main/raster/MapRasterView.ts","../../../map/main/composited/CompositedMapView.ts","../../../map/main/raster/MapRasterViewController.ts","../../../map/main/layer/MapLayerViewController.ts","../../../map/main/shape/MapGroupView.ts","../../../map/main/shape/MapPointView.ts","../../../map/main/shape/MapCircleView.ts","../../../map/main/shape/MapArcView.ts","../../../map/main/shape/MapLineView.ts","../../../map/main/shape/MapPolylineView.ts","../../../map/main/shape/MapPolygonView.ts","../../../mapbox/main/MapboxProjection.ts","../../../mapbox/main/MapboxView.ts","../../../mapbox/main/MapboxViewController.ts","../../../googlemap/main/GoogleMapProjection.ts","../../../googlemap/main/GoogleMapView.ts","../../../googlemap/main/GoogleMapViewController.ts","../../../esrimap/main/EsriProjection.ts","../../../esrimap/main/EsriView.ts","../../../esrimap/main/EsriViewController.ts","../../../esrimap/main/EsriMapViewProjection.ts","../../../esrimap/main/EsriMapView.ts","../../../esrimap/main/EsriMapViewController.ts","../../../esrimap/main/EsriSceneViewProjection.ts","../../../esrimap/main/EsriSceneView.ts","../../../esrimap/main/EsriSceneViewController.ts","../../../map/main/geo/GeoProjection.ts"],"names":["GeoPoint","lng","lat","this","_lng","_lat","Object","defineProperty","prototype","project","projection","toAny","equals","that","hashCode","_hashSeed","Murmur3","seed","mash","mix","hash","debug","output","write","toString","Format","origin","_origin","from","fromInit","value","fromTuple","fromAny","isInit","isTuple","TypeError","init","Array","isArray","length","isAny","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","GeoPointInterpolator","p0","p1","_this","_super","call","x","dx","y","dy","interpolate","u","deinterpolate","dp","l","Math","sqrt","range","between","a","Interpolator","tryBetween","tryBetweenAny","registerFactory","GeoBox","lngMin","latMin","lngMax","latMax","_lngMin","_latMin","_lngMax","_latMax","contains","containsPoint","containsBox","intersects","intersectsPoint","intersectsBox","union","unionPoint","unionBox","min","max","bottomLeft","topRight","xMin","_x","yMin","_y","xMax","yMax","isFinite","Infinity","BoxR2","canEqual","empty","_empty","globe","_globe","MapGraphicsView","_viewController","parentView","MapView","is","geoProjection","mapZoom","mapHeading","mapTilt","onMount","requireUpdate","View","NeedsProject","modifyUpdate","updateFlags","additionalFlags","NeedsLayout","needsProcess","processFlags","viewContext","_viewFlags","NeedsAnimate","doProcess","cascadeFlags","NeedsProcess","NeedsResize","willProcess","ProcessingFlag","NeedsScroll","willScroll","NeedsDerive","willDerive","willAnimate","willProject","onProcess","onScroll","onDerive","onAnimate","onProject","doProcessChildViews","didProject","didAnimate","didDerive","didScroll","didProcess","willObserve","viewObserver","viewWillProject","didObserve","viewDidProject","cullGeoFrame","geoFrame","setCulled","geoBounds","deriveGeoBounds","childViews","_childViews","n","childView","isHidden","childGeoBounds","didSetGeoBounds","newGeoBounds","oldGeoBounds","_parentView","childViewDidSetGeoBounds","GraphicsView","MapTile","depth","maxDepth","geoCenter","southWest","northWest","southEast","northEast","views","size","_depth","_maxDepth","_geoFrame","_geoBounds","_geoCenter","_southWest","_northWest","_southEast","_northEast","_views","_size","isEmpty","bounds","getTile","inWest","inSouth","inEast","inNorth","inserted","view","oldSouthWest","newSouthWest","createTile","oldNorthWest","newNorthWest","oldSouthEast","newSouthEast","oldNorthEast","newNorthEast","oldViews","indexOf","newViews","slice","push","removed","index","splice","moved","newBounds","oldBounds","newInWest","newInSouth","newInEast","newInNorth","oldInWest","oldInSouth","oldInEast","oldInNorth","forEach","callback","thisArg","result","forEachIntersecting","forEachNonIntersecting","center","MapLayerView","setViewController","newViewController","oldViewController","willSetViewController","setView","onSetViewController","didSetViewController","viewObservers","_viewObservers","addViewObserver","willAddViewObserver","onAddViewObserver","didAddViewObserver","removeViewObserver","willRemoveViewObserver","onRemoveViewObserver","didRemoveViewObserver","RenderedView","canvasView","_key","setKey","setParentView","newParentView","oldParentView","willSetParentView","onSetParentView","didSetParentView","getChildView","childViewMap","_childViewMap","setChildView","newChildView","remove","oldChildView","oldChildViewBounds","willRemoveChildView","removeChildViewMap","onRemoveChildView","didRemoveChildView","newChildViewBounds","insertChildViewMap","onInsertChildView","didInsertChildView","append","child","appendChildView","removeChildView","childViewBounds","willInsertChildView","prepend","prependChildView","insert","insertChildView","targetView","Error","removeAll","UpdatingMask","RemovingFlag","setViewFlags","viewFlags","cascadeMount","MountedFlag","willMount","doMountChildViews","didMount","cascadeUnmount","willUnmount","doUnmountChildViews","onUnmount","didUnmount","cancelAnimators","cascadePower","PoweredFlag","willPower","onPower","doPowerChildViews","didPower","cascadeUnpower","willUnpower","doUnpowerChildViews","onUnpower","didUnpower","renderer","cascadeProcess","viewWillAnimate","animateMembers","updateTime","viewDidAnimate","ProcessMask","willProcessChildViews","doProcessTile","didProcessChildViews","tile","childViewContext","doProcessChildView","cascadeDisplay","displayFlags","needsDisplay","doDisplay","NeedsDisplay","NeedsComposite","willDisplay","DisplayingFlag","willLayout","NeedsRender","willRender","onDisplay","onLayout","onRender","doDisplayChildViews","didRender","didLayout","didDisplay","viewWillRender","outlineColor","getMemberAnimator","renderTiles","CanvasRenderer","isCulled","context","save","renderTile","restore","beginPath","moveTo","lineTo","closePath","lineWidth","strokeStyle","stroke","viewDidRender","DisplayMask","willDisplayChildViews","doDisplayTile","didDisplayChildViews","doDisplayChildView","newChildViewGeoBounds","oldChildViewGeoBounds","hasViewScope","scopeName","viewScopes","_viewScopes","getViewScope","setViewScope","viewScope","hasLayoutAnchor","anchorName","layoutAnchors","_layoutAnchors","getLayoutAnchor","setLayoutAnchor","layoutAnchor","hasMemberAnimator","animatorName","memberAnimators","_memberAnimators","setMemberAnimator","animator","getLazyMemberAnimator","memberAnimator","viewClass","descriptor","AnimatedView","getMemberAnimatorDescriptor","animatorType","initMemberAnimator","animatorDidSetAuto","auto","MemberAnimator","t","onFrame","animate","cancelMemberAnimators","cancel","HiddenFlag","setHidden","newHidden","willSetHidden","onSetHidden","didSetHidden","hidden","viewWillSetHidden","viewDidSetHidden","CulledFlag","newCulled","willSetCulled","onSetCulled","didSetCulled","culled","viewWillSetCulled","viewDidSetCulled","cullViewFrame","viewFrame","viewBounds","_viewFrame","setViewFrame","hitTest","geoPoint","unproject","hitTestTile","hit","hitBounds","Transform","identity","inverseClientTransform","clientTransform","inverse","transform","inversePageTransform","pageTransform","on","type","listener","options","eventHandlers","_eventHandlers","handler","handlers","capture","passive","once","off","handleEvent","event","onMouseOver","onMouseOut","bubbleEvent","bubbles","cancelBubble","dispatchEvent","next","isHovering","HoveringFlag","mouseenter","enterEvent","MouseEvent","clientX","clientY","screenX","screenY","relatedTargetView","mouseleave","leaveEvent","Color","object","MapGraphicsViewController","_view","GraphicsViewController","MapRasterView","_canvas","createCanvas","_renderer","_rasterFrame","window","devicePixelRatio","createRenderer","setRenderer","resetRenderer","rendererType","getContext","pixelRatio","WebGLRenderer","UpdateMask","rasterViewContext","willComposite","onComposite","didComposite","resizeCanvas","clearCanvas","compositeImage","compositor","compositeFrame","floor","translate","document","createElement","node","ceil","width","height","rasterFrame","style","clearRect","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","setTransform","viewport","imageData","getImageData","globalAlpha","opacity","globalCompositeOperation","compositeOperation","putImageData","Number","String","CompositedMapView","CompositedView","MapRasterViewController","viewWillComposite","viewDidComposite","MapLayerViewController","ViewController","MapGroupView","doUpdateGeoBounds","didRemoveChildVIew","MapPointView","onUpdate","onSetGeoPoint","bind","hitRadius","_hitRadius","label","TextRunView","labelPlacement","_labelPlacement","isGradientStop","color","setState","point","tween","viewPoint","PointR2","radius","labelPadding","font","textColor","newGeoPoint","oldGeoPoint","isAuto","_value","_state","layoutLabel","frame","placement","padding","pxValue","_a","y1","TypesetView","textAlign","setAutoState","textBaseline","textOrigin","hitTestPoint","hx","hy","Length","Font","inherit","MapCircleView","onSetGeoCenter","newGeoCenter","oldGeoCenter","viewCenter","intersectsCircle","CircleR2","renderCircle","arc","PI","fill","fillStyle","strokeWidth","px","py","hitTestCircle","isPointInStroke","circle","MapArcView","Arc","innerRadius","outerRadius","startAngle","sweepAngle","padAngle","padRadius","cornerRadius","state","renderArc","draw","radValue","cos","sin","hitTestArc","isPointInPath","zero","Angle","MapLineView","geoStart","onSetGeoStart","geoEnd","onSetGeoEnd","hitWidth","_hitWidth","newGeoStart","oldGeoStart","newGeoEnd","oldGeoEnd","viewStart","viewEnd","x0","y0","x1","intersectsSegment","SegmentR2","renderLine","xMid","yMid","hitTestLine","line","MapPolylineView","_viewCenter","_gradientStops","_viewBounds","points","lngMid","latMid","invalid","j","_b","appendPoint","setPoint","onInsertPoint","gradientStops","pointCount","renderPolylineGradient","renderPolylineStroke","childCount","gradient","createLinearGradient","alpha","addColorStop","hitTestPolyline","x_1","y_1","polyline","MapPolygonView","_clipViewport","clipViewport","renderPolygon","hitTestPolygon","polygon","MapboxProjection","map","_map","getBounds","getWest","getSouth","getEast","getNorth","mapboxgl.LngLat","mapboxgl.Point","MapboxView","onMapRender","_geoProjection","_mapZoom","getZoom","_mapHeading","getBearing","_mapTilt","getPitch","initMap","apply","setGeoProjection","willSetGeoProjection","onSetGeoProjection","didSetGeoProjection","viewWillSetGeoProjection","viewDidSetGeoProjection","setMapZoom","newMapZoom","oldMapZoom","willSetMapZoom","onSetMapZoom","didSetMapZoom","viewWillSetMapZoom","newZoom","oldZoom","viewDidSetMapZoom","mapViewContext","overlayCanvas","fromNode","getContainer","canvas","getCanvasContainer","MapboxViewController","GoogleMapProjection","mapView","_mapView","sw","getSouthWest","ne","getNorthEast","google","maps","LatLng","_mapOverlay","getProjection","fromLatLngToContainerPixel","Point","fromContainerPixelToLatLng","GoogleMapView","getHeading","getTilt","mapOverlay","GoogleMapOverlayView","_canvasView","onAdd","panes","getPanes","container","materializeAncestors","overlayMouseTarget","onRemove","OverlayView","setMap","parentNode","HTMLElement","GoogleMapViewController","EsriProjection","webMercatorUtils","require","EsriView","EsriViewController","EsriMapViewProjection","extent","webMercatorToGeographic","xmin","ymin","xmax","ymax","spatialReference","wkid","toScreen","toMap","longitude","latitude","EsriMapView","zoom","rotation","watch","esriViewRoot","querySelector","setEventSurface","EsriMapViewController","EsriSceneViewProjection","EsriSceneView","camera","heading","tilt","EsriSceneViewController"],"mappings":";m3BAqCE,SAAAA,EAAYC,EAAaC,GACvBC,KAAKC,KAAOH,EACZE,KAAKE,KAAOH,EA0GhB,OAvGEI,OAAAC,eAAIP,EAAAQ,UAAA,MAAG,KAAP,WACE,OAAOL,KAAKC,sCAGdE,OAAAC,eAAIP,EAAAQ,UAAA,MAAG,KAAP,WACE,OAAOL,KAAKE,sCAGdL,EAAAQ,UAAAC,QAAA,SAAQC,GACN,OAAOA,EAAWD,QAAQN,OAG5BH,EAAAQ,UAAAG,MAAA,WACE,MAAO,CACLV,IAAKE,KAAKC,KACVF,IAAKC,KAAKE,OAIdL,EAAAQ,UAAAI,OAAA,SAAOC,GACL,OAAIV,OAASU,GAEFA,aAAgBb,IAClBG,KAAKC,OAASS,EAAKT,MAAQD,KAAKE,OAASQ,EAAKR,OAKzDL,EAAAQ,UAAAM,SAAA,WAIE,YAH2B,IAAvBd,EAASe,YACXf,EAASe,UAAYC,EAAAA,QAAQC,KAAKjB,IAE7BgB,EAAAA,QAAQE,KAAKF,EAAAA,QAAQG,IAAIH,EAAAA,QAAQG,IAAInB,EAASe,UACjDC,EAAAA,QAAQI,KAAKjB,KAAKC,OAAQY,EAAAA,QAAQI,KAAKjB,KAAKE,SAGlDL,EAAAQ,UAAAa,MAAA,SAAMC,GACJA,EAASA,EAAOC,MAAM,YAAYA,MAAM,IAAWA,MAAM,QAAQA,MAAM,IAClEF,MAAMlB,KAAKC,MAAMmB,MAAM,MAAMF,MAAMlB,KAAKE,MAAMkB,MAAM,KAG3DvB,EAAAQ,UAAAgB,SAAA,WACE,OAAOC,EAAAA,OAAOJ,MAAMlB,OAOfH,EAAA0B,OAAP,WAIE,YAHyB,IAArB1B,EAAS2B,UACX3B,EAAS2B,QAAU,IAAI3B,EAAS,EAAG,IAE9BA,EAAS2B,SAGX3B,EAAA4B,KAAP,SAAY3B,EAAaC,GACvB,OAAO,IAAIF,EAASC,EAAKC,IAGpBF,EAAA6B,SAAP,SAAgBC,GACd,OAAO,IAAI9B,EAAS8B,EAAM7B,IAAK6B,EAAM5B,MAGhCF,EAAA+B,UAAP,SAAiBD,GACf,OAAO,IAAI9B,EAAS8B,EAAM,GAAIA,EAAM,KAG/B9B,EAAAgC,QAAP,SAAeF,GACb,GAAIA,aAAiB9B,EACnB,OAAO8B,EACF,GAAI9B,EAASiC,OAAOH,GACzB,OAAO9B,EAAS6B,SAASC,GACpB,GAAI9B,EAASkC,QAAQJ,GAC1B,OAAO9B,EAAS+B,UAAUD,GAE5B,MAAM,IAAIK,UAAU,GAAKL,IAIpB9B,EAAAiC,OAAP,SAAcH,GACZ,GAAqB,iBAAVA,GAAgC,OAAVA,EAAgB,CAC/C,IAAMM,EAAON,EACb,MAA2B,iBAAbM,EAAKnC,KACQ,iBAAbmC,EAAKlC,IAErB,OAAO,GAIFF,EAAAkC,QAAP,SAAeJ,GACb,OAAOO,MAAMC,QAAQR,IACG,IAAjBA,EAAMS,QACc,iBAAbT,EAAM,IACO,iBAAbA,EAAM,IAIf9B,EAAAwC,MAAP,SAAaV,GACX,OAAOA,aAAiB9B,GACjBA,EAASiC,OAAOH,IAChB9B,EAASkC,QAAQJ,IAE5B9B,KCjIIyC,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBnC,OAAOsC,gBAClB,CAAEC,UAAW,cAAgBR,OAAS,SAAUK,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIG,KAAKH,EAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,MACpDJ,EAAGC,IAGrB,SAASK,EAAUN,EAAGC,GAEzB,SAASM,IAAO9C,KAAK+C,YAAcR,EADnCD,EAAcC,EAAGC,GAEjBD,EAAElC,UAAkB,OAANmC,EAAarC,OAAO6C,OAAOR,IAAMM,EAAGzC,UAAYmC,EAAEnC,UAAW,IAAIyC,GA0B5E,SAASG,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2Hd,EAAvHe,EAAIC,UAAUnB,OAAQoB,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOlD,OAAOsD,yBAAyBN,EAAQC,GAAOC,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAAST,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIO,EAAIV,EAAWd,OAAS,EAAGwB,GAAK,EAAGA,KAASrB,EAAIW,EAAWU,MAAIJ,GAAKF,EAAI,EAAIf,EAAEiB,GAAKF,EAAI,EAAIf,EAAEY,EAAQC,EAAKI,GAAKjB,EAAEY,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKrD,OAAOC,eAAe+C,EAAQC,EAAKI,GAAIA,oBC7B9D,SAAAK,EAAYC,EAAcC,GAA1B,IAAAC,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAKG,EAAIL,EAAGhE,IACZkE,EAAKI,GAAKL,EAAGjE,IAAMkE,EAAKG,EACxBH,EAAKK,EAAIP,EAAG/D,IACZiE,EAAKM,GAAKP,EAAGhE,IAAMiE,EAAKK,IAkE5B,OAjF0CxB,EAAAgB,EAAAI,GAkBxCJ,EAAAxD,UAAAkE,YAAA,SAAYC,GACV,IAAM1E,EAAME,KAAKmE,EAAInE,KAAKoE,GAAKI,EACzBzE,EAAMC,KAAKqE,EAAIrE,KAAKsE,GAAKE,EAC/B,OAAO,IAAI3E,EAASC,EAAKC,IAG3B8D,EAAAxD,UAAAoE,cAAA,SAAc9B,GAEZ,IAAMwB,GADNxB,EAAI9C,EAASgC,QAAQc,IACT7C,IAAME,KAAKmE,EACjBE,EAAI1B,EAAE5C,IAAMC,KAAKqE,EACjBK,EAAKP,EAAInE,KAAKoE,GAAKC,EAAIrE,KAAKsE,GAC5BK,EAAIC,KAAKC,KAAKV,EAAIA,EAAIE,EAAIA,GAChC,OAAa,IAANM,EAAUD,EAAKC,EAAIA,GAM5Bd,EAAAxD,UAAAyE,MAAA,SAAMhB,EAA+CC,GACnD,YAAW,IAAPD,EACK,CAAC9D,KAAKuE,YAAY,GAAIvE,KAAKuE,YAAY,SAC9B,IAAPR,GACTD,EAAKA,EACED,EAAqBkB,QAAQjB,EAAG,GAAIA,EAAG,KAEvCD,EAAqBkB,QAAQjB,EAAmBC,IAI3DF,EAAAxD,UAAAI,OAAA,SAAOC,GACL,OAAIV,OAASU,GAEFA,aAAgBmD,IAClB7D,KAAKmE,IAAMzD,EAAKyD,GAAKnE,KAAKoE,KAAO1D,EAAK0D,IACtCpE,KAAKqE,IAAM3D,EAAK2D,GAAKrE,KAAKsE,KAAO5D,EAAK4D,KAO1CT,EAAAkB,QAAP,SAAeC,EAAYxC,GACzB,OAAIwC,aAAanF,GAAY2C,aAAa3C,EACjC,IAAIgE,EAAqBmB,EAAGxC,GAC1B3C,EAASwC,MAAM2C,IAAMnF,EAASwC,MAAMG,GACtC,IAAIqB,EAAqBhE,EAASgC,QAAQmD,GAAInF,EAASgC,QAAQW,IAEjEyC,EAAAA,aAAaF,QAAQC,EAAGxC,IAG1BqB,EAAAqB,WAAP,SAAkBF,EAAYxC,GAC5B,OAAIwC,aAAanF,GAAY2C,aAAa3C,EACjC,IAAIgE,EAAqBmB,EAAGxC,GAE9B,MAGFqB,EAAAsB,cAAP,SAAqBH,EAAYxC,GAC/B,OAAKwC,aAAanF,GAAYA,EAASiC,OAAOkD,MAAQxC,aAAa3C,GAAYA,EAASiC,OAAOU,IACtF,IAAIqB,EAAqBhE,EAASgC,QAAQmD,GAAInF,EAASgC,QAAQW,IAEjE,MAEXqB,GAjF0CoB,EAAAA,cAkF1CA,EAAAA,aAAaG,gBAAgBvB,oBC5D3B,SAAAwB,EAAYC,EAAgBC,EAAgBC,EAAgBC,GAC1DzF,KAAK0F,QAAUJ,GAAUE,EAASF,EAASE,EAC3CxF,KAAK2F,QAAUJ,GAAUE,EAASF,EAASE,EAC3CzF,KAAK4F,QAAUN,GAAUE,EAASA,EAASF,EAC3CtF,KAAK6F,QAAUN,GAAUE,EAASA,EAASF,EAuQ/C,OApQEpF,OAAAC,eAAIiF,EAAAhF,UAAA,SAAM,KAAV,WACE,OAAOL,KAAK0F,yCAGdvF,OAAAC,eAAIiF,EAAAhF,UAAA,SAAM,KAAV,WACE,OAAOL,KAAK2F,yCAGdxF,OAAAC,eAAIiF,EAAAhF,UAAA,SAAM,KAAV,WACE,OAAOL,KAAK4F,yCAGdzF,OAAAC,eAAIiF,EAAAhF,UAAA,SAAM,KAAV,WACE,OAAOL,KAAK6F,yCAGd1F,OAAAC,eAAIiF,EAAAhF,UAAA,OAAI,KAAR,WACE,OAAOL,KAAK0F,yCAGdvF,OAAAC,eAAIiF,EAAAhF,UAAA,QAAK,KAAT,WACE,OAAOL,KAAK2F,yCAGdxF,OAAAC,eAAIiF,EAAAhF,UAAA,OAAI,KAAR,WACE,OAAOL,KAAK4F,yCAGdzF,OAAAC,eAAIiF,EAAAhF,UAAA,QAAK,KAAT,WACE,OAAOL,KAAK6F,yCAGd1F,OAAAC,eAAIiF,EAAAhF,UAAA,YAAS,KAAb,WACE,OAAO,IAAIR,EAASG,KAAK0F,QAAS1F,KAAK2F,0CAGzCxF,OAAAC,eAAIiF,EAAAhF,UAAA,YAAS,KAAb,WACE,OAAO,IAAIR,EAASG,KAAK4F,QAAS5F,KAAK2F,0CAGzCxF,OAAAC,eAAIiF,EAAAhF,UAAA,YAAS,KAAb,WACE,OAAO,IAAIR,EAASG,KAAK4F,QAAS5F,KAAK6F,0CAGzC1F,OAAAC,eAAIiF,EAAAhF,UAAA,YAAS,KAAb,WACE,OAAO,IAAIR,EAASG,KAAK0F,QAAS1F,KAAK6F,0CAGzC1F,OAAAC,eAAIiF,EAAAhF,UAAA,SAAM,KAAV,WACE,OAAO,IAAIR,GAAUG,KAAK0F,QAAU1F,KAAK4F,SAAW,GAC/B5F,KAAK2F,QAAU3F,KAAK6F,SAAW,oCAKtDR,EAAAhF,UAAAyF,SAAA,SAASpF,EAAwC2D,GAC/C,GAAoB,iBAAT3D,EACT,OAAOV,KAAK0F,SAAWhF,GAAQA,GAAQV,KAAK4F,SACrC5F,KAAK2F,SAAWtB,GAAMA,GAAMrE,KAAK6F,QACnC,GAAIhG,EAASwC,MAAM3B,GACxB,OAAOV,KAAK+F,cAAclG,EAASgC,QAAQnB,IACtC,GAAI2E,EAAOhD,MAAM3B,GACtB,OAAOV,KAAKgG,YAAYX,EAAOxD,QAAQnB,IAEvC,MAAM,IAAIsB,UAAU,GAAKtB,IAK7B2E,EAAAhF,UAAA0F,cAAA,SAAcrF,GACZ,OAAOV,KAAK0F,SAAWhF,EAAKT,MAAQS,EAAKT,MAAQD,KAAK4F,SAC/C5F,KAAK2F,SAAWjF,EAAKR,MAAQQ,EAAKR,MAAQF,KAAK6F,SAIxDR,EAAAhF,UAAA2F,YAAA,SAAYtF,GACV,OAAOV,KAAK0F,SAAWhF,EAAKgF,SAAWhF,EAAKkF,SAAW5F,KAAK4F,SACrD5F,KAAK2F,SAAWjF,EAAKiF,SAAWjF,EAAKmF,SAAW7F,KAAK6F,SAG9DR,EAAAhF,UAAA4F,WAAA,SAAWvF,GACT,GAAIb,EAASwC,MAAM3B,GACjB,OAAOV,KAAKkG,gBAAgBrG,EAASgC,QAAQnB,IACxC,GAAI2E,EAAOhD,MAAM3B,GACtB,OAAOV,KAAKmG,cAAcd,EAAOxD,QAAQnB,IAEzC,MAAM,IAAIsB,UAAU,GAAKtB,IAK7B2E,EAAAhF,UAAA6F,gBAAA,SAAgBxF,GACd,OAAOV,KAAK0F,SAAWhF,EAAKT,MAAQS,EAAKT,MAAQD,KAAK4F,SAC/C5F,KAAK2F,SAAWjF,EAAKR,MAAQQ,EAAKR,MAAQF,KAAK6F,SAIxDR,EAAAhF,UAAA8F,cAAA,SAAczF,GACZ,OAAOV,KAAK0F,SAAWhF,EAAKkF,SAAWlF,EAAKgF,SAAW1F,KAAK4F,SACrD5F,KAAK2F,SAAWjF,EAAKmF,SAAWnF,EAAKiF,SAAW3F,KAAK6F,SAG9DR,EAAAhF,UAAA+F,MAAA,SAAM1F,GACJ,GAAIb,EAASwC,MAAM3B,GACjB,OAAOV,KAAKqG,WAAWxG,EAASgC,QAAQnB,IACnC,GAAI2E,EAAOhD,MAAM3B,GACtB,OAAOV,KAAKsG,SAASjB,EAAOxD,QAAQnB,IAEpC,MAAM,IAAIsB,UAAU,GAAKtB,IAK7B2E,EAAAhF,UAAAgG,WAAA,SAAW3F,GACT,OAAO,IAAI2E,EAAOT,KAAK2B,IAAIvG,KAAK0F,QAAShF,EAAKT,MAC5B2E,KAAK2B,IAAIvG,KAAK2F,QAASjF,EAAKR,MAC5B0E,KAAK4B,IAAIxG,KAAK4F,QAASlF,EAAKT,MAC5B2E,KAAK4B,IAAIxG,KAAK6F,QAASnF,EAAKR,QAIhDmF,EAAAhF,UAAAiG,SAAA,SAAS5F,GACP,OAAO,IAAI2E,EAAOT,KAAK2B,IAAIvG,KAAK0F,QAAShF,EAAKgF,SAC5Bd,KAAK2B,IAAIvG,KAAK2F,QAASjF,EAAKiF,SAC5Bf,KAAK4B,IAAIxG,KAAK4F,QAASlF,EAAKkF,SAC5BhB,KAAK4B,IAAIxG,KAAK6F,QAASnF,EAAKmF,WAGhDR,EAAAhF,UAAAC,QAAA,SAAQC,GACN,IAAMkG,EAAalG,EAAWD,QAAQN,KAAK0F,QAAS1F,KAAK2F,SACnDe,EAAWnG,EAAWD,QAAQN,KAAK4F,QAAS5F,KAAK6F,SACnDc,EAAOF,EAAWG,GAClBC,EAAOJ,EAAWK,GAClBC,EAAOL,EAASE,GAChBI,EAAON,EAASI,GACpB,GAAIH,EAAOI,EAAM,CACf,IAAM5C,EAAIwC,EACVA,EAAOI,EACPA,EAAO5C,EAET,GAAI0C,EAAOG,EAAM,CACf,IAAM3C,EAAIwC,EACVA,EAAOG,EACPA,EAAO3C,EAcT,OAZK4C,SAASN,KACZA,GAAQO,EAAAA,GAELD,SAASJ,KACZA,GAAQK,EAAAA,GAELD,SAASF,KACZA,EAAOG,EAAAA,GAEJD,SAASD,KACZA,EAAOE,EAAAA,GAEF,IAAIC,EAAAA,MAAMR,EAAME,EAAME,EAAMC,IAGrC3B,EAAAhF,UAAAG,MAAA,WACE,MAAO,CACL8E,OAAQtF,KAAK0F,QACbH,OAAQvF,KAAK2F,QACbH,OAAQxF,KAAK4F,QACbH,OAAQzF,KAAK6F,UAIPR,EAAAhF,UAAA+G,SAAV,SAAmB1G,GACjB,OAAO,GAGT2E,EAAAhF,UAAAI,OAAA,SAAOC,GACL,OAAIV,OAASU,GAEFA,aAAgB2E,IAClB3E,EAAK0G,SAASpH,OAASA,KAAK0F,UAAYhF,EAAKgF,SAAW1F,KAAK2F,UAAYjF,EAAKiF,SAC9E3F,KAAK4F,UAAYlF,EAAKkF,SAAW5F,KAAK6F,UAAYnF,EAAKmF,UAKlER,EAAAhF,UAAAM,SAAA,WAIE,YAHyB,IAArB0E,EAAOzE,YACTyE,EAAOzE,UAAYC,EAAAA,QAAQC,KAAKuE,IAE3BxE,EAAAA,QAAQE,KAAKF,EAAAA,QAAQG,IAAIH,EAAAA,QAAQG,IAAIH,EAAAA,QAAQG,IAAIH,EAAAA,QAAQG,IAAIqE,EAAOzE,UACvEC,EAAAA,QAAQI,KAAKjB,KAAK0F,UAAW7E,EAAAA,QAAQI,KAAKjB,KAAK2F,UAC/C9E,EAAAA,QAAQI,KAAKjB,KAAK4F,UAAW/E,EAAAA,QAAQI,KAAKjB,KAAK6F,YAGrDR,EAAAhF,UAAAa,MAAA,SAAMC,GACJA,EAAOC,MAAM,UAAUA,MAAM,IAAWA,MAAM,MAAMA,MAAM,IACrDF,MAAMlB,KAAK0F,SAAStE,MAAM,MAAMF,MAAMlB,KAAK2F,SAASvE,MAAM,MAC1DF,MAAMlB,KAAK4F,SAASxE,MAAM,MAAMF,MAAMlB,KAAK6F,SAASzE,MAAM,KAGjEiE,EAAAhF,UAAAgB,SAAA,WACE,OAAOC,EAAAA,OAAOJ,MAAMlB,OAMfqF,EAAAgC,MAAP,WAIE,YAHsB,IAAlBhC,EAAOiC,SACTjC,EAAOiC,OAAS,IAAIjC,EAAO,EAAG,EAAG,EAAG,IAE/BA,EAAOiC,QAITjC,EAAAkC,MAAP,WAIE,YAHsB,IAAlBlC,EAAOmC,SACTnC,EAAOmC,OAAS,IAAInC,GAAQ,KAAM,GAAI,IAAK,KAEtCA,EAAOmC,QAGTnC,EAAA5D,KAAP,SAAY6D,EAAgBC,EAAgBC,EAAiBC,GAO3D,YANe,IAAXD,IACFA,EAASF,QAEI,IAAXG,IACFA,EAASF,GAEJ,IAAIF,EAAOC,EAAQC,EAAQC,EAAQC,IAGrCJ,EAAA3D,SAAP,SAAgBC,GACd,OAAO,IAAI0D,EAAO1D,EAAM2D,OAAQ3D,EAAM4D,OAAQ5D,EAAM6D,OAAQ7D,EAAM8D,SAG7DJ,EAAAxD,QAAP,SAAeF,GACb,GAAIA,aAAiB0D,EACnB,OAAO1D,EACF,GAAI0D,EAAOvD,OAAOH,GACvB,OAAO0D,EAAO3D,SAASC,GAEzB,MAAM,IAAIK,UAAU,GAAKL,IAIpB0D,EAAAvD,OAAP,SAAcH,GACZ,GAAqB,iBAAVA,GAAgC,OAAVA,EAAgB,CAC/C,IAAMM,EAAON,EACb,MAA8B,iBAAhBM,EAAKqD,QACW,iBAAhBrD,EAAKsD,QACW,iBAAhBtD,EAAKuD,QACW,iBAAhBvD,EAAKwD,OAErB,OAAO,GAIFJ,EAAAhD,MAAP,SAAaV,GACX,OAAOA,aAAiB0D,GACjBA,EAAOvD,OAAOH,IAEzB0D,mBC5RA,SAAAoC,mDA2KA,OA3KqC5E,EAAA4E,EAAAxD,GACnC9D,OAAAC,eAAIqH,EAAApH,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDAGdvH,OAAAC,eAAIqH,EAAApH,UAAA,gBAAa,KAAjB,WACE,IAAMsH,EAAa3H,KAAK2H,WACxB,OAAOC,EAAQC,GAAGF,GAAcA,EAAWG,cAAgB,sCAG7D3H,OAAAC,eAAIqH,EAAApH,UAAA,UAAO,KAAX,WACE,IAAMsH,EAAa3H,KAAK2H,WACxB,OAAOC,EAAQC,GAAGF,GAAcA,EAAWI,QAAU,mCAGvD5H,OAAAC,eAAIqH,EAAApH,UAAA,aAAU,KAAd,WACE,IAAMsH,EAAa3H,KAAK2H,WACxB,OAAOC,EAAQC,GAAGF,GAAcA,EAAWK,WAAa,mCAG1D7H,OAAAC,eAAIqH,EAAApH,UAAA,UAAO,KAAX,WACE,IAAMsH,EAAa3H,KAAK2H,WACxB,OAAOC,EAAQC,GAAGF,GAAcA,EAAWM,QAAU,mCAG7CR,EAAApH,UAAA6H,QAAV,WACEjE,EAAA5D,UAAM6H,QAAOhE,KAAAlE,MACbA,KAAKmI,cAAcC,EAAAA,KAAKC,eAGhBZ,EAAApH,UAAAiI,aAAV,SAAuBC,GACrB,IAAIC,EAAkB,EAKtB,OAJ0C,IAArCD,EAAcH,EAAAA,KAAKC,gBACtBG,GAAmBJ,EAAAA,KAAKK,aAE1BD,GAAmBvE,EAAA5D,UAAMiI,aAAYpE,KAAAlE,KAACuI,EAAcC,IAItDf,EAAApH,UAAAqI,aAAA,SAAaC,EAAyBC,GAIpC,OAH8C,IAAzC5I,KAAK6I,WAAaT,EAAAA,KAAKU,gBAC1BH,IAAiBP,EAAAA,KAAKU,cAEjBH,GAIClB,EAAApH,UAAA0I,UAAV,SAAoBJ,EAAyBC,GAC3C,IAAII,EAAeL,EACnB3I,KAAK6I,cAAgBT,EAAAA,KAAKa,aAAeb,EAAAA,KAAKc,aAC9ClJ,KAAKmJ,YAAYP,GACjB5I,KAAK6I,YAAcT,EAAAA,KAAKgB,eACxB,IACgE,KAAxDpJ,KAAK6I,WAAaF,GAAgBP,EAAAA,KAAKiB,eAC3CL,GAAgBZ,EAAAA,KAAKiB,YACrBrJ,KAAK6I,aAAeT,EAAAA,KAAKiB,YACzBrJ,KAAKsJ,WAAWV,IAE4C,KAAxD5I,KAAK6I,WAAaF,GAAgBP,EAAAA,KAAKmB,eAC3CP,GAAgBZ,EAAAA,KAAKmB,YACrBvJ,KAAK6I,aAAeT,EAAAA,KAAKmB,YACzBvJ,KAAKwJ,WAAWZ,IAE6C,KAAzD5I,KAAK6I,WAAaF,GAAgBP,EAAAA,KAAKU,gBAC3CE,GAAgBZ,EAAAA,KAAKU,aACrB9I,KAAK6I,aAAeT,EAAAA,KAAKU,aACzB9I,KAAKyJ,YAAYb,IAE4C,KAAzD5I,KAAK6I,WAAaF,GAAgBP,EAAAA,KAAKC,gBAC3CW,GAAgBZ,EAAAA,KAAKC,aACrBrI,KAAK6I,aAAeT,EAAAA,KAAKC,aACzBrI,KAAK0J,YAAYd,IAGnB5I,KAAK2J,UAAUf,GAC2B,IAArCI,EAAeZ,EAAAA,KAAKiB,cACvBrJ,KAAK4J,SAAShB,GAE0B,IAArCI,EAAeZ,EAAAA,KAAKmB,cACvBvJ,KAAK6J,SAASjB,GAE2B,IAAtCI,EAAeZ,EAAAA,KAAKU,eACvB9I,KAAK8J,UAAUlB,GAE0B,IAAtCI,EAAeZ,EAAAA,KAAKC,eACvBrI,KAAK+J,UAAUnB,GAGjB5I,KAAKgK,oBAAoBhB,EAAcJ,GAEI,IAAtCI,EAAeZ,EAAAA,KAAKC,eACvBrI,KAAKiK,WAAWrB,GAEyB,IAAtCI,EAAeZ,EAAAA,KAAKU,eACvB9I,KAAKkK,WAAWtB,GAEwB,IAArCI,EAAeZ,EAAAA,KAAKmB,cACvBvJ,KAAKmK,UAAUvB,GAEyB,IAArCI,EAAeZ,EAAAA,KAAKiB,cACvBrJ,KAAKoK,UAAUxB,WAGjB5I,KAAK6I,aAAeT,EAAAA,KAAKgB,eACzBpJ,KAAKqK,WAAWzB,KAIVnB,EAAApH,UAAAqJ,YAAV,SAAsBd,GACpB5I,KAAKsK,aAAY,SAAUC,QACY,IAAjCA,EAAaC,iBACfD,EAAaC,gBAAgB5B,EAAa5I,UAKtCyH,EAAApH,UAAA0J,UAAV,SAAoBnB,KAIVnB,EAAApH,UAAA4J,WAAV,SAAqBrB,GACnB5I,KAAKyK,YAAW,SAAUF,QACY,IAAhCA,EAAaG,gBACfH,EAAaG,eAAe9B,EAAa5I,UAK/CyH,EAAApH,UAAAsK,aAAA,SAAaC,QAAA,IAAAA,IAAAA,EAAmB5K,KAAK4K,UACnC5K,KAAK6K,WAAWD,EAAS3E,WAAWjG,KAAK8K,aAG3C3K,OAAAC,eAAIqH,EAAApH,UAAA,WAAQ,KAAZ,WACE,IAAMsH,EAAa3H,KAAK2H,WACxB,OAAOC,EAAQC,GAAGF,GAAcA,EAAWiD,SAAWvF,EAAOkC,yCAG/DpH,OAAAC,eAAIqH,EAAApH,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK4K,0CAGdnD,EAAApH,UAAA0K,gBAAA,WAGE,IAFA,IAAID,EACEE,EAAahL,KAAKiL,YACfrH,EAAI,EAAGsH,EAAIF,EAAW5I,OAAQwB,EAAIsH,EAAGtH,GAAK,EAAG,CACpD,IAAMuH,EAAYH,EAAWpH,GAC7B,GAAIgE,EAAQC,GAAGsD,KAAeA,EAAUC,WAAY,CAClD,IAAMC,EAAiBF,EAAUL,UAE/BA,OADgB,IAAdA,EACUO,EAEAP,EAAU1E,MAAMiF,IAOlC,YAHkB,IAAdP,IACFA,EAAY9K,KAAK4K,UAEZE,GAGCrD,EAAApH,UAAAiL,gBAAV,SAA0BC,EAAsBC,GAC9C,IAAM7D,EAAa3H,KAAKyL,YACpB7D,EAAQC,GAAGF,IACbA,EAAW+D,yBAAyB1L,KAAMuL,EAAcC,IAI5D/D,EAAApH,UAAAqL,yBAAA,SAAyBP,EAAoBI,EAAsBC,KAGrE/D,GA3KqCkE,EAAAA,2BCoBnC,SAAAC,EAAYC,EAAeC,EAAkBlB,EACjCE,EAAmBiB,EACnBC,EAA2BC,EAC3BC,EAA2BC,EAC3BC,EAA+BC,GACzCrM,KAAKsM,OAAST,EACd7L,KAAKuM,UAAYT,EACjB9L,KAAKwM,UAAY5B,EACjB5K,KAAKyM,WAAa3B,EAClB9K,KAAK0M,WAAaX,EAClB/L,KAAK2M,WAAaX,EAClBhM,KAAK4M,WAAaX,EAClBjM,KAAK6M,WAAaX,EAClBlM,KAAK8M,WAAaX,EAClBnM,KAAK+M,OAASX,EACdpM,KAAKgN,MAAQX,EAudjB,OApdElM,OAAAC,eAAIwL,EAAAvL,UAAA,QAAK,KAAT,WACE,OAAOL,KAAKsM,wCAGdnM,OAAAC,eAAIwL,EAAAvL,UAAA,WAAQ,KAAZ,WACE,OAAOL,KAAKuM,2CAGdpM,OAAAC,eAAIwL,EAAAvL,UAAA,WAAQ,KAAZ,WACE,OAAOL,KAAKwM,2CAGdrM,OAAAC,eAAIwL,EAAAvL,UAAA,YAAS,KAAb,WACE,OAAOL,KAAKyM,4CAGdtM,OAAAC,eAAIwL,EAAAvL,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK0M,4CAGdvM,OAAAC,eAAIwL,EAAAvL,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK2M,4CAGdxM,OAAAC,eAAIwL,EAAAvL,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK4M,4CAGdzM,OAAAC,eAAIwL,EAAAvL,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK6M,4CAGd1M,OAAAC,eAAIwL,EAAAvL,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK8M,4CAGd3M,OAAAC,eAAIwL,EAAAvL,UAAA,OAAI,KAAR,WACE,OAAOL,KAAKgN,uCAGdpB,EAAAvL,UAAA4M,QAAA,WACE,OAAsB,IAAfjN,KAAKgN,OAGdpB,EAAAvL,UAAAyF,SAAA,SAASoH,GACP,OAAOlN,KAAKwM,UAAU1G,SAASoH,IAGjCtB,EAAAvL,UAAA4F,WAAA,SAAWiH,GACT,OAAOlN,KAAKwM,UAAUvG,WAAWiH,IAGnCtB,EAAAvL,UAAA8M,QAAA,SAAQD,GACN,GAAIlN,KAAKsM,OAAStM,KAAKuM,UAAW,CAChC,IAAMR,EAAY/L,KAAK0M,WACjBU,EAASF,EAAO5H,QAAUyG,EAAUjM,IACpCuN,EAAUH,EAAO3H,QAAUwG,EAAUhM,IACrCuN,EAASJ,EAAO1H,OAASuG,EAAUjM,IACnCyN,EAAUL,EAAOzH,OAASsG,EAAUhM,IAC1C,GAAIqN,IAAWE,GAAUD,IAAYE,EACnC,GAAIF,GAAWD,EAAQ,CACrB,IAAMpB,EAAYhM,KAAK2M,WACvB,GAAkB,OAAdX,EACF,OAAOA,EAAUmB,QAAQD,QAEtB,GAAIK,GAAWH,EAAQ,CAC5B,IAAMnB,EAAYjM,KAAK4M,WACvB,GAAkB,OAAdX,EACF,OAAOA,EAAUkB,QAAQD,QAEtB,GAAIG,GAAWC,EAAQ,CAC5B,IAAMpB,EAAYlM,KAAK6M,WACvB,GAAkB,OAAdX,EACF,OAAOA,EAAUiB,QAAQD,QAEtB,GAAIK,GAAWD,EAAQ,CAC5B,IAAMnB,EAAYnM,KAAK8M,WACvB,GAAkB,OAAdX,EACF,OAAOA,EAAUgB,QAAQD,IAKjC,OAAOlN,MAGT4L,EAAAvL,UAAAmN,SAAA,SAASC,EAAeP,GACtB,GAAIlN,KAAKsM,OAAStM,KAAKuM,UAAW,CAChC,IAAMR,EAAY/L,KAAK0M,WACjBU,EAASF,EAAO5H,QAAUyG,EAAUjM,IACpCuN,EAAUH,EAAO3H,QAAUwG,EAAUhM,IACrCuN,EAASJ,EAAO1H,OAASuG,EAAUjM,IACnCyN,EAAUL,EAAOzH,OAASsG,EAAUhM,IAC1C,GAAIqN,IAAWE,GAAUD,IAAYE,EAAS,CAC5C,GAAIF,GAAWD,EAAQ,CACrB,IAAMM,EAAe1N,KAAK2M,WACtBgB,EAAeD,EAOnB,OANqB,OAAjBC,IACFA,EAAe3N,KAAK4N,WAAW5N,KAAKsM,OAAS,EAAGtM,KAAKuM,UACtB,IAAIlH,EAAOrF,KAAKwM,UAAU9G,QAAS1F,KAAKwM,UAAU7G,QACvC3F,KAAK0M,WAAWzM,KAAMD,KAAK0M,WAAWxM,QAG9EwN,KADJC,EAAeA,EAAaH,SAASC,EAAMP,IAElClN,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1DiB,EAAc3N,KAAK4M,WAAY5M,KAAK6M,WAAY7M,KAAK8M,WACrD9M,KAAK+M,OAAQ/M,KAAKgN,MAAQ,GAE1ChN,KAEJ,GAAIuN,GAAWH,EAAQ,CAC5B,IAAMS,EAAe7N,KAAK4M,WACtBkB,EAAeD,EAOnB,OANqB,OAAjBC,IACFA,EAAe9N,KAAK4N,WAAW5N,KAAKsM,OAAS,EAAGtM,KAAKuM,UACtB,IAAIlH,EAAOrF,KAAKwM,UAAU9G,QAAS1F,KAAK0M,WAAWxM,KACxCF,KAAK0M,WAAWzM,KAAMD,KAAKwM,UAAU3G,WAG7EgI,KADJC,EAAeA,EAAaN,SAASC,EAAMP,IAElClN,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1D1M,KAAK2M,WAAYmB,EAAc9N,KAAK6M,WAAY7M,KAAK8M,WACrD9M,KAAK+M,OAAQ/M,KAAKgN,MAAQ,GAE1ChN,KAEJ,GAAIqN,GAAWC,EAAQ,CAC5B,IAAMS,EAAe/N,KAAK6M,WACtBmB,EAAeD,EAOnB,OANqB,OAAjBC,IACFA,EAAehO,KAAK4N,WAAW5N,KAAKsM,OAAS,EAAGtM,KAAKuM,UACtB,IAAIlH,EAAOrF,KAAK0M,WAAWzM,KAAMD,KAAKwM,UAAU7G,QACrC3F,KAAKwM,UAAU5G,QAAS5F,KAAK0M,WAAWxM,QAGhF6N,KADJC,EAAeA,EAAaR,SAASC,EAAMP,IAElClN,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1D1M,KAAK2M,WAAY3M,KAAK4M,WAAYoB,EAAchO,KAAK8M,WACrD9M,KAAK+M,OAAQ/M,KAAKgN,MAAQ,GAE1ChN,KAEJ,GAAIuN,GAAWD,EAAQ,CAC5B,IAAMW,EAAejO,KAAK8M,WACtBoB,EAAeD,EAOnB,OANqB,OAAjBC,IACFA,EAAelO,KAAK4N,WAAW5N,KAAKsM,OAAS,EAAGtM,KAAKuM,UACtB,IAAIlH,EAAOrF,KAAK0M,WAAWzM,KAAMD,KAAK0M,WAAWxM,KACtCF,KAAKwM,UAAU5G,QAAS5F,KAAKwM,UAAU3G,WAG/EoI,KADJC,EAAeA,EAAaV,SAASC,EAAMP,IAElClN,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1D1M,KAAK2M,WAAY3M,KAAK4M,WAAY5M,KAAK6M,WAAYqB,EACnDlO,KAAK+M,OAAQ/M,KAAKgN,MAAQ,GAE1ChN,OAKf,IAAMmO,EAAWnO,KAAK+M,OACtB,GAAIoB,EAASC,QAAQX,GAAQ,EAAG,CAC9B,IAAMY,EAAWF,EAASG,MAAM,GAEhC,OADAD,EAASE,KAAKd,GACPzN,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1D1M,KAAK2M,WAAY3M,KAAK4M,WAAY5M,KAAK6M,WAAY7M,KAAK8M,WACxDuB,EAAUrO,KAAKgN,MAAQ,GAE9C,OAAOhN,MAIX4L,EAAAvL,UAAAmO,QAAA,SAAQf,EAAeP,GACrB,GAAIlN,KAAKsM,OAAStM,KAAKuM,UAAW,CAChC,IAAMR,EAAY/L,KAAK0M,WACjBU,EAASF,EAAO5H,QAAUyG,EAAUjM,IACpCuN,EAAUH,EAAO3H,QAAUwG,EAAUhM,IACrCuN,EAASJ,EAAO1H,OAASuG,EAAUjM,IACnCyN,EAAUL,EAAOzH,OAASsG,EAAUhM,IAC1C,GAAIqN,IAAWE,GAAUD,IAAYE,EAAS,CAC5C,GAAIF,GAAWD,EAAQ,CACrB,IAAMM,EAAe1N,KAAK2M,WAC1B,GAAqB,OAAjBe,EAAuB,CACzB,IAAIC,EAA+BD,EAAac,QAAQf,EAAMP,GAI9D,OAHIS,EAAaV,YACfU,EAAe,MAEV3N,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1DiB,EAAc3N,KAAK4M,WAAY5M,KAAK6M,WAAY7M,KAAK8M,WACrD9M,KAAK+M,OAAQ/M,KAAKgN,MAAQ,GAEjD,OAAOhN,KAEJ,GAAIuN,GAAWH,EAAQ,CAC5B,IAAMS,EAAe7N,KAAK4M,WAC1B,GAAqB,OAAjBiB,EAAuB,CACzB,IAAIC,EAA+BD,EAAaW,QAAQf,EAAMP,GAI9D,OAHIY,EAAab,YACfa,EAAe,MAEV9N,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1D1M,KAAK2M,WAAYmB,EAAc9N,KAAK6M,WAAY7M,KAAK8M,WACrD9M,KAAK+M,OAAQ/M,KAAKgN,MAAQ,GAEjD,OAAOhN,KAEJ,GAAIqN,GAAWC,EAAQ,CAC5B,IAAMS,EAAe/N,KAAK6M,WAC1B,GAAqB,OAAjBkB,EAAuB,CACzB,IAAIC,EAA+BD,EAAaS,QAAQf,EAAMP,GAI9D,OAHIc,EAAaf,YACfe,EAAe,MAEVhO,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1D1M,KAAK2M,WAAY3M,KAAK4M,WAAYoB,EAAchO,KAAK8M,WACrD9M,KAAK+M,OAAQ/M,KAAKgN,MAAQ,GAEjD,OAAOhN,KAEJ,GAAIuN,GAAWD,EAAQ,CAC5B,IAAMW,EAAejO,KAAK8M,WAC1B,GAAqB,OAAjBmB,EAAuB,CACzB,IAAIC,EAA+BD,EAAaO,QAAQf,EAAMP,GAI9D,OAHIgB,EAAajB,YACfiB,EAAe,MAEVlO,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1D1M,KAAK2M,WAAY3M,KAAK4M,WAAY5M,KAAK6M,WAAYqB,EACnDlO,KAAK+M,OAAQ/M,KAAKgN,MAAQ,GAEjD,OAAOhN,OAKf,IAAMmO,EAAWnO,KAAK+M,OAChB0B,EAAQN,EAASC,QAAQX,GAC/B,GAAIgB,GAAS,EAAG,CACd,IAAMJ,EAAWF,EAASG,MAAM,GAEhC,OADAD,EAASK,OAAOD,EAAO,GAChBzO,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1D1M,KAAK2M,WAAY3M,KAAK4M,WAAY5M,KAAK6M,WAAY7M,KAAK8M,WACxDuB,EAAUrO,KAAKgN,MAAQ,GAE9C,OAAOhN,MAIX4L,EAAAvL,UAAAsO,MAAA,SAAMlB,EAAemB,EAAmBC,GACtC,GAAI7O,KAAKsM,OAAStM,KAAKuM,UAAW,CAChC,IAAMR,EAAY/L,KAAK0M,WACjBoC,EAAYF,EAAUtJ,QAAUyG,EAAUjM,IAC1CiP,EAAaH,EAAUrJ,QAAUwG,EAAUhM,IAC3CiP,EAAYJ,EAAUpJ,OAASuG,EAAUjM,IACzCmP,EAAaL,EAAUnJ,OAASsG,EAAUhM,IAC1CmP,EAAYL,EAAUvJ,QAAUyG,EAAUjM,IAC1CqP,EAAaN,EAAUtJ,QAAUwG,EAAUhM,IAC3CqP,EAAYP,EAAUrJ,OAASuG,EAAUjM,IACzCuP,EAAaR,EAAUpJ,OAASsG,EAAUhM,IAChD,GAAI+O,IAAcI,GAAaH,IAAeI,GAAcH,IAAcI,GAAaH,IAAeI,EA+CpG,OAAOrP,KAAKwO,QAAQf,EAAMoB,GAAWrB,SAASC,EAAMmB,GA7CpD,GAAIE,IAAcE,GAAaD,IAAeE,EAAY,CACxD,GAAIF,GAAcD,EAAW,CAC3B,IAAMpB,EAAe1N,KAAK2M,WACpBgB,EAAeD,EAAaiB,MAAMlB,EAAMmB,EAAWC,GACzD,OAAInB,IAAiBC,EACZ3N,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1DiB,EAAc3N,KAAK4M,WAAY5M,KAAK6M,WAAY7M,KAAK8M,WACrD9M,KAAK+M,OAAQ/M,KAAKgN,OAElChN,KAEJ,GAAIiP,GAAcH,EAAW,CAClC,IAAMjB,EAAe7N,KAAK4M,WACpBkB,EAAeD,EAAac,MAAMlB,EAAMmB,EAAWC,GACzD,OAAIhB,IAAiBC,EACZ9N,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1D1M,KAAK2M,WAAYmB,EAAc9N,KAAK6M,WAAY7M,KAAK8M,WACrD9M,KAAK+M,OAAQ/M,KAAKgN,OAElChN,KAEJ,GAAI+O,GAAcC,EAAW,CAClC,IAAMjB,EAAe/N,KAAK6M,WACpBmB,EAAeD,EAAaY,MAAMlB,EAAMmB,EAAWC,GACzD,OAAId,IAAiBC,EACZhO,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1D1M,KAAK2M,WAAY3M,KAAK4M,WAAYoB,EAAchO,KAAK8M,WACrD9M,KAAK+M,OAAQ/M,KAAKgN,OAElChN,KAEJ,GAAIiP,GAAcD,EAAW,CAClC,IAAMf,EAAejO,KAAK8M,WACpBoB,EAAeD,EAAaU,MAAMlB,EAAMmB,EAAWC,GACzD,OAAIZ,IAAiBC,EACZlO,KAAK4N,WAAW5N,KAAKsM,OAAQtM,KAAKuM,UAAWvM,KAAKwM,eAAW,EAAQxM,KAAK0M,WAC1D1M,KAAK2M,WAAY3M,KAAK4M,WAAY5M,KAAK6M,WAAYqB,EACnDlO,KAAK+M,OAAQ/M,KAAKgN,OAElChN,OASjB,OAAOA,MAGT4L,EAAAvL,UAAAiP,QAAA,SAAcC,EAAgDC,GAC5D,GAAwB,OAApBxP,KAAK2M,iBAEQ,KADT8C,EAASzP,KAAK2M,WAAW2C,QAAQC,EAAUC,IAE/C,OAAOC,EAGX,GAAwB,OAApBzP,KAAK4M,iBAEQ,KADT6C,EAASzP,KAAK4M,WAAW0C,QAAQC,EAAUC,IAE/C,OAAOC,EAGX,GAAwB,OAApBzP,KAAK6M,iBAEQ,KADT4C,EAASzP,KAAK6M,WAAWyC,QAAQC,EAAUC,IAE/C,OAAOC,EAGX,GAAwB,OAApBzP,KAAK8M,iBAEQ,KADT2C,EAASzP,KAAK8M,WAAWwC,QAAQC,EAAUC,IAE/C,OAAOC,EAIX,IADA,IAAMrD,EAAQpM,KAAK+M,OACVnJ,EAAI,EAAGA,EAAIwI,EAAMhK,OAAQwB,GAAK,EAAG,CACxC,IAAM6L,EACN,QAAe,KADTA,EAASF,EAASrL,KAAKsL,EAASpD,EAAMxI,KAE1C,OAAO6L,IAMb7D,EAAAvL,UAAAqP,oBAAA,SAA0BxC,EAAgBqC,EAAgDC,GACxF,GAAIxP,KAAKwM,UAAUvG,WAAWiH,GAAS,CACrC,GAAwB,OAApBlN,KAAK2M,WAEP,QAAe,KADT8C,EAASzP,KAAK2M,WAAW+C,oBAAoBxC,EAAQqC,EAAUC,IAEnE,OAAOC,EAGX,GAAwB,OAApBzP,KAAK4M,WAEP,QAAe,KADT6C,EAASzP,KAAK4M,WAAW8C,oBAAoBxC,EAAQqC,EAAUC,IAEnE,OAAOC,EAGX,GAAwB,OAApBzP,KAAK6M,WAEP,QAAe,KADT4C,EAASzP,KAAK6M,WAAW6C,oBAAoBxC,EAAQqC,EAAUC,IAEnE,OAAOC,EAGX,GAAwB,OAApBzP,KAAK8M,WAEP,QAAe,KADT2C,EAASzP,KAAK8M,WAAW4C,oBAAoBxC,EAAQqC,EAAUC,IAEnE,OAAOC,EAIX,IADA,IAAMrD,EAAQpM,KAAK+M,OACVnJ,EAAI,EAAGA,EAAIwI,EAAMhK,OAAQwB,GAAK,EAAG,CACxC,IAAM6L,EACN,QAAe,KADTA,EAASF,EAASrL,KAAKsL,EAASpD,EAAMxI,KAE1C,OAAO6L,KAOf7D,EAAAvL,UAAAsP,uBAAA,SAA6BzC,EAAgBqC,EAAgDC,GAC3F,IAAKxP,KAAKwM,UAAUvG,WAAWiH,GAAS,CACtC,GAAwB,OAApBlN,KAAK2M,WAEP,QAAe,KADT8C,EAASzP,KAAK2M,WAAWgD,uBAAuBzC,EAAQqC,EAAUC,IAEtE,OAAOC,EAGX,GAAwB,OAApBzP,KAAK4M,WAEP,QAAe,KADT6C,EAASzP,KAAK4M,WAAW+C,uBAAuBzC,EAAQqC,EAAUC,IAEtE,OAAOC,EAGX,GAAwB,OAApBzP,KAAK6M,WAEP,QAAe,KADT4C,EAASzP,KAAK6M,WAAW8C,uBAAuBzC,EAAQqC,EAAUC,IAEtE,OAAOC,EAGX,GAAwB,OAApBzP,KAAK8M,WAEP,QAAe,KADT2C,EAASzP,KAAK8M,WAAW6C,uBAAuBzC,EAAQqC,EAAUC,IAEtE,OAAOC,EAIX,IADA,IAAMrD,EAAQpM,KAAK+M,OACVnJ,EAAI,EAAGA,EAAIwI,EAAMhK,OAAQwB,GAAK,EAAG,CACxC,IAAM6L,EACN,QAAe,KADTA,EAASF,EAASrL,KAAKsL,EAASpD,EAAMxI,KAE1C,OAAO6L,KAOL7D,EAAAvL,UAAAuN,WAAV,SAAqB/B,EAAeC,EAAkBlB,EACjCE,EAAoBiB,EACpBC,EAAkCC,EAClCC,EAAkCC,EAClCC,EAAoCC,GAIvD,QANmB,IAAAL,IAAAA,EAAA,WAAkC,IAAAC,IAAAA,EAAA,WAClC,IAAAC,IAAAA,EAAA,WAAkC,IAAAC,IAAAA,EAAA,WAClC,IAAAC,IAAAA,EAAA,SAAoC,IAAAC,IAAAA,EAAA,QACrC,IAAdN,IACFA,EAAYnB,EAASgF,aAEL,IAAd9E,EAAsB,CACN,OAAdkB,IACFlB,EAAYkB,EAAUS,YAEN,OAAdR,IACFnB,OAA0B,IAAdA,EAAuBA,EAAU1E,MAAM6F,EAAUQ,YAAcR,EAAUQ,YAErE,OAAdP,IACFpB,OAA0B,IAAdA,EAAuBA,EAAU1E,MAAM8F,EAAUO,YAAcP,EAAUO,YAErE,OAAdN,IACFrB,OAA0B,IAAdA,EAAuBA,EAAU1E,MAAM+F,EAAUM,YAAcN,EAAUM,YAEvF,IAAK,IAAI7I,EAAI,EAAGA,EAAIwI,EAAMhK,OAAQwB,GAAK,EAAG,CACxC,IAAM6J,EAAOrB,EAAMxI,GACnBkH,OAA0B,IAAdA,EAAuBA,EAAU1E,MAAMqH,EAAK3C,WAAa2C,EAAK3C,eAE1D,IAAdA,IACFA,EAAYF,GAGhB,OAAO,IAAIgB,EAAQC,EAAOC,EAAUlB,EAAUE,EAAWiB,EACtCC,EAAWC,EAAWC,EAAWC,EAAWC,EAAOC,IAGjET,EAAAvE,MAAP,SAAauD,EAAmBiB,EAAgBC,GAW9C,YAViB,IAAblB,IACFA,EAAWvF,EAAOkC,cAEN,IAAVsE,IACFA,EAAQ,QAEO,IAAbC,IACFA,EAAW,IAGN,IAAIF,EAAQC,EADnBC,EAAWlH,KAAK4B,IAAIqF,EAAOC,GACSlB,EAAUA,EAAUA,EAASgF,OAAQ,KAAM,KAAM,KAAM,KAAM,GAAI,IAEzGhE,mBCxcE,SAAAiE,EAAYjF,EAAmBiB,EAAgBC,GAA/C,IAAA9H,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAKyH,YAAc,KACnBzH,EAAKiH,YAAcW,EAAQvE,MAAMuD,EAAUiB,EAAOC,GAClD9H,EAAK0D,gBAAkB,KACvB1D,EAAK6E,WAAa,IAquCtB,OApwCkChG,EAAAgN,EAAA5L,GAkChC9D,OAAAC,eAAIyP,EAAAxP,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDAGdmI,EAAAxP,UAAAyP,kBAAA,SAAkBC,GAChB,IAAMC,EAAoBhQ,KAAK0H,gBAC3BsI,IAAsBD,IACxB/P,KAAKiQ,sBAAsBF,GACD,OAAtBC,GACFA,EAAkBE,QAAQ,MAE5BlQ,KAAK0H,gBAAkBqI,EACG,OAAtBA,GACFA,EAAkBG,QAAQlQ,MAE5BA,KAAKmQ,oBAAoBJ,GACzB/P,KAAKoQ,qBAAqBL,KAI9B5P,OAAAC,eAAIyP,EAAAxP,UAAA,gBAAa,KAAjB,WACE,IAAIgQ,EAAgBrQ,KAAKsQ,eAKzB,YAJsB,IAAlBD,IACFA,EAAgB,GAChBrQ,KAAKsQ,eAAiBD,GAEjBA,mCAGTR,EAAAxP,UAAAkQ,gBAAA,SAAgBhG,GACd,IACIkE,EADA4B,EAAgBrQ,KAAKsQ,oBAEH,IAAlBD,GACFA,EAAgB,GAChBrQ,KAAKsQ,eAAiBD,EACtB5B,GAAS,GAETA,EAAQ4B,EAAcjC,QAAQ7D,GAE5BkE,EAAQ,IACVzO,KAAKwQ,oBAAoBjG,GACzB8F,EAAc9B,KAAKhE,GACnBvK,KAAKyQ,kBAAkBlG,GACvBvK,KAAK0Q,mBAAmBnG,KAI5BsF,EAAAxP,UAAAsQ,mBAAA,SAAmBpG,GACjB,IAAM8F,EAAgBrQ,KAAKsQ,eAC3B,QAAsB,IAAlBD,EAA0B,CAC5B,IAAM5B,EAAQ4B,EAAcjC,QAAQ7D,GAChCkE,GAAS,IACXzO,KAAK4Q,uBAAuBrG,GAC5B8F,EAAc3B,OAAOD,EAAO,GAC5BzO,KAAK6Q,qBAAqBtG,GAC1BvK,KAAK8Q,sBAAsBvG,MAKjCpK,OAAAC,eAAIyP,EAAAxP,UAAA,gBAAa,KAAjB,WACE,IAAMsH,EAAa3H,KAAK2H,WACxB,OAAOC,EAAQC,GAAGF,GAAcA,EAAWG,cAAgB,sCAG7D3H,OAAAC,eAAIyP,EAAAxP,UAAA,UAAO,KAAX,WACE,IAAMsH,EAAa3H,KAAK2H,WACxB,OAAOC,EAAQC,GAAGF,GAAcA,EAAWI,QAAU,mCAGvD5H,OAAAC,eAAIyP,EAAAxP,UAAA,aAAU,KAAd,WACE,IAAMsH,EAAa3H,KAAK2H,WACxB,OAAOC,EAAQC,GAAGF,GAAcA,EAAWK,WAAa,mCAG1D7H,OAAAC,eAAIyP,EAAAxP,UAAA,UAAO,KAAX,WACE,IAAMsH,EAAa3H,KAAK2H,WACxB,OAAOC,EAAQC,GAAGF,GAAcA,EAAWM,QAAU,mCAGvD9H,OAAAC,eAAIyP,EAAAxP,UAAA,aAAU,KAAd,WACE,IAAMsH,EAAa3H,KAAKyL,YACxB,OAAOsF,EAAAA,aAAalJ,GAAGF,GAAcA,EAAWqJ,WAAa,sCAM/D7Q,OAAAC,eAAIyP,EAAAxP,UAAA,MAAG,KAAP,WACE,IAAM+C,EAAMpD,KAAKiR,KACjB,YAAe,IAAR7N,EAAiBA,EAAM,sCAIhCyM,EAAAxP,UAAA6Q,OAAA,SAAO9N,GACO,OAARA,EACFpD,KAAKiR,KAAO7N,OACW,IAAdpD,KAAKiR,OACdjR,KAAKiR,UAAO,IAIhB9Q,OAAAC,eAAIyP,EAAAxP,UAAA,aAAU,KAAd,WACE,OAAOL,KAAKyL,6CAIdoE,EAAAxP,UAAA8Q,cAAA,SAAcC,EAA4BC,GACxCrR,KAAKsR,kBAAkBF,EAAeC,GACtCrR,KAAKyL,YAAc2F,EACnBpR,KAAKuR,gBAAgBH,EAAeC,GACpCrR,KAAKwR,iBAAiBJ,EAAeC,IAGvClR,OAAAC,eAAIyP,EAAAxP,UAAA,aAAU,KAAd,WACE,IAAM2K,EAAqB,GAI3B,OAHAhL,KAAKiL,YAAYqE,SAAQ,SAAUnE,GACjCH,EAAWuD,KAAKpD,KACfnL,MACIgL,mCAGT6E,EAAAxP,UAAAoR,aAAA,SAAarO,GACX,IAAMsO,EAAe1R,KAAK2R,cAC1B,QAAqB,IAAjBD,EAAyB,CAC3B,IAAMvG,EAAYuG,EAAatO,GAC/B,QAAkB,IAAd+H,EACF,OAAOA,EAGX,OAAO,MAGT0E,EAAAxP,UAAAuR,aAAA,SAAaxO,EAAayO,GACxB,GAAqB,OAAjBA,EAAuB,CACzB,IAAKjK,EAAQC,GAAGgK,GACd,MAAM,IAAI7P,UAAU,GAAK6P,GAE3BA,EAAaC,SAEf,IAAIC,EAA+B,KACnC,QAA2B,IAAvB/R,KAAK2R,cAA0B,CACjC,IAAMxG,EAAYnL,KAAK2R,cAAcvO,GACrC,QAAkB,IAAd+H,EAAsB,CAExB,IAAM6G,GADND,EAAe5G,GACyBL,UACxC9K,KAAKiS,oBAAoB9G,GACzBA,EAAUgG,cAAc,KAAMnR,MAC9BA,KAAKkS,mBAAmB/G,GACxB,IAAMK,EAAexL,KAAKiL,YAAYwB,WACtCzM,KAAKiL,YAAcjL,KAAKiL,YAAYuD,QAAQuD,EAAcC,IACpDzG,EAAevL,KAAKiL,YAAYwB,YACpBhM,OAAO+K,IACvBxL,KAAKsL,gBAAgBC,EAAcC,GAErCxL,KAAKmS,kBAAkBhH,GACvBnL,KAAKoS,mBAAmBjH,GACxBA,EAAU+F,OAAO,OAGrB,GAAqB,OAAjBW,EAAuB,CACzB,IAAMQ,EAAqBR,EAAa/G,UACxC+G,EAAaX,OAAO9N,GACpB,IAEMmI,EAFAC,EAAexL,KAAKiL,YAAYwB,WACtCzM,KAAKiL,YAAcjL,KAAKiL,YAAYuC,SAASqE,EAAcQ,IACrD9G,EAAevL,KAAKiL,YAAYwB,YACpBhM,OAAO+K,IACvBxL,KAAKsL,gBAAgBC,EAAcC,GAErCxL,KAAKsS,mBAAmBT,GACxBA,EAAaV,cAAcnR,KAAM,MACjCA,KAAKuS,kBAAkBV,EAAc,MACrC7R,KAAKwS,mBAAmBX,EAAc,MAExC,OAAOE,GAIClC,EAAAxP,UAAAiS,mBAAV,SAA6BnH,GAC3B,IAAM/H,EAAM+H,EAAU/H,IACtB,GAAY,OAARA,EAAc,CAChB,IAAIsO,EAAe1R,KAAK2R,mBACH,IAAjBD,IACFA,EAAe,GACf1R,KAAK2R,cAAgBD,GAEvBA,EAAatO,GAAO+H,IAKd0E,EAAAxP,UAAA6R,mBAAV,SAA6B/G,GAC3B,IAAMuG,EAAe1R,KAAK2R,cAC1B,QAAqB,IAAjBD,EAAyB,CAC3B,IAAMtO,EAAM+H,EAAU/H,IACV,OAARA,UACKsO,EAAatO,KAO1ByM,EAAAxP,UAAAoS,OAAA,SAAOC,EAA+CtP,GAKpD,MAJqB,mBAAVsP,IACTA,EAAQ3B,EAAAA,aAAa/N,OAAO0P,IAE9B1S,KAAK2S,gBAAgBD,EAAOtP,GACrBsP,GAGT7C,EAAAxP,UAAAsS,gBAAA,SAAgBxH,EAAiB/H,GAC/B,IAAKwE,EAAQC,GAAGsD,GACd,MAAM,IAAInJ,UAAU,GAAKmJ,GAE3BA,EAAU2G,cACE,IAAR1O,IACFpD,KAAK4S,gBAAgBxP,GACrB+H,EAAU+F,OAAO9N,IAEnB,IAAMyP,EAAkB1H,EAAUL,UAClC9K,KAAK8S,oBAAoB3H,EAAW,MACpC,IAAMK,EAAexL,KAAKiL,YAAYwB,WACtCzM,KAAKiL,YAAcjL,KAAKiL,YAAYuC,SAASrC,EAAW0H,GACxD,IAAMtH,EAAevL,KAAKiL,YAAYwB,WACjClB,EAAa9K,OAAO+K,IACvBxL,KAAKsL,gBAAgBC,EAAcC,GAErCxL,KAAKsS,mBAAmBnH,GACxBA,EAAUgG,cAAcnR,KAAM,MAC9BA,KAAKuS,kBAAkBpH,EAAW,MAClCnL,KAAKwS,mBAAmBrH,EAAW,OAKrC0E,EAAAxP,UAAA0S,QAAA,SAAQL,EAA+CtP,GAKrD,MAJqB,mBAAVsP,IACTA,EAAQ3B,EAAAA,aAAa/N,OAAO0P,IAE9B1S,KAAKgT,iBAAiBN,EAAOtP,GACtBsP,GAGT7C,EAAAxP,UAAA2S,iBAAA,SAAiB7H,EAAiB/H,GAChC,IAAKwE,EAAQC,GAAGsD,GACd,MAAM,IAAInJ,UAAU,GAAKmJ,GAE3BA,EAAU2G,cACE,IAAR1O,IACFpD,KAAK4S,gBAAgBxP,GACrB+H,EAAU+F,OAAO9N,IAEnB,IAAMyP,EAAkB1H,EAAUL,UAClC9K,KAAK8S,oBAAoB3H,EAAW,MACpC,IAAMK,EAAexL,KAAKiL,YAAYwB,WACtCzM,KAAKiL,YAAcjL,KAAKiL,YAAYuC,SAASrC,EAAW0H,GACxD,IAAMtH,EAAevL,KAAKiL,YAAYwB,WACjClB,EAAa9K,OAAO+K,IACvBxL,KAAKsL,gBAAgBC,EAAcC,GAErCxL,KAAKsS,mBAAmBnH,GACxBA,EAAUgG,cAAcnR,KAAM,MAC9BA,KAAKuS,kBAAkBpH,EAAW,MAClCnL,KAAKwS,mBAAmBrH,EAAW,OAKrC0E,EAAAxP,UAAA4S,OAAA,SAAOP,EAA+CvP,EAAqBC,GAKzE,MAJqB,mBAAVsP,IACTA,EAAQ3B,EAAAA,aAAa/N,OAAO0P,IAE9B1S,KAAKkT,gBAAgBR,EAAOvP,EAAQC,GAC7BsP,GAGT7C,EAAAxP,UAAA6S,gBAAA,SAAgB/H,EAAiBgI,EAAyB/P,GACxD,IAAKwE,EAAQC,GAAGsD,GACd,MAAM,IAAInJ,UAAU,GAAKmJ,GAE3B,GAAmB,OAAfgI,IAAwBpC,EAAAA,aAAalJ,GAAGsD,GAC1C,MAAM,IAAInJ,UAAU,GAAKmR,GAE3B,GAAmB,OAAfA,GAAuBA,EAAWxL,aAAe3H,KACnD,MAAM,IAAIgC,UAAU,GAAKmR,GAE3BhI,EAAU2G,cACE,IAAR1O,IACFpD,KAAK4S,gBAAgBxP,GACrB+H,EAAU+F,OAAO9N,IAEnB,IAAMyP,EAAkB1H,EAAUL,UAClC9K,KAAK8S,oBAAoB3H,EAAWgI,GACpC,IAAM3H,EAAexL,KAAKiL,YAAYwB,WACtCzM,KAAKiL,YAAcjL,KAAKiL,YAAYuC,SAASrC,EAAW0H,GACxD,IAAMtH,EAAevL,KAAKiL,YAAYwB,WACjClB,EAAa9K,OAAO+K,IACvBxL,KAAKsL,gBAAgBC,EAAcC,GAErCxL,KAAKsS,mBAAmBnH,GACxBA,EAAUgG,cAAcnR,KAAM,MAC9BA,KAAKuS,kBAAkBpH,EAAWgI,GAClCnT,KAAKwS,mBAAmBrH,EAAWgI,IAKrCtD,EAAAxP,UAAAuS,gBAAA,SAAgBxP,GACd,IAAI+H,EACJ,GAAmB,iBAAR/H,GAET,GAAkB,QADlB+H,EAAYnL,KAAKyR,aAAarO,IAE5B,OAAO,UAGT+H,EAAY/H,EAEd,IAAKwE,EAAQC,GAAGsD,GACd,MAAM,IAAInJ,UAAU,GAAKmJ,GAE3B,GAAIA,EAAUxD,aAAe3H,KAC3B,MAAM,IAAIoT,MAAM,oBAElB,IAAMP,EAAkB1H,EAAUL,UAClC9K,KAAKiS,oBAAoB9G,GACzBA,EAAUgG,cAAc,KAAMnR,MAC9BA,KAAKkS,mBAAmB/G,GACxB,IAAMK,EAAexL,KAAKiL,YAAYwB,WACtCzM,KAAKiL,YAAcjL,KAAKiL,YAAYuD,QAAQrD,EAAW0H,GACvD,IAAMtH,EAAevL,KAAKiL,YAAYwB,WAOtC,GANKlB,EAAa9K,OAAO+K,IACvBxL,KAAKsL,gBAAgBC,EAAcC,GAErCxL,KAAKmS,kBAAkBhH,GACvBnL,KAAKoS,mBAAmBjH,GACxBA,EAAU+F,OAAO,MACE,iBAAR9N,EACT,OAAO+H,GAIX0E,EAAAxP,UAAAgT,UAAA,WACErT,KAAKiL,YAAYqE,SAAQ,SAAUnE,GACjCnL,KAAK4S,gBAAgBzH,KACpBnL,OAGL6P,EAAAxP,UAAAyR,OAAA,WACE,IAAMnK,EAAa3H,KAAKyL,YACL,OAAf9D,IAC4C,IAAzC3H,KAAK6I,WAAaT,EAAAA,KAAKkL,cAC1B3L,EAAWiL,gBAAgB5S,MAE3BA,KAAK6I,YAAcT,EAAAA,KAAKmL,eAM9BpT,OAAAC,eAAIyP,EAAAxP,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK6I,4CAIdgH,EAAAxP,UAAAmT,aAAA,SAAaC,GACXzT,KAAK6I,WAAa4K,GAGpB5D,EAAAxP,UAAAqT,aAAA,WACE,GAA6C,IAAxC1T,KAAK6I,WAAaT,EAAAA,KAAKuL,aAO1B,MAAM,IAAIP,MAAM,mBANhBpT,KAAK6I,YAAcT,EAAAA,KAAKuL,YACxB3T,KAAK4T,YACL5T,KAAKkI,UACLlI,KAAK6T,oBACL7T,KAAK8T,YAOTjE,EAAAxP,UAAAwT,kBAAA,WACE7T,KAAKiL,YAAYqE,SAAQ,SAAUnE,GACjCA,EAAUuI,iBACT1T,OAGL6P,EAAAxP,UAAA0T,eAAA,WACE,GAA6C,IAAxC/T,KAAK6I,WAAaT,EAAAA,KAAKuL,aAO1B,MAAM,IAAIP,MAAM,qBANhBpT,KAAK6I,aAAeT,EAAAA,KAAKuL,YACzB3T,KAAKgU,cACLhU,KAAKiU,sBACLjU,KAAKkU,YACLlU,KAAKmU,cAOTtE,EAAAxP,UAAA4T,oBAAA,WACEjU,KAAKiL,YAAYqE,SAAQ,SAAUnE,GACjCA,EAAU4I,mBACT/T,OAGK6P,EAAAxP,UAAA6H,QAAV,WACEjE,EAAA5D,UAAM6H,QAAOhE,KAAAlE,MACbA,KAAKmI,cAAcC,EAAAA,KAAKC,eAGhBwH,EAAAxP,UAAA6T,UAAV,WACElU,KAAKoU,kBACLpU,KAAK6I,WAAa,GAGpBgH,EAAAxP,UAAAgU,aAAA,WACE,GAA6C,IAAxCrU,KAAK6I,WAAaT,EAAAA,KAAKkM,aAO1B,MAAM,IAAIlB,MAAM,mBANhBpT,KAAK6I,YAAcT,EAAAA,KAAKkM,YACxBtU,KAAKuU,YACLvU,KAAKwU,UACLxU,KAAKyU,oBACLzU,KAAK0U,YAOT7E,EAAAxP,UAAAoU,kBAAA,WACEzU,KAAKiL,YAAYqE,SAAQ,SAAUnE,GACjCA,EAAUkJ,iBACTrU,OAGL6P,EAAAxP,UAAAsU,eAAA,WACE,GAA6C,IAAxC3U,KAAK6I,WAAaT,EAAAA,KAAKkM,aAO1B,MAAM,IAAIlB,MAAM,qBANhBpT,KAAK6I,aAAeT,EAAAA,KAAKkM,YACzBtU,KAAK4U,cACL5U,KAAK6U,sBACL7U,KAAK8U,YACL9U,KAAK+U,cAOTlF,EAAAxP,UAAAwU,oBAAA,WACE7U,KAAKiL,YAAYqE,SAAQ,SAAUnE,GACjCA,EAAUwJ,mBACT3U,OAGLG,OAAAC,eAAIyP,EAAAxP,UAAA,WAAQ,KAAZ,WACE,IAAMsH,EAAa3H,KAAKyL,YACxB,OAAOsF,EAAAA,aAAalJ,GAAGF,GAAcA,EAAWqN,SAAW,sCAGnDnF,EAAAxP,UAAAiI,aAAV,SAAuBC,GACrB,IAAIC,EAAkB,EAKtB,OAJ0C,IAArCD,EAAcH,EAAAA,KAAKC,gBACtBG,GAAmBJ,EAAAA,KAAKK,aAE1BD,GAAmBvE,EAAA5D,UAAMiI,aAAYpE,KAAAlE,KAACuI,EAAcC,IAItDqH,EAAAxP,UAAAqI,aAAA,SAAaC,EAAyBC,GAIpC,OAH8C,IAAzC5I,KAAK6I,WAAaT,EAAAA,KAAKU,gBAC1BH,IAAiBP,EAAAA,KAAKU,cAEjBH,GAGTkH,EAAAxP,UAAA4U,eAAA,SAAetM,EAAyBC,GACtCD,EAAe3I,KAAK6I,WAAaF,EACjCA,EAAe3I,KAAK0I,aAAaC,EAAcC,GAC/C5I,KAAK+I,UAAUJ,EAAcC,IAIrBiH,EAAAxP,UAAA0I,UAAV,SAAoBJ,EAAyBC,GAC3C,IAAII,EAAeL,EACnB3I,KAAK6I,cAAgBT,EAAAA,KAAKa,aAAeb,EAAAA,KAAKc,YAAcd,EAAAA,KAAKC,cACjErI,KAAKmJ,YAAYP,GACjB5I,KAAK6I,YAAcT,EAAAA,KAAKgB,eACxB,IACgE,KAAxDpJ,KAAK6I,WAAaF,GAAgBP,EAAAA,KAAKiB,eAC3CL,GAAgBZ,EAAAA,KAAKiB,YACrBrJ,KAAK6I,aAAeT,EAAAA,KAAKiB,YACzBrJ,KAAKsJ,WAAWV,IAE4C,KAAxD5I,KAAK6I,WAAaF,GAAgBP,EAAAA,KAAKmB,eAC3CP,GAAgBZ,EAAAA,KAAKmB,YACrBvJ,KAAK6I,aAAeT,EAAAA,KAAKmB,YACzBvJ,KAAKwJ,WAAWZ,IAE6C,KAAzD5I,KAAK6I,WAAaF,GAAgBP,EAAAA,KAAKU,gBAC3CE,GAAgBZ,EAAAA,KAAKU,aACrB9I,KAAK6I,aAAeT,EAAAA,KAAKU,aACzB9I,KAAKyJ,YAAYb,IAE4C,KAAzD5I,KAAK6I,WAAaF,GAAgBP,EAAAA,KAAKC,gBAC3CW,GAAgBZ,EAAAA,KAAKC,aACrBrI,KAAK6I,aAAeT,EAAAA,KAAKC,aACzBrI,KAAK0J,YAAYd,IAGnB5I,KAAK2J,UAAUf,GAC2B,IAArCI,EAAeZ,EAAAA,KAAKiB,cACvBrJ,KAAK4J,SAAShB,GAE0B,IAArCI,EAAeZ,EAAAA,KAAKmB,cACvBvJ,KAAK6J,SAASjB,GAE2B,IAAtCI,EAAeZ,EAAAA,KAAKU,eACvB9I,KAAK8J,UAAUlB,GAE0B,IAAtCI,EAAeZ,EAAAA,KAAKC,eACvBrI,KAAK+J,UAAUnB,GAGjB5I,KAAKgK,oBAAoBhB,EAAcJ,GAEI,IAAtCI,EAAeZ,EAAAA,KAAKC,eACvBrI,KAAKiK,WAAWrB,GAEyB,IAAtCI,EAAeZ,EAAAA,KAAKU,eACvB9I,KAAKkK,WAAWtB,GAEwB,IAArCI,EAAeZ,EAAAA,KAAKmB,cACvBvJ,KAAKmK,UAAUvB,GAEyB,IAArCI,EAAeZ,EAAAA,KAAKiB,cACvBrJ,KAAKoK,UAAUxB,WAGjB5I,KAAK6I,aAAeT,EAAAA,KAAKgB,eACzBpJ,KAAKqK,WAAWzB,KAIViH,EAAAxP,UAAAoJ,YAAV,SAAsBb,GACpB5I,KAAKsK,aAAY,SAAUC,QACY,IAAjCA,EAAa2K,iBACf3K,EAAa2K,gBAAgBtM,EAAa5I,UAKtC6P,EAAAxP,UAAAyJ,UAAV,SAAoBlB,GAClB5I,KAAKmV,eAAevM,EAAYwM,aAGxBvF,EAAAxP,UAAA6J,WAAV,SAAqBtB,GACnB5I,KAAKyK,YAAW,SAAUF,QACY,IAAhCA,EAAa8K,gBACf9K,EAAa8K,eAAezM,EAAa5I,UAKrC6P,EAAAxP,UAAAqJ,YAAV,SAAsBd,GACpB5I,KAAKsK,aAAY,SAAUC,QACY,IAAjCA,EAAaC,iBACfD,EAAaC,gBAAgB5B,EAAa5I,UAKtC6P,EAAAxP,UAAA0J,UAAV,SAAoBnB,KAIViH,EAAAxP,UAAA4J,WAAV,SAAqBrB,GACnB5I,KAAKyK,YAAW,SAAUF,QACY,IAAhCA,EAAaG,gBACfH,EAAaG,eAAe9B,EAAa5I,UAMrC6P,EAAAxP,UAAA2J,oBAAV,SAA8BrB,EAAyBC,GACX,IAArCD,EAAeP,EAAAA,KAAKkN,cAAuBtV,KAAKiL,YAAYgC,YAC/DjN,KAAKuV,sBAAsB3M,GAC3B5I,KAAKwV,cAAcxV,KAAKiL,YAAatC,EAAcC,GACnD5I,KAAKyV,qBAAqB7M,KAKpBiH,EAAAxP,UAAAmV,cAAV,SAAwBE,EAAe/M,EAAyBC,GACtC,OAApB8M,EAAK/I,YAAuB+I,EAAK/I,WAAWH,UAAUvG,WAAW2C,EAAYgC,WAC/E5K,KAAKwV,cAAcE,EAAK/I,WAAYhE,EAAcC,GAE5B,OAApB8M,EAAK9I,YAAuB8I,EAAK9I,WAAWJ,UAAUvG,WAAW2C,EAAYgC,WAC/E5K,KAAKwV,cAAcE,EAAK9I,WAAYjE,EAAcC,GAE5B,OAApB8M,EAAK7I,YAAuB6I,EAAK7I,WAAWL,UAAUvG,WAAW2C,EAAYgC,WAC/E5K,KAAKwV,cAAcE,EAAK7I,WAAYlE,EAAcC,GAE5B,OAApB8M,EAAK5I,YAAuB4I,EAAK5I,WAAWN,UAAUvG,WAAW2C,EAAYgC,WAC/E5K,KAAKwV,cAAcE,EAAK5I,WAAYnE,EAAcC,GAGpD,IADA,IAAMoC,EAAa0K,EAAK3I,OACfnJ,EAAI,EAAGA,EAAIoH,EAAW5I,OAAQwB,GAAK,EAAG,CAC7C,IAAMuH,EAAYH,EAAWpH,GACvB+R,EAAmB3V,KAAK2V,iBAAiBxK,EAAWvC,GAC1D5I,KAAK4V,mBAAmBzK,EAAWxC,EAAcgN,GACC,IAA7CxK,EAAUsI,UAAYrL,EAAAA,KAAKmL,gBAC9BpI,EAAUqI,aAAarI,EAAUsI,WAAarL,EAAAA,KAAKmL,cACnDvT,KAAK4S,gBAAgBzH,MAK3B0E,EAAAxP,UAAAwV,eAAA,SAAeC,EAAyBlN,GACtCkN,EAAe9V,KAAK6I,WAAaiN,EACjCA,EAAe9V,KAAK+V,aAAaD,EAAclN,GAC/C5I,KAAKgW,UAAUF,EAAclN,IAIrBiH,EAAAxP,UAAA2V,UAAV,SAAoBF,EAAyBlN,GAC3C,IAAII,EAAe8M,EACnB9V,KAAK6I,cAAgBT,EAAAA,KAAK6N,aAAe7N,EAAAA,KAAK8N,gBAC9ClW,KAAKmW,YAAYvN,GACjB5I,KAAK6I,YAAcT,EAAAA,KAAKgO,eACxB,IACgE,KAAxDpW,KAAK6I,WAAaiN,GAAgB1N,EAAAA,KAAKK,eAC3CO,GAAgBZ,EAAAA,KAAKK,YACrBzI,KAAK6I,aAAeT,EAAAA,KAAKK,YACzBzI,KAAKqW,WAAWzN,IAE4C,KAAxD5I,KAAK6I,WAAaiN,GAAgB1N,EAAAA,KAAKkO,eAC3CtN,GAAgBZ,EAAAA,KAAKkO,YACrBtW,KAAK6I,aAAeT,EAAAA,KAAKkO,YACzBtW,KAAKuW,WAAW3N,IAGlB5I,KAAKwW,UAAU5N,GAC2B,IAArCI,EAAeZ,EAAAA,KAAKK,cACvBzI,KAAKyW,SAAS7N,GAE0B,IAArCI,EAAeZ,EAAAA,KAAKkO,cACvBtW,KAAK0W,SAAS9N,GAGhB5I,KAAK2W,oBAAoB3N,EAAcJ,GAEG,IAArCI,EAAeZ,EAAAA,KAAKkO,cACvBtW,KAAK4W,UAAUhO,GAEyB,IAArCI,EAAeZ,EAAAA,KAAKK,cACvBzI,KAAK6W,UAAUjO,WAGjB5I,KAAK6I,aAAeT,EAAAA,KAAKgO,eACzBpW,KAAK8W,WAAWlO,KAIViH,EAAAxP,UAAAkW,WAAV,SAAqB3N,GACnB5I,KAAKsK,aAAY,SAAUC,QACW,IAAhCA,EAAawM,gBACfxM,EAAawM,eAAenO,EAAa5I,UAKrC6P,EAAAxP,UAAAqW,SAAV,SAAmB9N,GACjB,IAAMoO,EAAehX,KAAKiX,kBAAkB,oBACvB,OAAjBD,QAAgD,IAAvBA,EAAarV,OACxC3B,KAAKkX,YAAYtO,EAAaoO,EAAarV,QAIrCkO,EAAAxP,UAAA6W,YAAV,SAAsBtO,EAA6BoO,GACjD,IAAMhC,EAAWpM,EAAYoM,SAC7B,GAAIA,aAAoBmC,EAAAA,iBAAmBnX,KAAKoL,aAAepL,KAAKoX,WAAY,CAC9E,IAAMC,EAAUrC,EAASqC,QACzBA,EAAQC,OACRtX,KAAKuX,WAAWvX,KAAKiL,YAAaoM,EAASzO,EAAYd,cAAekP,GACtEK,EAAQG,YAIF3H,EAAAxP,UAAAkX,WAAV,SAAqB7B,EAAe2B,EACfvP,EAA8BkP,GACzB,OAApBtB,EAAK/I,YACP3M,KAAKuX,WAAW7B,EAAK/I,WAAY0K,EAASvP,EAAekP,GAEnC,OAApBtB,EAAK9I,YACP5M,KAAKuX,WAAW7B,EAAK9I,WAAYyK,EAASvP,EAAekP,GAEnC,OAApBtB,EAAK7I,YACP7M,KAAKuX,WAAW7B,EAAK7I,WAAYwK,EAASvP,EAAekP,GAEnC,OAApBtB,EAAK5I,YACP9M,KAAKuX,WAAW7B,EAAK5I,WAAYuK,EAASvP,EAAekP,GAG3D,GAAItB,EAAK7J,OADQ,EACW,CAC1B,IAAMG,EAAYlE,EAAcxH,QAAQoV,EAAKlJ,UAAUR,WACjDC,EAAYnE,EAAcxH,QAAQoV,EAAKlJ,UAAUP,WACjDE,EAAYrE,EAAcxH,QAAQoV,EAAKlJ,UAAUL,WACjDD,EAAYpE,EAAcxH,QAAQoV,EAAKlJ,UAAUN,WACvDmL,EAAQI,YACRJ,EAAQK,OAAO1L,EAAUpF,GAAIoF,EAAUlF,IACvCuQ,EAAQM,OAAO1L,EAAUrF,GAAIqF,EAAUnF,IACvCuQ,EAAQM,OAAOxL,EAAUvF,GAAIuF,EAAUrF,IACvCuQ,EAAQM,OAAOzL,EAAUtF,GAAIsF,EAAUpF,IACvCuQ,EAAQO,YACR,IAAMpT,GAAKkR,EAAKpJ,OAZD,IAYuBoJ,EAAKnJ,UAZ5B,GAaf8K,EAAQQ,UAAY,GAAK,EAAIrT,GAAK,GAAMA,EACxC6S,EAAQS,YAAcd,EAAa3V,WACnCgW,EAAQU,WAIFlI,EAAAxP,UAAAuW,UAAV,SAAoBhO,GAClB5I,KAAKyK,YAAW,SAAUF,QACW,IAA/BA,EAAayN,eACfzN,EAAayN,cAAcpP,EAAa5I,UAMpC6P,EAAAxP,UAAAsW,oBAAV,SAA8Bb,EAAyBlN,GACX,IAArCkN,EAAe1N,EAAAA,KAAK6P,cAAuBjY,KAAKiL,YAAYgC,WAAcjN,KAAKoL,YAAepL,KAAKoX,aACtGpX,KAAKkY,sBAAsBtP,GAC3B5I,KAAKmY,cAAcnY,KAAKiL,YAAa6K,EAAclN,GACnD5I,KAAKoY,qBAAqBxP,KAKpBiH,EAAAxP,UAAA8X,cAAV,SAAwBzC,EAAeI,EAAyBlN,GACtC,OAApB8M,EAAK/I,YAAuB+I,EAAK/I,WAAWH,UAAUvG,WAAW2C,EAAYgC,WAC/E5K,KAAKmY,cAAczC,EAAK/I,WAAYmJ,EAAclN,GAE5B,OAApB8M,EAAK9I,YAAuB8I,EAAK9I,WAAWJ,UAAUvG,WAAW2C,EAAYgC,WAC/E5K,KAAKmY,cAAczC,EAAK9I,WAAYkJ,EAAclN,GAE5B,OAApB8M,EAAK7I,YAAuB6I,EAAK7I,WAAWL,UAAUvG,WAAW2C,EAAYgC,WAC/E5K,KAAKmY,cAAczC,EAAK7I,WAAYiJ,EAAclN,GAE5B,OAApB8M,EAAK5I,YAAuB4I,EAAK5I,WAAWN,UAAUvG,WAAW2C,EAAYgC,WAC/E5K,KAAKmY,cAAczC,EAAK5I,WAAYgJ,EAAclN,GAGpD,IADA,IAAMoC,EAAa0K,EAAK3I,OACfnJ,EAAI,EAAGA,EAAIoH,EAAW5I,OAAQwB,GAAK,EAAG,CAC7C,IAAMuH,EAAYH,EAAWpH,GACvB+R,EAAmB3V,KAAK2V,iBAAiBxK,EAAWvC,GAC1D5I,KAAKqY,mBAAmBlN,EAAW2K,EAAcH,GACC,IAA7CxK,EAAUsI,UAAYrL,EAAAA,KAAKmL,gBAC9BpI,EAAUqI,aAAarI,EAAUsI,WAAarL,EAAAA,KAAKmL,cACnDvT,KAAK4S,gBAAgBzH,MAK3B0E,EAAAxP,UAAAsV,iBAAA,SAAiBxK,EAAiBvC,GAChC,OAAOA,GAGCiH,EAAAxP,UAAAiL,gBAAV,SAA0BC,EAAsBC,GAC9C,IAAM7D,EAAa3H,KAAKyL,YACpB7D,EAAQC,GAAGF,IACbA,EAAW+D,yBAAyB1L,KAAMuL,EAAcC,IAI5DqE,EAAAxP,UAAAqL,yBAAA,SAAyBP,EAAoBmN,EAA+BC,GAC1E,IAAM/M,EAAexL,KAAKiL,YAAYwB,WACtCzM,KAAKiL,YAAcjL,KAAKiL,YAAY0D,MAAMxD,EAAWmN,EAAuBC,GAC5E,IAAMhN,EAAevL,KAAKiL,YAAYwB,WACjClB,EAAa9K,OAAO+K,IACvBxL,KAAKsL,gBAAgBC,EAAcC,IAIvCqE,EAAAxP,UAAAmY,aAAA,SAAaC,GACX,IAAMC,EAAa1Y,KAAK2Y,YACxB,YAAsB,IAAfD,QAAmD,IAA1BA,EAAWD,IAG7C5I,EAAAxP,UAAAuY,aAAA,SAAaH,GACX,IAAMC,EAAa1Y,KAAK2Y,YACxB,YAAsB,IAAfD,GAAwBA,EAAWD,IAAqB,MAGjE5I,EAAAxP,UAAAwY,aAAA,SAAaJ,EAAmBK,GAC9B,IAAIJ,EAAa1Y,KAAK2Y,iBACH,IAAfD,IACFA,EAAa,GACb1Y,KAAK2Y,YAAcD,GAEH,OAAdI,EACFJ,EAAWD,GAAaK,SAEjBJ,EAAWD,IAItB5I,EAAAxP,UAAA0Y,gBAAA,SAAgBC,GACd,IAAMC,EAAgBjZ,KAAKkZ,eAC3B,YAAyB,IAAlBD,QAA0D,IAA9BA,EAAcD,IAGnDnJ,EAAAxP,UAAA8Y,gBAAA,SAAgBH,GACd,IAAMC,EAAgBjZ,KAAKkZ,eAC3B,YAAyB,IAAlBD,GAA2BA,EAAcD,IAAsB,MAGxEnJ,EAAAxP,UAAA+Y,gBAAA,SAAgBJ,EAAoBK,GAClC,IAAIJ,EAAgBjZ,KAAKkZ,oBACH,IAAlBD,IACFA,EAAgB,GAChBjZ,KAAKkZ,eAAiBD,GAEH,OAAjBI,EACFJ,EAAcD,GAAcK,SAErBJ,EAAcD,IAIzBnJ,EAAAxP,UAAAiZ,kBAAA,SAAkBC,GAChB,IAAMC,EAAkBxZ,KAAKyZ,iBAC7B,YAA2B,IAApBD,QAAgE,IAAlCA,EAAgBD,IAGvD1J,EAAAxP,UAAA4W,kBAAA,SAAkBsC,GAChB,IAAMC,EAAkBxZ,KAAKyZ,iBAC7B,YAA2B,IAApBD,GAA6BA,EAAgBD,IAAwB,MAG9E1J,EAAAxP,UAAAqZ,kBAAA,SAAkBH,EAAsBI,GACtC,IAAIH,EAAkBxZ,KAAKyZ,sBACH,IAApBD,IACFA,EAAkB,GAClBxZ,KAAKyZ,iBAAmBD,GAET,OAAbG,EACFH,EAAgBD,GAAgBI,SAEzBH,EAAgBD,IAK3B1J,EAAAxP,UAAAuZ,sBAAA,SAAsBL,GACpB,IAAIM,EAAiB7Z,KAAKiX,kBAAkBsC,GAC5C,GAAuB,OAAnBM,EAAyB,CAC3B,IAAMC,EAAa9Z,KAAa0C,UAC1BqX,EAAaC,EAAAA,aAAaC,4BAA4BV,EAAcO,GACvD,OAAfC,QAAmD,IAA5BA,EAAWG,eACpCL,EAAiBG,EAAAA,aAAaG,mBAAmBJ,EAAWG,aAAcla,KAAMuZ,EAAcQ,GAC9F/Z,KAAK0Z,kBAAkBH,EAAcM,IAGzC,OAAOA,GAIThK,EAAAxP,UAAA+Z,mBAAA,SAAmBT,EAAoBU,GACjCV,aAAoBW,EAAAA,gBACtBta,KAAKmI,cAAcC,EAAAA,KAAKmB,cAK5BsG,EAAAxP,UAAA8U,eAAA,SAAeoF,GACb,IAAMf,EAAkBxZ,KAAKyZ,iBAC7B,QAAwB,IAApBD,EACF,IAAK,IAAMD,KAAgBC,EAAiB,CACzBA,EAAgBD,GACxBiB,QAAQD,KAKvB1K,EAAAxP,UAAAoa,QAAA,SAAQd,GACN3Z,KAAKmI,cAAcC,EAAAA,KAAKU,eAI1B+G,EAAAxP,UAAA+T,gBAAA,WACEpU,KAAK0a,yBAIP7K,EAAAxP,UAAAqa,sBAAA,WACE,IAAMlB,EAAkBxZ,KAAKyZ,iBAC7B,QAAwB,IAApBD,EACF,IAAK,IAAMD,KAAgBC,EAAiB,CACzBA,EAAgBD,GACxBoB,WAKf9K,EAAAxP,UAAA+K,SAAA,WACE,GAA4C,IAAvCpL,KAAK6I,WAAaT,EAAAA,KAAKwS,YAC1B,OAAO,EAEP,IAAMjT,EAAa3H,KAAKyL,YACxB,QAAOsF,EAAAA,aAAalJ,GAAGF,IAAcA,EAAWyD,YAIpDyE,EAAAxP,UAAAwa,UAAA,SAAUC,GACkD,IAAvC9a,KAAK6I,WAAaT,EAAAA,KAAKwS,cACxBE,IAChB9a,KAAK+a,cAAcD,GACfA,EACF9a,KAAK6I,YAAcT,EAAAA,KAAKwS,WAExB5a,KAAK6I,aAAeT,EAAAA,KAAKwS,WAE3B5a,KAAKgb,YAAYF,GACjB9a,KAAKib,aAAaH,KAIZjL,EAAAxP,UAAA0a,cAAV,SAAwBG,GACtBlb,KAAKsK,aAAY,SAAUC,QACc,IAAnCA,EAAa4Q,mBACf5Q,EAAa4Q,kBAAkBD,EAAQlb,UAKnC6P,EAAAxP,UAAA2a,YAAV,SAAsBE,GACpBlb,KAAKmI,cAAcC,EAAAA,KAAKK,cAGhBoH,EAAAxP,UAAA4a,aAAV,SAAuBC,GACrBlb,KAAKyK,YAAW,SAAUF,QACc,IAAlCA,EAAa6Q,kBACf7Q,EAAa6Q,iBAAiBF,EAAQlb,UAK5C6P,EAAAxP,UAAA+W,SAAA,WACE,GAA4C,IAAvCpX,KAAK6I,WAAaT,EAAAA,KAAKiT,YAC1B,OAAO,EAEP,IAAM1T,EAAa3H,KAAKyL,YACxB,QAAOsF,EAAAA,aAAalJ,GAAGF,IAAcA,EAAWyP,YAIpDvH,EAAAxP,UAAAwK,UAAA,SAAUyQ,GACkD,IAAvCtb,KAAK6I,WAAaT,EAAAA,KAAKiT,cACxBC,IAChBtb,KAAKub,cAAcD,GACfA,EACFtb,KAAK6I,YAAcT,EAAAA,KAAKiT,WAExBrb,KAAK6I,aAAeT,EAAAA,KAAKiT,WAE3Brb,KAAKwb,YAAYF,GACjBtb,KAAKyb,aAAaH,KAIZzL,EAAAxP,UAAAkb,cAAV,SAAwBG,GACtB1b,KAAKsK,aAAY,SAAUC,QACc,IAAnCA,EAAaoR,mBACfpR,EAAaoR,kBAAkBD,EAAQ1b,UAKnC6P,EAAAxP,UAAAmb,YAAV,SAAsBE,GACfA,GACH1b,KAAKmI,cAAcC,EAAAA,KAAKK,cAIlBoH,EAAAxP,UAAAob,aAAV,SAAuBC,GACrB1b,KAAKyK,YAAW,SAAUF,QACc,IAAlCA,EAAaqR,kBACfrR,EAAaqR,iBAAiBF,EAAQ1b,UAK5C6P,EAAAxP,UAAAwb,cAAA,SAAcC,QAAA,IAAAA,IAAAA,EAAmB9b,KAAK8b,WACpC9b,KAAK6K,WAAWiR,EAAU7V,WAAWjG,KAAK+b,cAG5C5b,OAAAC,eAAIyP,EAAAxP,UAAA,YAAS,KAAb,WACE,IAAIyb,EAAY9b,KAAKgc,WACrB,QAAkB,IAAdF,EAAsB,CACxB,IAAMnU,EAAa3H,KAAKyL,YACxBqQ,EAAY/K,EAAAA,aAAalJ,GAAGF,GAAcA,EAAWmU,UAAY3U,EAAAA,MAAME,QAEzE,OAAOyU,mCAGTjM,EAAAxP,UAAA4b,aAAA,SAAaH,GACO,OAAdA,EACF9b,KAAKgc,WAAaF,OACW,IAApB9b,KAAKgc,aACdhc,KAAKgc,gBAAa,IAItB7b,OAAAC,eAAIyP,EAAAxP,UAAA,aAAU,KAAd,WACE,OAAOL,KAAK8b,2CAGdjM,EAAAxP,UAAAsK,aAAA,SAAaC,QAAA,IAAAA,IAAAA,EAAmB5K,KAAK4K,UACnC5K,KAAK6K,WAAWD,EAAS3E,WAAWjG,KAAK8K,aAG3C3K,OAAAC,eAAIyP,EAAAxP,UAAA,WAAQ,KAAZ,WACE,IAAMsH,EAAa3H,KAAK2H,WACxB,OAAOC,EAAQC,GAAGF,GAAcA,EAAWiD,SAAWvF,EAAOkC,yCAG/DpH,OAAAC,eAAIyP,EAAAxP,UAAA,YAAS,KAAb,WACE,OAAOL,KAAKiL,YAAYwB,4CAG1BtM,OAAAC,eAAIyP,EAAAxP,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK+b,4CAGdlM,EAAAxP,UAAA6b,QAAA,SAAQ/X,EAAWE,EAAWuE,GAC5B,IAAMuT,EAAWvT,EAAYd,cAAcsU,UAAUjY,EAAGE,GACxD,OAAOrE,KAAKqc,YAAYrc,KAAKiL,YAAa9G,EAAGE,EAAG8X,EAAUvT,IAGlDiH,EAAAxP,UAAAgc,YAAV,SAAsB3G,EAAevR,EAAWE,EAAW8X,EACrCvT,GACpB,IAAI0T,EAA2B,KAa/B,GAZwB,OAApB5G,EAAK/I,YAAuB+I,EAAK/I,WAAWH,UAAU1G,SAASqW,KACjEG,EAAMtc,KAAKqc,YAAY3G,EAAK/I,WAAYxI,EAAGE,EAAG8X,EAAUvT,IAE9C,OAAR0T,GAAoC,OAApB5G,EAAK9I,YAAuB8I,EAAK9I,WAAWJ,UAAU1G,SAASqW,KACjFG,EAAMtc,KAAKqc,YAAY3G,EAAK9I,WAAYzI,EAAGE,EAAG8X,EAAUvT,IAE9C,OAAR0T,GAAoC,OAApB5G,EAAK7I,YAAuB6I,EAAK7I,WAAWL,UAAU1G,SAASqW,KACjFG,EAAMtc,KAAKqc,YAAY3G,EAAK7I,WAAY1I,EAAGE,EAAG8X,EAAUvT,IAE9C,OAAR0T,GAAoC,OAApB5G,EAAK5I,YAAuB4I,EAAK5I,WAAWN,UAAU1G,SAASqW,KACjFG,EAAMtc,KAAKqc,YAAY3G,EAAK5I,WAAY3I,EAAGE,EAAG8X,EAAUvT,IAE9C,OAAR0T,EAEF,IADA,IAAMtR,EAAa0K,EAAK3I,OACfnJ,EAAI,EAAGA,EAAIoH,EAAW5I,OAAQwB,GAAK,EAAG,CAC7C,IAAMuH,EAAYH,EAAWpH,GAC7B,GAAIuH,EAAUoR,UAAUzW,SAAS3B,EAAGE,IAEtB,QADZiY,EAAMnR,EAAU+Q,QAAQ/X,EAAGE,EAAGuE,IAE5B,MAKR,OAAO0T,GAGTnc,OAAAC,eAAIyP,EAAAxP,UAAA,kBAAe,KAAnB,WACE,OAAOmc,EAAAA,UAAUC,4CAGnBtc,OAAAC,eAAIyP,EAAAxP,UAAA,eAAY,KAAhB,WACE,IAAMqc,EAAyB1c,KAAK2c,gBAAgBC,UACpD,OAAO5c,KAAK+b,WAAWc,UAAUH,oCAGnCvc,OAAAC,eAAIyP,EAAAxP,UAAA,eAAY,KAAhB,WACE,IAAMyc,EAAuB9c,KAAK+c,cAAcH,UAChD,OAAO5c,KAAK+b,WAAWc,UAAUC,oCAGnCjN,EAAAxP,UAAA2c,GAAA,SAAGC,EAAcC,EAA8CC,GAC7D,IAAIC,EAAgBpd,KAAKqd,oBACH,IAAlBD,IACFA,EAAgB,GAChBpd,KAAKqd,eAAiBD,GAExB,IAIIE,EAJAC,EAAWH,EAAcH,GACvBO,EAA6B,kBAAZL,EAAwBA,EAA6B,iBAAZA,GAAoC,OAAZA,GAAoBA,EAAQK,UAAW,EACzHC,EAAUN,GAA8B,iBAAZA,GAAwBA,EAAQM,UAAW,EACvEC,EAAOP,GAA8B,iBAAZA,GAAwBA,EAAQO,OAAQ,EAEvE,QAAiB,IAAbH,EAEFA,EAAW,CADXD,EAAU,CAACJ,SAAQA,EAAEM,QAAOA,EAAEC,QAAOA,EAAEC,KAAIA,IAE3CN,EAAcH,GAAQM,MACjB,CAGL,IAFA,IAAMrS,EAAIqS,EAASnb,OACfwB,EAAI,EACDA,EAAIsH,KACToS,EAAUC,EAAS3Z,IACPsZ,WAAaA,GAAYI,EAAQE,UAAYA,IAGzD5Z,GAAK,EAEHA,EAAIsH,GACNoS,EAASG,QAAUA,EACnBH,EAASI,KAAOA,IAEhBJ,EAAU,CAACJ,SAAQA,EAAEM,QAAOA,EAAEC,QAAOA,EAAEC,KAAIA,GAC3CH,EAAShP,KAAK+O,IAGlB,OAAOtd,MAGT6P,EAAAxP,UAAAsd,IAAA,SAAIV,EAAcC,EAA8CC,GAC9D,IAAMC,EAAgBpd,KAAKqd,eAC3B,QAAsB,IAAlBD,EAA0B,CAC5B,IAAMG,EAAWH,EAAcH,GAC/B,QAAiB,IAAbM,EAIF,IAHA,IAAMC,EAA6B,kBAAZL,EAAwBA,EAA6B,iBAAZA,GAAoC,OAAZA,GAAoBA,EAAQK,UAAW,EACzHtS,EAAIqS,EAASnb,OACfwB,EAAI,EACDA,EAAIsH,GAAG,CACZ,IAAMoS,EAAUC,EAAS3Z,GACzB,GAAI0Z,EAAQJ,WAAaA,GAAYI,EAAQE,UAAYA,EAAS,CAChED,EAAS7O,OAAO9K,EAAG,GACK,IAApB2Z,EAASnb,eACJgb,EAAcH,GAEvB,MAEFrZ,GAAK,GAIX,OAAO5D,MAIT6P,EAAAxP,UAAAud,YAAA,SAAYC,GACV,IAAMZ,EAAOY,EAAMZ,KACbG,EAAgBpd,KAAKqd,eAC3B,QAAsB,IAAlBD,EAA0B,CAC5B,IAAMG,EAAWH,EAAcH,GAC/B,QAAiB,IAAbM,EAAqB,CAEvB,IADA,IAAI3Z,EAAI,EACDA,EAAI2Z,EAASnb,QAAQ,CAC1B,IAAMkb,EAAUC,EAAS3Z,GACzB,IAAK0Z,EAAQE,QAAS,CACpB,IAAMN,EAAWI,EAAQJ,SAMzB,GALwB,mBAAbA,EACTA,EAASW,GACoB,iBAAbX,GAAsC,OAAbA,GACzCA,EAASU,YAAYC,GAEnBP,EAAQI,KAAM,CAChBH,EAAS7O,OAAO9K,EAAG,GACnB,UAGJA,GAAK,EAEiB,IAApB2Z,EAASnb,eACJgb,EAAcH,IAId,cAATA,EACFjd,KAAK8d,YAAYD,GACC,aAATZ,GACTjd,KAAK+d,WAAWF,IAKpBhO,EAAAxP,UAAA2d,YAAA,SAAYH,GAEV,GADA7d,KAAK4d,YAAYC,GACbA,EAAMI,UAAYJ,EAAMK,aAAc,CACxC,IAAMvW,EAAa3H,KAAKyL,YACxB,OAAIsF,EAAAA,aAAalJ,GAAGF,GACXA,EAAWqW,YAAYH,GAEvBlW,EAGT,OAAO,MAIXkI,EAAAxP,UAAA8d,cAAA,SAAcN,GACZA,EAAM1K,WAAanT,KACnB,IAAMoe,EAAOpe,KAAKge,YAAYH,GAC9B,OAAa,OAATO,EACKA,EAAKD,cAAcN,IAElBA,EAAMK,cAIlBrO,EAAAxP,UAAAge,WAAA,WACE,OAAiD,IAAzCre,KAAK6I,WAAaT,EAAAA,KAAKkW,eAIvBzO,EAAAxP,UAAAyd,YAAV,SAAsBD,GACpB,GAA8C,IAAzC7d,KAAK6I,WAAaT,EAAAA,KAAKkW,cAAqB,CAC/Cte,KAAK6I,YAAcT,EAAAA,KAAKkW,aACxB,IAAMlB,EAAgBpd,KAAKqd,eAC3B,QAAsB,IAAlBD,QAAyD,IAA7BA,EAAcmB,WAAuB,CACnE,IAAMC,EAAa,IAAIC,WAAW,aAAc,CAC9CC,QAASb,EAAMa,QACfC,QAASd,EAAMc,QACfC,QAASf,EAAMe,QACfC,QAAShB,EAAMgB,QACfZ,SAAS,IAEXO,EAAWrL,WAAanT,KACxBwe,EAAWM,kBAAoBjB,EAAMiB,kBACrC9e,KAAK4d,YAAYY,MAMb3O,EAAAxP,UAAA0d,WAAV,SAAqBF,GACnB,GAA8C,IAAzC7d,KAAK6I,WAAaT,EAAAA,KAAKkW,cAAqB,CAC/Cte,KAAK6I,aAAeT,EAAAA,KAAKkW,aACzB,IAAMlB,EAAgBpd,KAAKqd,eAC3B,QAAsB,IAAlBD,QAAyD,IAA7BA,EAAc2B,WAAuB,CACnE,IAAMC,EAAa,IAAIP,WAAW,aAAc,CAC9CC,QAASb,EAAMa,QACfC,QAASd,EAAMc,QACfC,QAASf,EAAMe,QACfC,QAAShB,EAAMgB,QACfZ,SAAS,IAEXe,EAAW7L,WAAanT,KACxBgf,EAAWF,kBAAoBjB,EAAMiB,kBACrC9e,KAAK4d,YAAYoB,MAxoCvB/b,EAAA,CADCqX,EAAAA,eAAe2E,EAAAA,+CA6oClBpP,GApwCkCzH,EAAAA,MCWrBR,EAAU,CACrBC,GAAA,SAAGqX,GACD,GAAsB,iBAAXA,GAAkC,OAAXA,EAAiB,CACjD,IAAMzR,EAAOyR,EACb,OAAOzR,aAAgBhG,GAChBgG,aAAgBoC,GAChBkB,EAAAA,aAAalJ,GAAG4F,IAAS,kBAAmBA,EAErD,OAAO,kBC3CX,SAAA0R,mDAsCA,OAtC4Ftc,EAAAsc,EAAAlb,GAC1F9D,OAAAC,eAAI+e,EAAA9e,UAAA,gBAAa,KAAjB,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAK3F,cAAgB,sCAG9C3H,OAAAC,eAAI+e,EAAA9e,UAAA,UAAO,KAAX,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAK1F,QAAU,mCAGxC5H,OAAAC,eAAI+e,EAAA9e,UAAA,aAAU,KAAd,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAKzF,WAAa,mCAG3C7H,OAAAC,eAAI+e,EAAA9e,UAAA,UAAO,KAAX,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAKxF,QAAU,mCAGxC9H,OAAAC,eAAI+e,EAAA9e,UAAA,WAAQ,KAAZ,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAK7C,SAAWvF,EAAOkC,yCAGhDpH,OAAAC,eAAI+e,EAAA9e,UAAA,YAAS,KAAb,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAK3C,UAAYzF,EAAOgC,yCAGjD8X,EAAA9e,UAAAmK,gBAAA,SAAgB5B,EAA6B6E,KAI7C0R,EAAA9e,UAAAqK,eAAA,SAAe9B,EAA6B6E,KAG9C0R,GAtC4FE,EAAAA,sCCkB1F,SAAAC,IAAA,IAAAtb,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAKub,QAAUvb,EAAKwb,eACpBxb,EAAKyb,eAAY,EACjBzb,EAAK0b,aAAevY,EAAAA,MAAME,UAsS9B,OAlTmCxE,EAAAyc,EAAArb,GAejC9D,OAAAC,eAAIkf,EAAAjf,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDASdvH,OAAAC,eAAIkf,EAAAjf,UAAA,aAAU,KAAd,WACE,OAAOsf,OAAOC,kBAAoB,mCAGpCzf,OAAAC,eAAIkf,EAAAjf,UAAA,SAAM,KAAV,WACE,OAAOL,KAAKuf,yCAGdpf,OAAAC,eAAIkf,EAAAjf,UAAA,aAAU,KAAd,WACE,IAAMsH,EAAa3H,KAAK2H,WACxB,OAAOoJ,EAAAA,aAAalJ,GAAGF,GAAcA,EAAWqN,SAAW,sCAG7D7U,OAAAC,eAAIkf,EAAAjf,UAAA,WAAQ,KAAZ,WACE,IAAI2U,EAAWhV,KAAKyf,UAKpB,YAJiB,IAAbzK,IACFA,EAAWhV,KAAK6f,iBAChB7f,KAAKyf,UAAYzK,GAEZA,mCAGTsK,EAAAjf,UAAAyf,YAAA,SAAY9K,GACc,iBAAbA,IACTA,EAAWhV,KAAK6f,eAAe7K,IAEjChV,KAAKyf,UAAYzK,EACjBhV,KAAK+f,iBAGGT,EAAAjf,UAAAwf,eAAV,SAAyBG,GACvB,QADuB,IAAAA,IAAAA,EAAA,UACF,WAAjBA,EAA2B,CAE7B,GAAgB,QADV3I,EAAUrX,KAAKuf,QAAQU,WAAW,OAEtC,OAAO,IAAI9I,EAAAA,eAAeE,EAASrX,KAAKkgB,YAExC,MAAM,IAAI9M,MAAM,6CAEb,GAAqB,UAAjB4M,EAA0B,CACnC,IAAM3I,EACN,GAAgB,QADVA,EAAUrX,KAAKuf,QAAQU,WAAW,UAEtC,OAAO,IAAIE,EAAAA,cAAc9I,EAASrX,KAAKkgB,YAEvC,MAAM,IAAI9M,MAAM,4CAGlB,MAAM,IAAIA,MAAM,oBAAsB4M,EAAe,cAI/CV,EAAAjf,UAAAiI,aAAV,SAAuBC,GACrB,IAAIC,EAAkB,EAUtB,OATwC,IAAnCD,EAAcH,EAAAA,KAAKgY,cACmB,IAApC7X,EAAcH,EAAAA,KAAKkN,eACtB9M,GAAmBJ,EAAAA,KAAKa,cAEe,IAApCV,EAAcH,EAAAA,KAAK6P,eACtBzP,GAAmBJ,EAAAA,KAAK6N,cAE1BzN,GAAmBJ,EAAAA,KAAKkO,YAAclO,EAAAA,KAAK8N,gBAEtC1N,GAGT8W,EAAAjf,UAAA4U,eAAA,SAAetM,EAAyBC,GACtCA,EAAc5I,KAAKqgB,kBAAkBzX,GACrC3E,EAAA5D,UAAM4U,eAAc/Q,KAAAlE,KAAC2I,EAAcC,IAGrC0W,EAAAjf,UAAAwV,eAAA,SAAeC,EAAyBlN,GACtCA,EAAc5I,KAAKqgB,kBAAkBzX,GACrC3E,EAAA5D,UAAMwV,eAAc3R,KAAAlE,KAAC8V,EAAclN,IAI3B0W,EAAAjf,UAAA2V,UAAV,SAAoBF,EAAyBlN,GAC3C,IAAII,EAAe8M,EACnB9V,KAAKmW,YAAYvN,GACjB5I,KAAK6I,YAAcT,EAAAA,KAAKgO,eACxB,IACgE,KAAxDpW,KAAK6I,WAAaiN,GAAgB1N,EAAAA,KAAKK,eAC3CO,GAAgBZ,EAAAA,KAAKK,YACrBzI,KAAK6I,aAAeT,EAAAA,KAAKK,YACzBzI,KAAKqW,WAAWzN,IAE4C,KAAxD5I,KAAK6I,WAAaiN,GAAgB1N,EAAAA,KAAKkO,eAC3CtN,GAAgBZ,EAAAA,KAAKkO,YACrBtW,KAAK6I,aAAeT,EAAAA,KAAKkO,YACzBtW,KAAKuW,WAAW3N,IAE+C,KAA3D5I,KAAK6I,WAAaiN,GAAgB1N,EAAAA,KAAK8N,kBAC3ClN,GAAgBZ,EAAAA,KAAK8N,eACrBlW,KAAK6I,aAAeT,EAAAA,KAAK8N,eACzBlW,KAAKsgB,cAAc1X,IAGrB5I,KAAKwW,UAAU5N,GAC2B,IAArCI,EAAeZ,EAAAA,KAAKK,cACvBzI,KAAKyW,SAAS7N,GAE0B,IAArCI,EAAeZ,EAAAA,KAAKkO,cACvBtW,KAAK0W,SAAS9N,GAE6B,IAAxCI,EAAeZ,EAAAA,KAAK8N,iBACvBlW,KAAKugB,YAAY3X,GAGnB5I,KAAK2W,oBAAoB3N,EAAcJ,GAEM,IAAxCI,EAAeZ,EAAAA,KAAK8N,iBACvBlW,KAAKwgB,aAAa5X,GAEsB,IAArCI,EAAeZ,EAAAA,KAAKkO,cACvBtW,KAAK4W,UAAUhO,GAEyB,IAArCI,EAAeZ,EAAAA,KAAKK,cACvBzI,KAAK6W,UAAUjO,WAGjB5I,KAAK6I,aAAeT,EAAAA,KAAKgO,eACzBpW,KAAK8W,WAAWlO,KAIV0W,EAAAjf,UAAAoW,SAAV,SAAmB7N,GACjB3E,EAAA5D,UAAMoW,SAAQvS,KAAAlE,KAAC4I,GACf5I,KAAKygB,aAAazgB,KAAKuf,SACvBvf,KAAK+f,iBAGGT,EAAAjf,UAAAqW,SAAV,SAAmB9N,GACjB3E,EAAA5D,UAAMqW,SAAQxS,KAAAlE,KAAC4I,GACf5I,KAAK0gB,eAGGpB,EAAAjf,UAAAigB,cAAV,SAAwB1X,GACtB5I,KAAKsK,aAAY,SAAUC,QACW,IAAhCA,EAAawM,gBACfxM,EAAawM,eAAenO,EAAa5I,UAKrCsf,EAAAjf,UAAAkgB,YAAV,SAAsB3X,GACpB5I,KAAK2gB,eAAe/X,IAGZ0W,EAAAjf,UAAAmgB,aAAV,SAAuB5X,GACrB5I,KAAKyK,YAAW,SAAUF,QACW,IAA/BA,EAAayN,eACfzN,EAAayN,cAAcpP,EAAa5I,UAK9Csf,EAAAjf,UAAAsV,iBAAA,SAAiBxK,EAAiBvC,GAChC,OAAOA,GAGT0W,EAAAjf,UAAAggB,kBAAA,SAAkBzX,GAChB,IAAMyX,EAAoBlgB,OAAO6C,OAAO4F,GAGxC,OAFAyX,EAAkBO,WAAahY,EAAYoM,SAC3CqL,EAAkBrL,SAAWhV,KAAKgV,SAC3BqL,GAITlgB,OAAAC,eAAIkf,EAAAjf,UAAA,iBAAc,KAAlB,WACE,IAAIyb,EAAY9b,KAAKgc,WACrB,QAAkB,IAAdF,EAAsB,CACxB,IAAMnU,EAAa3H,KAAKyL,YACxBqQ,EAAY/K,EAAAA,aAAalJ,GAAGF,GAAcA,EAAWmU,UAAY3U,EAAAA,MAAME,QAEzE,OAAOyU,mCAGT3b,OAAAC,eAAIkf,EAAAjf,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK0f,8CAGdJ,EAAAjf,UAAA4b,aAAA,SAAaH,GACO,OAAdA,EACF9b,KAAKgc,WAAaF,OACW,IAApB9b,KAAKgc,aACdhc,KAAKgc,gBAAa,IAItBsD,EAAAjf,UAAA6b,QAAA,SAAQ/X,EAAWE,EAAWuE,GAC5B,IAAMyX,EAAoBrgB,KAAKqgB,kBAAkBzX,GAC3CiY,EAAiB7gB,KAAK6gB,eAC5B1c,GAAKS,KAAKkc,MAAMD,EAAela,MAC/BtC,GAAKO,KAAKkc,MAAMD,EAAeha,MAI/B,IAFA,IAAIyV,EAA2B,KACzBtR,EAAahL,KAAKiL,YACfrH,EAAIoH,EAAW5I,OAAS,EAAGwB,GAAK,EAAGA,GAAK,EAAG,CAClD,IAAMuH,EAAYH,EAAWpH,GAC7B,GAAImN,EAAAA,aAAalJ,GAAGsD,KAAeA,EAAUC,aAAeD,EAAUiM,WAEpE,GADkBjM,EAAUoR,UACdzW,SAAS3B,EAAGE,IAEZ,QADZiY,EAAMnR,EAAU+Q,QAAQ/X,EAAGE,EAAGgc,IAE5B,MAKR,OAAO/D,GAGTnc,OAAAC,eAAIkf,EAAAjf,UAAA,kBAAe,KAAnB,WACE,IAAMwgB,EAAiB7gB,KAAK6gB,eACtBzc,EAAKQ,KAAKkc,MAAMD,EAAela,MAC/BrC,EAAKM,KAAKkc,MAAMD,EAAeha,MACrC,OAAW,IAAPzC,GAAmB,IAAPE,EACPkY,EAAAA,UAAUuE,WAAW3c,GAAKE,GAE5BkY,EAAAA,UAAUC,4CAGT6C,EAAAjf,UAAAmf,aAAV,WACE,OAAOwB,SAASC,cAAc,WAGtB3B,EAAAjf,UAAAogB,aAAV,SAAuBS,GACrB,IAAML,EAAiB7gB,KAAK6gB,eACtBla,EAAOka,EAAela,KAAO/B,KAAKkc,MAAMD,EAAela,MACvDE,EAAOga,EAAeha,KAAOjC,KAAKkc,MAAMD,EAAeha,MACvDE,EAAOnC,KAAKuc,KAAKxa,EAAOka,EAAeO,OACvCpa,EAAOpC,KAAKuc,KAAKta,EAAOga,EAAeQ,QACvCC,EAAc,IAAIna,EAAAA,MAAMR,EAAME,EAAME,EAAMC,GAChD,IAAKhH,KAAK0f,aAAajf,OAAO6gB,GAAc,CAC1C,IAAMpB,EAAalgB,KAAKkgB,WACxBgB,EAAKE,MAAQra,EAAOmZ,EACpBgB,EAAKG,OAASra,EAAOkZ,EACrBgB,EAAKK,MAAMH,MAAQra,EAAO,KAC1Bma,EAAKK,MAAMF,OAASra,EAAO,KAC3BhH,KAAK0f,aAAe4B,IAIxBhC,EAAAjf,UAAAqgB,YAAA,WACE,IAAM1L,EAAWhV,KAAKgV,SACtB,GAAIA,aAAoBmC,EAAAA,eAAgB,CACtC,IAAMmK,EAActhB,KAAK0f,aACzB1K,EAASqC,QAAQmK,UAAU,EAAG,EAAGF,EAAYva,KAAMua,EAAYta,WAC1D,GAAIgO,aAAoBmL,EAAAA,cAAe,CAC5C,IAAM9I,EAAUrC,EAASqC,QACzBA,EAAQoK,MAAMpK,EAAQqK,iBAAmBrK,EAAQsK,oBAIrDrC,EAAAjf,UAAA0f,cAAA,WACE,IAAM/K,EAAWhV,KAAKgV,SACtB,GAAIA,aAAoBmC,EAAAA,eAAgB,CACtC,IAAM+I,EAAalgB,KAAKkgB,WACxBlL,EAASqC,QAAQuK,aAAa1B,EAAY,EAAG,EAAGA,EAAY,EAAG,QAC1D,GAAIlL,aAAoBmL,EAAAA,cAAe,CAC5C,IAAMmB,EAActhB,KAAK0f,aACzB1K,EAASqC,QAAQwK,SAAS,EAAG,EAAGP,EAAYva,KAAMua,EAAYta,QAIxDsY,EAAAjf,UAAAsgB,eAAV,SAAyB/X,GACvB,IAAMgY,EAAahY,EAAYgY,WACzB5L,EAAWpM,EAAYoM,SAC7B,GAAI4L,aAAsBzJ,EAAAA,gBAAkBnC,aAAoBmC,EAAAA,eAAgB,CAC9E,IAAM2K,EAAY9M,EAASqC,QAAQ0K,aAAa,EAAG,EAAG/hB,KAAKuf,QAAQ6B,MAAOphB,KAAKuf,QAAQ8B,QACjFR,EAAiB7gB,KAAK6gB,eACtBX,EAAaU,EAAWV,WACxB7I,EAAUuJ,EAAWvJ,QAC3BA,EAAQC,OACRD,EAAQ2K,YAAchiB,KAAKiiB,QAAQtgB,MACnC0V,EAAQ6K,yBAA2BliB,KAAKmiB,mBAAmBxgB,MAC3D,IAAMwC,EAAIS,KAAKkc,MAAMD,EAAela,MAAQuZ,EACtC7b,EAAIO,KAAKkc,MAAMD,EAAeha,MAAQqZ,EAC5C7I,EAAQ+K,aAAaN,EAAW3d,EAAGE,GACnCgT,EAAQG,YA3RZvU,EAAA,CADCqX,EAAAA,eAAe+H,OAAQ,CAAC1gB,MAAO,mCAIhCsB,EAAA,CADCqX,EAAAA,eAAegI,OAAQ,CAAC3gB,MAAO,0DA4RlC2d,GAlTmC7X,GCAtB8a,EAAoB,CAC/B1a,GAAA,SAAGqX,GACD,GAAsB,iBAAXA,GAAkC,OAAXA,EAAiB,CACjD,IAAMzR,EAAOyR,EACb,OAAOzR,aAAgB6R,GAChBkD,EAAAA,eAAe3a,GAAG4F,IAAS7F,EAAQC,GAAG4F,GAE/C,OAAO,kBCnBX,SAAAgV,mDAQA,OARsF5f,EAAA4f,EAAAxe,GACpFwe,EAAApiB,UAAAqiB,kBAAA,SAAkB9Z,EAAuC6E,KAIzDgV,EAAApiB,UAAAsiB,iBAAA,SAAiB/Z,EAAuC6E,KAG1DgV,GARsFtD,iBCGtF,SAAAyD,mDAoGA,OApGmF/f,EAAA+f,EAAA3e,GACjF9D,OAAAC,eAAIwiB,EAAAviB,UAAA,aAAU,KAAd,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAKuD,WAAa,sCAG3C7Q,OAAAC,eAAIwiB,EAAAviB,UAAA,gBAAa,KAAjB,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAK3F,cAAgB,sCAG9C3H,OAAAC,eAAIwiB,EAAAviB,UAAA,UAAO,KAAX,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAK1F,QAAU,mCAGxC5H,OAAAC,eAAIwiB,EAAAviB,UAAA,aAAU,KAAd,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAKzF,WAAa,mCAG3C7H,OAAAC,eAAIwiB,EAAAviB,UAAA,UAAO,KAAX,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAKxF,QAAU,mCAGxC9H,OAAAC,eAAIwiB,EAAAviB,UAAA,WAAQ,KAAZ,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAK7C,SAAWvF,EAAOkC,yCAGhDpH,OAAAC,eAAIwiB,EAAAviB,UAAA,YAAS,KAAb,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAK3C,UAAYzF,EAAOgC,yCAGjDub,EAAAviB,UAAA6U,gBAAA,SAAgBtM,EAA6B6E,KAI7CmV,EAAAviB,UAAAgV,eAAA,SAAezM,EAA6B6E,KAI5CmV,EAAAviB,UAAAmK,gBAAA,SAAgB5B,EAA6B6E,KAI7CmV,EAAAviB,UAAAqK,eAAA,SAAe9B,EAA6B6E,KAI5CmV,EAAAviB,UAAA0W,eAAA,SAAenO,EAA6B6E,KAI5CmV,EAAAviB,UAAA2X,cAAA,SAAcpP,EAA6B6E,KAI3CmV,EAAAviB,UAAA+K,SAAA,WACE,IAAMqC,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,GAAiBA,EAAKrC,YAG/BwX,EAAAviB,UAAA8a,kBAAA,SAAkBD,EAAiBzN,KAInCmV,EAAAviB,UAAA+a,iBAAA,SAAiBF,EAAiBzN,KAIlCmV,EAAAviB,UAAA+W,SAAA,WACE,IAAM3J,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,GAAiBA,EAAK2J,YAG/BwL,EAAAviB,UAAAsb,kBAAA,SAAkBD,EAAiBjO,KAInCmV,EAAAviB,UAAAub,iBAAA,SAAiBF,EAAiBjO,KAIlCtN,OAAAC,eAAIwiB,EAAAviB,UAAA,YAAS,KAAb,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAKqO,UAAY3U,EAAAA,MAAME,yCAGhDlH,OAAAC,eAAIwiB,EAAAviB,UAAA,aAAU,KAAd,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAKsO,WAAa5U,EAAAA,MAAME,yCAGjDlH,OAAAC,eAAIwiB,EAAAviB,UAAA,YAAS,KAAb,WACE,IAAMoN,EAAOzN,KAAKof,MAClB,OAAgB,OAAT3R,EAAgBA,EAAK8O,UAAYpV,EAAAA,MAAME,yCAElDub,GApGmFC,EAAAA,8BCAjF,SAAAC,IAAA,IAAA9e,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAKyI,WAAapH,EAAOkC,UA6B7B,OAnCkC1E,EAAAigB,EAAA7e,GAStB6e,EAAAziB,UAAAmS,mBAAV,SAA6BrH,EAAiBgI,GAC5CnT,KAAK+iB,oBACL9e,EAAA5D,UAAMmS,mBAAkBtO,KAAAlE,KAACmL,EAAWgI,IAG5B2P,EAAAziB,UAAA2iB,mBAAV,SAA6B7X,GAC3BnL,KAAK+iB,oBACL9e,EAAA5D,UAAM+R,mBAAkBlO,KAAAlE,KAACmL,IAG3B2X,EAAAziB,UAAAqL,yBAAA,SAAyBP,EAAoBI,EAAsBC,GACjExL,KAAK+iB,qBAGGD,EAAAziB,UAAA0iB,kBAAV,WACE,IAAMvX,EAAexL,KAAKyM,WACpBlB,EAAevL,KAAK+K,kBACrBS,EAAa/K,OAAO8K,KACvBvL,KAAKyM,WAAalB,EAClBvL,KAAKsL,gBAAgBC,EAAcC,KAIvCrL,OAAAC,eAAI0iB,EAAAziB,UAAA,YAAS,KAAb,WACE,OAAOL,KAAKyM,4CAEhBqW,GAnCkCrb,iBC4ChC,SAAAwb,IAAA,IAAAjf,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAKyI,WAAapH,EAAOgC,QACzBrD,EAAKmY,SAAS+G,SAAWlf,EAAKmf,cAAcC,KAAKpf,KAqRrD,OAhSkCnB,EAAAogB,EAAAhf,GAchC9D,OAAAC,eAAI6iB,EAAA5iB,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDA6Bdub,EAAA5iB,UAAAgjB,UAAA,SAAUA,GACR,YAAkB,IAAdA,OACyB,IAApBrjB,KAAKsjB,WAAwBtjB,KAAKsjB,WAAa,MAEpC,OAAdD,EACFrjB,KAAKsjB,WAAaD,OACW,IAApBrjB,KAAKsjB,aACdtjB,KAAKsjB,gBAAa,GAEbtjB,OAMXijB,EAAA5iB,UAAAkjB,MAAA,SAAMA,GACJ,YAAc,IAAVA,EACKvjB,KAAKyR,aAAa,UAEX,OAAV8R,GAAoBA,aAAiBnb,EAAAA,OACvCmb,EAAQC,EAAAA,YAAY3hB,QAAQ0hB,IAE9BvjB,KAAK4R,aAAa,QAAS2R,GACpBvjB,OAMXijB,EAAA5iB,UAAAojB,eAAA,SAAeA,GACb,YAAuB,IAAnBA,OAC8B,IAAzBzjB,KAAK0jB,gBAA6B1jB,KAAK0jB,gBAAkB,QAEhE1jB,KAAK0jB,gBAAkBD,EAChBzjB,OAIXijB,EAAA5iB,UAAAsjB,eAAA,WACE,QAAS3jB,KAAK4jB,MAAMjiB,OAAuC,iBAAvB3B,KAAKiiB,QAAQtgB,OAGnDshB,EAAA5iB,UAAAwjB,SAAA,SAASC,EAAwBC,GAC/B,IAAI9hB,OAUa,KARfA,EADE6hB,aAAiBb,GAEVa,aAAiBjkB,EADnBikB,EAAMtjB,QAGJX,EAASkC,QAAQ+hB,GACnB,CAAChkB,IAAKgkB,EAAM,GAAI/jB,IAAK+jB,EAAM,IAE3BA,GAEAhkB,UAA+B,IAAbmC,EAAKlC,IAC9BC,KAAKmc,SAAS,IAAItc,EAASoC,EAAKnC,IAAKmC,EAAKlC,KAAMgkB,QAC5B,IAAX9hB,EAAKkC,QAA2B,IAAXlC,EAAKoC,GACnCrE,KAAKgkB,UAAU,IAAIC,EAAAA,QAAQhiB,EAAKkC,EAAGlC,EAAKoC,GAAI0f,QAG1B,IAAhB9hB,EAAKiiB,QACPlkB,KAAKkkB,OAAOjiB,EAAKiiB,OAAQH,QAGJ,IAAnB9hB,EAAKohB,WACPrjB,KAAKqjB,UAAUphB,EAAKohB,gBAGH,IAAfphB,EAAK2hB,OACP5jB,KAAK4jB,MAAM3hB,EAAK2hB,MAAOG,QAEJ,IAAjB9hB,EAAKggB,SACPjiB,KAAKiiB,QAAQhgB,EAAKggB,QAAS8B,QAGH,IAAtB9hB,EAAKkiB,cACPnkB,KAAKmkB,aAAaliB,EAAKkiB,aAAcJ,QAEX,IAAxB9hB,EAAKwhB,gBACPzjB,KAAKyjB,eAAexhB,EAAKwhB,qBAGT,IAAdxhB,EAAKmiB,MACPpkB,KAAKokB,KAAKniB,EAAKmiB,KAAML,QAEA,IAAnB9hB,EAAKoiB,WACPrkB,KAAKqkB,UAAUpiB,EAAKoiB,UAAWN,QAGd,IAAf9hB,EAAKshB,OACPvjB,KAAKujB,MAAMthB,EAAKshB,YAGE,IAAhBthB,EAAKiZ,QACPlb,KAAK6a,UAAU5Y,EAAKiZ,aAEF,IAAhBjZ,EAAKyZ,QACP1b,KAAK6K,UAAU5I,EAAKyZ,SAIduH,EAAA5iB,UAAA8iB,cAAV,SAAwBmB,EAAmCC,GACzD,QAAoB,IAAhBD,EAAwB,CAC1B,IAAM9Y,EAAexL,KAAKyM,WACpBlB,EAAe,IAAIlG,EAAOif,EAAYrkB,KAAMqkB,EAAYpkB,KAAMokB,EAAYrkB,KAAMqkB,EAAYpkB,MAClGF,KAAKyM,WAAalB,EAClBvL,KAAKsL,gBAAgBC,EAAcC,GAErCxL,KAAKmI,cAAcC,EAAAA,KAAKC,eAGhB4a,EAAA5iB,UAAAiI,aAAV,SAAuBC,GACrB,IAAIC,EAAkB,EAKtB,OAJ0C,IAArCD,EAAcH,EAAAA,KAAKC,eAAwC,OAAjBrI,KAAKujB,UAClD/a,GAAmBJ,EAAAA,KAAKK,aAE1BD,GAAmBvE,EAAA5D,UAAMiI,aAAYpE,KAAAlE,KAACuI,EAAcC,IAI5Cya,EAAA5iB,UAAA0J,UAAV,SAAoBnB,GAElB,GADA3E,EAAA5D,UAAM0J,UAAS7F,KAAAlE,KAAC4I,GACZ5I,KAAKgkB,UAAUQ,SAAU,CAC3B,IAAMR,EAAYpb,EAAYd,cAAcxH,QAAQN,KAAKmc,SAASxa,OAElE3B,KAAKgkB,UAAUS,OAAST,EACxBhkB,KAAKgkB,UAAUU,OAASV,IAIlBf,EAAA5iB,UAAAoW,SAAV,SAAmB7N,GACjB3E,EAAA5D,UAAMoW,SAAQvS,KAAAlE,KAAC4I,GACf,IAAM2a,EAAQvjB,KAAKujB,QACfxS,EAAAA,aAAalJ,GAAG0b,IAClBvjB,KAAK2kB,YAAYpB,EAAOvjB,KAAK8b,YAIvBmH,EAAA5iB,UAAAskB,YAAV,SAAsBpB,EAAqBqB,GACzC,IAAMC,OAAqC,IAAzB7kB,KAAK0jB,gBAA6B1jB,KAAK0jB,gBAAkB,OAGrErX,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACnCyD,EAAU9kB,KAAKmkB,aAAaxiB,MAAOojB,QAAQ1Y,GAC3C2Y,EAAShlB,KAAKgkB,UAAUriB,MAAvBwC,EAAC6gB,EAAA7gB,EACJ8gB,EADOD,EAAA3gB,EAEO,QAAdwgB,EACFI,GAAMH,EACiB,WAAdD,IACTI,GAAMH,GAGJI,EAAAA,YAAYrd,GAAG0b,KACjBA,EAAM4B,UAAUC,aAAa,UAC7B7B,EAAM8B,aAAaD,aAAa,UAChC7B,EAAM+B,WAAWF,aAAa,IAAInB,EAAAA,QAAQ9f,EAAG8gB,MAIjD9kB,OAAAC,eAAI6iB,EAAA5iB,UAAA,aAAU,KAAd,WACQ,IAAA2kB,EAAShlB,KAAKgkB,UAAUriB,MAAvBwC,EAAC6gB,EAAA7gB,EAAEE,EAAC2gB,EAAA3gB,EACX,OAAO,IAAI8C,EAAAA,MAAMhD,EAAGE,EAAGF,EAAGE,oCAG5BlE,OAAAC,eAAI6iB,EAAA5iB,UAAA,YAAS,KAAb,WACQ,IAAA2kB,EAAShlB,KAAKgkB,UAAUriB,MAAvBwC,EAAC6gB,EAAA7gB,EAAEE,EAAC2gB,EAAA3gB,EACLgf,OAAgC,IAApBrjB,KAAKsjB,WAAwBtjB,KAAKsjB,WAAa,EACjE,OAAO,IAAInc,EAAAA,MAAMhD,EAAIkf,EAAWhf,EAAIgf,EAAWlf,EAAIkf,EAAWhf,EAAIgf,oCAGpEljB,OAAAC,eAAI6iB,EAAA5iB,UAAA,YAAS,KAAb,WACE,OAAOL,KAAKyM,4CAGdwW,EAAA5iB,UAAA6b,QAAA,SAAQ/X,EAAWE,EAAWuE,GAC5B,IAAI0T,EAAMrY,EAAA5D,UAAM6b,QAAOhY,KAAAlE,KAACmE,EAAGE,EAAGuE,GAC9B,GAAY,OAAR0T,EAAc,CAChB,IAAMtH,EAAWpM,EAAYoM,SAC7B,GAAIA,aAAoBmC,EAAAA,eAAgB,CACtC,IAAME,EAAUrC,EAASqC,QACzBiF,EAAMtc,KAAKulB,aAAaphB,EAAGE,EAAGgT,EAASrX,KAAK8b,YAGhD,OAAOQ,GAGC2G,EAAA5iB,UAAAklB,aAAV,SAAuBC,EAAYC,EAAYpO,EAAwBuN,GAC/D,IAAAI,EAAShlB,KAAKgkB,UAAUriB,MAAvBwC,EAAC6gB,EAAA7gB,EAAEE,EAAC2gB,EAAA3gB,EACL6f,EAASlkB,KAAKkkB,OAAOviB,MAEvB0hB,OAAgC,IAApBrjB,KAAKsjB,WAAwBtjB,KAAKsjB,WAAa,EAC/D,QAAe,IAAXY,EAAmB,CACrB,IAAM7X,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACzCgC,EAAYze,KAAK4B,IAAI6c,EAAWa,EAAOa,QAAQ1Y,IAGjD,IAAMjI,EAAKD,EAAIqhB,EACTlhB,EAAKD,EAAIohB,EACf,OAAIrhB,EAAKA,EAAKE,EAAKA,EAAK+e,EAAYA,EAC3BrjB,KAEF,MAGTijB,EAAA5iB,UAAAG,MAAA,WACE,IAAMyB,EAAyB,GA2B/B,YA1B4B,IAAxBjC,KAAKmc,SAASxa,QAChBM,EAAKnC,IAAME,KAAKmc,SAASxa,MAAM7B,IAC/BmC,EAAKlC,IAAMC,KAAKmc,SAASxa,MAAM5B,UAEJ,IAAzBC,KAAKgkB,UAAUriB,OAAqB3B,KAAKgkB,UAAUQ,WACrDviB,EAAKkC,EAAInE,KAAKgkB,UAAUriB,MAAMwC,EAC9BlC,EAAKoC,EAAIrE,KAAKgkB,UAAUriB,MAAM0C,QAEN,IAAtBrE,KAAKkkB,OAAOviB,QACdM,EAAKiiB,OAASlkB,KAAKkkB,OAAOviB,OAEJ,OAApB3B,KAAKsjB,aACPrhB,EAAKohB,UAAYrjB,KAAKsjB,iBAEC,IAArBtjB,KAAK4jB,MAAMjiB,QACbM,EAAK2hB,MAAQ5jB,KAAK4jB,MAAMjiB,YAEC,IAAvB3B,KAAKiiB,QAAQtgB,QACfM,EAAKggB,QAAUjiB,KAAKiiB,QAAQtgB,YAEE,IAA5B3B,KAAKmkB,aAAaxiB,QACpBM,EAAKkiB,aAAenkB,KAAKmkB,aAAaxiB,YAEX,IAAzB3B,KAAK0jB,kBACPzhB,EAAKwhB,eAAiBzjB,KAAK0jB,iBAEtBzhB,GAGFghB,EAAAphB,QAAP,SAAqBiiB,GACnB,GAAIA,aAAiBb,EACnB,OAAOa,EACF,GAAqB,iBAAVA,GAAgC,OAAVA,EAAgB,CACtD,IAAMrW,EAAO,IAAIwV,EAEjB,OADAxV,EAAKoW,SAASC,GACPrW,EAET,MAAM,IAAIzL,UAAU,GAAK8hB,IA3Q3B7gB,EAAA,CADCqX,EAAAA,eAAeza,EAAU,CAAC8B,MAAO9B,EAAS0B,2CAI3C0B,EAAA,CADCqX,EAAAA,eAAe2J,EAAAA,QAAS,CAACtiB,MAAOsiB,EAAAA,QAAQ1iB,4CAIzC0B,EAAA,CADCqX,EAAAA,eAAeoL,EAAAA,sCAIhBziB,EAAA,CADCqX,EAAAA,eAAe2E,EAAAA,oCAIhBhc,EAAA,CADCqX,EAAAA,eAAe+H,uCAIhBpf,EAAA,CADCqX,EAAAA,eAAeoL,EAAAA,4CAIhBziB,EAAA,CADCqX,EAAAA,eAAeqL,EAAAA,KAAM,CAACC,SAAS,gCAIhC3iB,EAAA,CADCqX,EAAAA,eAAe2E,EAAAA,MAAO,CAAC2G,SAAS,qCAyPnC3C,GAhSkCxb,iBCNhC,SAAAoe,IAAA,IAAA7hB,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAKyI,WAAapH,EAAOgC,QACzBrD,EAAK+H,UAAUmX,SAAWlf,EAAK8hB,eAAe1C,KAAKpf,KA2NvD,OApOmCnB,EAAAgjB,EAAA5hB,GAYjC9D,OAAAC,eAAIylB,EAAAxlB,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDAuBdme,EAAAxlB,UAAAgjB,UAAA,SAAUA,GACR,YAAkB,IAAdA,OACyB,IAApBrjB,KAAKsjB,WAAwBtjB,KAAKsjB,WAAa,MAEpC,OAAdD,EACFrjB,KAAKsjB,WAAaD,OACW,IAApBrjB,KAAKsjB,aACdtjB,KAAKsjB,gBAAa,GAEbtjB,OAID6lB,EAAAxlB,UAAAylB,eAAV,SAAyBC,EAAoCC,GAC3D,QAAqB,IAAjBD,EAAyB,CAC3B,IAAMva,EAAexL,KAAKyM,WACpBlB,EAAe,IAAIlG,EAAO0gB,EAAa9lB,KAAM8lB,EAAa7lB,KAAM6lB,EAAa9lB,KAAM8lB,EAAa7lB,MACtGF,KAAKyM,WAAalB,EAClBvL,KAAKsL,gBAAgBC,EAAcC,GAErCxL,KAAKmI,cAAcC,EAAAA,KAAKC,eAGhBwd,EAAAxlB,UAAA0J,UAAV,SAAoBnB,GAElB,IAAIqd,GADJhiB,EAAA5D,UAAM0J,UAAS7F,KAAAlE,KAAC4I,GAEZ5I,KAAKimB,WAAWzB,WAElByB,EADsBrd,EAAYd,cACPxH,QAAQN,KAAK+L,UAAUpK,OAClD3B,KAAKimB,WAAWb,aAAaa,IAE7BA,EAAajmB,KAAKimB,WAAWtkB,MAE/B,IAAMijB,EAAQ5kB,KAAK8b,UACbzP,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACnC6C,EAASlkB,KAAKkkB,OAAOviB,MAAOojB,QAAQ1Y,GAEpCqP,GADWzU,SAASgf,EAAW9hB,KAAO8C,SAASgf,EAAW5hB,KAAO4C,SAASid,KACrDU,EAAMsB,iBAAiB,IAAIC,EAAAA,SAASF,EAAW9hB,EAAG8hB,EAAW5hB,EAAG6f,IAC3FlkB,KAAK6K,UAAU6Q,IAGPmK,EAAAxlB,UAAAqW,SAAV,SAAmB9N,GACjB3E,EAAA5D,UAAMqW,SAAQxS,KAAAlE,KAAC4I,GACf,IAAMoM,EAAWpM,EAAYoM,SAC7B,GAAIA,aAAoBmC,EAAAA,iBAAmBnX,KAAKoL,aAAepL,KAAKoX,WAAY,CAC9E,IAAMC,EAAUrC,EAASqC,QACzBA,EAAQC,OACRtX,KAAKomB,aAAapR,EAASqC,QAASrX,KAAK8b,WACzCzE,EAAQG,YAIFqO,EAAAxlB,UAAA+lB,aAAV,SAAuB/O,EAAwBuN,GAC7C,IAAMvY,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACnC4E,EAAajmB,KAAKimB,WAAWtkB,MAC7BuiB,EAASlkB,KAAKkkB,OAAOviB,MAAOojB,QAAQ1Y,GAE1CgL,EAAQI,YACRJ,EAAQgP,IAAIJ,EAAW9hB,EAAG8hB,EAAW5hB,EAAG6f,EAAQ,EAAG,EAAItf,KAAK0hB,IAE5D,IAAMC,EAAOvmB,KAAKumB,KAAK5kB,WACV,IAAT4kB,IACFlP,EAAQmP,UAAYD,EAAKllB,WACzBgW,EAAQkP,QAGV,IAAMxO,EAAS/X,KAAK+X,OAAOpW,MAC3B,QAAe,IAAXoW,EAAmB,CACrB,IAAM0O,EAAczmB,KAAKymB,YAAY9kB,WACjB,IAAhB8kB,IACFpP,EAAQQ,UAAY4O,EAAY1B,QAAQ1Y,IAE1CgL,EAAQS,YAAcC,EAAO1W,WAC7BgW,EAAQU,WAIZ5X,OAAAC,eAAIylB,EAAAxlB,UAAA,eAAY,KAAhB,WACE,IAAMukB,EAAQ5kB,KAAK8b,UACbzP,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACnCvE,EAAuB9c,KAAK+c,cAAcH,UAC1CqJ,EAAajmB,KAAKimB,WAAWtkB,MAC7BqjB,EAAWlI,EAAqBD,UAAUoJ,EAAW9hB,EAAG8hB,EAAW5hB,GAAlEqiB,EAAE1B,EAAA,GAAE2B,EAAE3B,EAAA,GACPd,EAASlkB,KAAKkkB,OAAOviB,MAAOojB,QAAQ1Y,GAC1C,OAAO,IAAIlF,EAAAA,MAAMuf,EAAKxC,EAAQyC,EAAKzC,EAAQwC,EAAKxC,EAAQyC,EAAKzC,oCAG/D/jB,OAAAC,eAAIylB,EAAAxlB,UAAA,aAAU,KAAd,WACE,IAAMukB,EAAQ5kB,KAAK8b,UACbzP,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACnC4E,EAAajmB,KAAKimB,WAAWtkB,MAC7BuiB,EAASlkB,KAAKkkB,OAAOviB,MAAOojB,QAAQ1Y,GAC1C,OAAO,IAAIlF,EAAAA,MAAM8e,EAAW9hB,EAAI+f,EAAQ+B,EAAW5hB,EAAI6f,EACtC+B,EAAW9hB,EAAI+f,EAAQ+B,EAAW5hB,EAAI6f,oCAGzD/jB,OAAAC,eAAIylB,EAAAxlB,UAAA,YAAS,KAAb,WACE,IAAMukB,EAAQ5kB,KAAK8b,UACbzP,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACnC4E,EAAajmB,KAAKimB,WAAWtkB,MAC7BuiB,EAASlkB,KAAKkkB,OAAOviB,MAAOojB,QAAQ1Y,GACpCgX,OAAgC,IAApBrjB,KAAKsjB,WAAwB1e,KAAK4B,IAAIxG,KAAKsjB,WAAYY,GAAUA,EACnF,OAAO,IAAI/c,EAAAA,MAAM8e,EAAW9hB,EAAIkf,EAAW4C,EAAW5hB,EAAIgf,EACzC4C,EAAW9hB,EAAIkf,EAAW4C,EAAW5hB,EAAIgf,oCAG5DljB,OAAAC,eAAIylB,EAAAxlB,UAAA,YAAS,KAAb,WACE,OAAOL,KAAKyM,4CAGdoZ,EAAAxlB,UAAA6b,QAAA,SAAQ/X,EAAWE,EAAWuE,GAC5B,IAAI0T,EAAMrY,EAAA5D,UAAM6b,QAAOhY,KAAAlE,KAACmE,EAAGE,EAAGuE,GAC9B,GAAY,OAAR0T,EAAc,CAChB,IAAMtH,EAAWpM,EAAYoM,SAC7B,GAAIA,aAAoBmC,EAAAA,eAAgB,CACtC,IAAME,EAAUrC,EAASqC,QACzBiF,EAAMtc,KAAK4mB,cAAcziB,EAAGE,EAAGgT,EAASrX,KAAK8b,UAAW9G,EAASkL,aAGrE,OAAO5D,GAGCuJ,EAAAxlB,UAAAumB,cAAV,SAAwBziB,EAAWE,EAAWgT,EACtBuN,EAAc1E,GACpC,IAAM7T,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACnC4E,EAAajmB,KAAKimB,WAAWtkB,MAC7BuiB,EAASlkB,KAAKkkB,OAAOviB,MAAOojB,QAAQ1Y,GAE1C,QAAwB,IAApBrM,KAAKumB,KAAK5kB,MAAkB,CAC9B,IAAM0hB,OAAgC,IAApBrjB,KAAKsjB,WAAwB1e,KAAK4B,IAAIxG,KAAKsjB,WAAYY,GAAUA,EAC7E9f,EAAK6hB,EAAW9hB,EAAIA,EACpBG,EAAK2hB,EAAW5hB,EAAIA,EAC1B,GAAID,EAAKA,EAAKE,EAAKA,EAAK+e,EAAYA,EAClC,OAAOrjB,KAIX,IAAMymB,EAAczmB,KAAKymB,YAAY9kB,MACrC,QAA0B,IAAtB3B,KAAK+X,OAAOpW,YAAoC,IAAhB8kB,EAAwB,CAQ1D,GAPAtiB,GAAK+b,EACL7b,GAAK6b,EAEL7I,EAAQC,OACRD,EAAQI,YACRJ,EAAQgP,IAAIJ,EAAW9hB,EAAG8hB,EAAW5hB,EAAG6f,EAAQ,EAAG,EAAItf,KAAK0hB,IAC5DjP,EAAQQ,UAAY4O,EAAY1B,QAAQ1Y,GACpCgL,EAAQwP,gBAAgB1iB,EAAGE,GAE7B,OADAgT,EAAQG,UACDxX,KAEPqX,EAAQG,UAGZ,OAAO,MAGFqO,EAAAhkB,QAAP,SAAeilB,GACb,GAAIA,aAAkBjB,EACpB,OAAOiB,EACF,GAAsB,iBAAXA,GAAkC,OAAXA,EAAiB,CACxD,IAAMrZ,EAAO,IAAIoY,EA4BjB,YA3ByB,IAArBiB,EAAO/a,WACT0B,EAAK1B,UAAU+a,EAAO/a,gBAEE,IAAtB+a,EAAOb,YACTxY,EAAKwY,WAAWa,EAAOb,iBAEH,IAAlBa,EAAO5C,QACTzW,EAAKyW,OAAO4C,EAAO5C,aAEI,IAArB4C,EAAOzD,WACT5V,EAAK4V,UAAUyD,EAAOzD,gBAEJ,IAAhByD,EAAOP,MACT9Y,EAAK8Y,KAAKO,EAAOP,WAEG,IAAlBO,EAAO/O,QACTtK,EAAKsK,OAAO+O,EAAO/O,aAEM,IAAvB+O,EAAOL,aACThZ,EAAKgZ,YAAYK,EAAOL,kBAEJ,IAAlBK,EAAO5L,QACTzN,EAAKoN,UAAUiM,EAAO5L,aAEF,IAAlB4L,EAAOpL,QACTjO,EAAK5C,UAAUic,EAAOpL,QAEjBjO,EAET,MAAM,IAAIzL,UAAU,GAAK8kB,IAjN3B7jB,EAAA,CADCqX,EAAAA,eAAeza,EAAU,CAAC8B,MAAO9B,EAAS0B,4CAI3C0B,EAAA,CADCqX,EAAAA,eAAe2J,EAAAA,QAAS,CAACtiB,MAAOsiB,EAAAA,QAAQ1iB,6CAIzC0B,EAAA,CADCqX,EAAAA,eAAeoL,EAAAA,OAAQ,CAAC/jB,MAAO,kCAIhCsB,EAAA,CADCqX,EAAAA,eAAe2E,EAAAA,MAAO,CAAC2G,SAAS,gCAIjC3iB,EAAA,CADCqX,EAAAA,eAAe2E,EAAAA,MAAO,CAAC2G,SAAS,kCAIjC3iB,EAAA,CADCqX,EAAAA,eAAeoL,EAAAA,OAAQ,CAACE,SAAS,uCAqMpCC,GApOmCpe,iBCWjC,SAAAsf,IAAA,IAAA/iB,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAKyI,WAAapH,EAAOgC,QACzBrD,EAAK+H,UAAUmX,SAAWlf,EAAK8hB,eAAe1C,KAAKpf,KAsOvD,OA7OgCnB,EAAAkkB,EAAA9iB,GAU9B9D,OAAAC,eAAI2mB,EAAA1mB,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDAuCdvH,OAAAC,eAAI2mB,EAAA1mB,UAAA,QAAK,KAAT,WACE,OAAO,IAAI2mB,EAAAA,IAAIhnB,KAAKimB,WAAWtkB,MAAQ3B,KAAKinB,YAAYtlB,MAAQ3B,KAAKknB,YAAYvlB,MAClE3B,KAAKmnB,WAAWxlB,MAAQ3B,KAAKonB,WAAWzlB,MAAQ3B,KAAKqnB,SAAS1lB,MAC9D3B,KAAKsnB,UAAU3lB,MAAQ3B,KAAKunB,aAAa5lB,wCAG1DxB,OAAAC,eAAI2mB,EAAA1mB,UAAA,QAAK,KAAT,WACE,OAAO,IAAI2mB,EAAAA,IAAIhnB,KAAKimB,WAAWuB,MAAQxnB,KAAKinB,YAAYO,MAAQxnB,KAAKknB,YAAYM,MAClExnB,KAAKmnB,WAAWK,MAAQxnB,KAAKonB,WAAWI,MAAQxnB,KAAKqnB,SAASG,MAC9DxnB,KAAKsnB,UAAUE,MAAQxnB,KAAKunB,aAAaC,wCAGhDT,EAAA1mB,UAAAylB,eAAV,SAAyBC,EAAoCC,GAC3D,QAAqB,IAAjBD,EAAyB,CAC3B,IAAMva,EAAexL,KAAKyM,WACpBlB,EAAe,IAAIlG,EAAO0gB,EAAa9lB,KAAM8lB,EAAa7lB,KAAM6lB,EAAa9lB,KAAM8lB,EAAa7lB,MACtGF,KAAKyM,WAAalB,EAClBvL,KAAKsL,gBAAgBC,EAAcC,GAErCxL,KAAKmI,cAAcC,EAAAA,KAAKC,eAGhB0e,EAAA1mB,UAAA0J,UAAV,SAAoBnB,GAElB,IAAIqd,GADJhiB,EAAA5D,UAAM0J,UAAS7F,KAAAlE,KAAC4I,GAEZ5I,KAAKimB,WAAWzB,WAElByB,EADsBrd,EAAYd,cACPxH,QAAQN,KAAK+L,UAAUpK,OAClD3B,KAAKimB,WAAWb,aAAaa,IAE7BA,EAAajmB,KAAKimB,WAAWtkB,MAE/B,IAAMijB,EAAQ5kB,KAAK8b,UACbzP,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACnC6C,EAASlkB,KAAKknB,YAAYvlB,MAAOojB,QAAQ1Y,GAEzCqP,GADWzU,SAASgf,EAAW9hB,KAAO8C,SAASgf,EAAW5hB,KAAO4C,SAASid,KACrDU,EAAMsB,iBAAiB,IAAIC,EAAAA,SAASF,EAAW9hB,EAAG8hB,EAAW5hB,EAAG6f,IAC3FlkB,KAAK6K,UAAU6Q,IAGPqL,EAAA1mB,UAAAqW,SAAV,SAAmB9N,GACjB3E,EAAA5D,UAAMqW,SAAQxS,KAAAlE,KAAC4I,GACf,IAAMoM,EAAWpM,EAAYoM,SAC7B,GAAIA,aAAoBmC,EAAAA,iBAAmBnX,KAAKoL,aAAepL,KAAKoX,WAAY,CAC9E,IAAMC,EAAUrC,EAASqC,QACzBA,EAAQC,OACRtX,KAAKynB,UAAUzS,EAASqC,QAASrX,KAAK8b,WACtCzE,EAAQG,YAIFuP,EAAA1mB,UAAAonB,UAAV,SAAoBpQ,EAAwBuN,GAC9B5kB,KAAK2B,MACb+lB,KAAKrQ,EAASuN,GAClB,IAAM2B,EAAOvmB,KAAKumB,KAAK5kB,WACV,IAAT4kB,IACFlP,EAAQmP,UAAYD,EAAKllB,WACzBgW,EAAQkP,QAEV,IAAMxO,EAAS/X,KAAK+X,OAAOpW,MAC3B,QAAe,IAAXoW,EAAmB,CACrB,IAAM0O,EAAczmB,KAAKymB,YAAY9kB,MACrC,QAAoB,IAAhB8kB,EAAwB,CAC1B,IAAMpa,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACzChK,EAAQQ,UAAY4O,EAAY1B,QAAQ1Y,GAE1CgL,EAAQS,YAAcC,EAAO1W,WAC7BgW,EAAQU,WAIZ5X,OAAAC,eAAI2mB,EAAA1mB,UAAA,eAAY,KAAhB,WACE,IAAMukB,EAAQ5kB,KAAK8b,UACbzP,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACnCvE,EAAuB9c,KAAK+c,cAAcH,UAC1CqJ,EAAajmB,KAAKimB,WAAWtkB,MAC7BqjB,EAAWlI,EAAqBD,UAAUoJ,EAAW9hB,EAAG8hB,EAAW5hB,GAAlEqiB,EAAE1B,EAAA,GAAE2B,EAAE3B,EAAA,GACPxhB,GAAKxD,KAAKinB,YAAYtlB,MAAOojB,QAAQ1Y,GAAQrM,KAAKknB,YAAYvlB,MAAOojB,QAAQ1Y,IAAS,EACtFrH,EAAIhF,KAAKmnB,WAAWxlB,MAAOgmB,WAAa3nB,KAAKonB,WAAWzlB,MAAOgmB,WAAa,EAC5ExjB,EAAIuiB,EAAKljB,EAAIoB,KAAKgjB,IAAI5iB,GACtBX,EAAIsiB,EAAKnjB,EAAIoB,KAAKijB,IAAI7iB,GAC5B,OAAO,IAAImC,EAAAA,MAAMhD,EAAGE,EAAGF,EAAGE,oCAG5BlE,OAAAC,eAAI2mB,EAAA1mB,UAAA,aAAU,KAAd,WACE,IAAMukB,EAAQ5kB,KAAK8b,UACbzP,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACnC4E,EAAajmB,KAAKimB,WAAWtkB,MAC7BuiB,EAASlkB,KAAKknB,YAAYvlB,MAAOojB,QAAQ1Y,GAC/C,OAAO,IAAIlF,EAAAA,MAAM8e,EAAW9hB,EAAI+f,EAAQ+B,EAAW5hB,EAAI6f,EACtC+B,EAAW9hB,EAAI+f,EAAQ+B,EAAW5hB,EAAI6f,oCAGzD/jB,OAAAC,eAAI2mB,EAAA1mB,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK+b,4CAGd5b,OAAAC,eAAI2mB,EAAA1mB,UAAA,YAAS,KAAb,WACE,OAAOL,KAAKyM,4CAGdsa,EAAA1mB,UAAA6b,QAAA,SAAQ/X,EAAWE,EAAWuE,GAC5B,IAAI0T,EAAMrY,EAAA5D,UAAM6b,QAAOhY,KAAAlE,KAACmE,EAAGE,EAAGuE,GAC9B,GAAY,OAAR0T,EAAc,CAChB,IAAMtH,EAAWpM,EAAYoM,SAC7B,GAAIA,aAAoBmC,EAAAA,eAAgB,CACtC,IAAME,EAAUrC,EAASqC,QACzBA,EAAQC,OACRnT,GAAK6Q,EAASkL,WACd7b,GAAK2Q,EAASkL,WACd5D,EAAMtc,KAAK8nB,WAAW3jB,EAAGE,EAAGgT,EAASrX,KAAK8b,WAC1CzE,EAAQG,WAGZ,OAAO8E,GAGCyK,EAAA1mB,UAAAynB,WAAV,SAAqB3jB,EAAWE,EAAWgT,EAAwBuN,GAIjE,GAHAvN,EAAQI,YACIzX,KAAK2B,MACb+lB,KAAKrQ,EAASuN,QACM,IAApB5kB,KAAKumB,KAAK5kB,OAAoB0V,EAAQ0Q,cAAc5jB,EAAGE,GACzD,OAAOrE,KACF,QAA0B,IAAtBA,KAAK+X,OAAOpW,MAAkB,CACvC,IAAM8kB,EAAczmB,KAAKymB,YAAY9kB,MACrC,QAAoB,IAAhB8kB,EAAwB,CAC1B,IAAMpa,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QAEzC,GADAhK,EAAQQ,UAAY4O,EAAY1B,QAAQ1Y,GACpCgL,EAAQwP,gBAAgB1iB,EAAGE,GAC7B,OAAOrE,MAIb,OAAO,MAGF+mB,EAAAllB,QAAP,SAAewkB,GACb,GAAIA,aAAeU,EACjB,OAAOV,EACF,GAAmB,iBAARA,GAA4B,OAARA,EAAc,CAClD,IAAM5Y,EAAO,IAAIsZ,EA2CjB,YA1CsB,IAAlBV,EAAIta,WACN0B,EAAK1B,UAAUsa,EAAIta,gBAEE,IAAnBsa,EAAIJ,YACNxY,EAAKwY,WAAWI,EAAIJ,iBAEE,IAApBI,EAAIY,aACNxZ,EAAKwZ,YAAYZ,EAAIY,kBAEC,IAApBZ,EAAIa,aACNzZ,EAAKyZ,YAAYb,EAAIa,kBAEA,IAAnBb,EAAIc,YACN1Z,EAAK0Z,WAAWd,EAAIc,iBAEC,IAAnBd,EAAIe,YACN3Z,EAAK2Z,WAAWf,EAAIe,iBAED,IAAjBf,EAAIgB,UACN5Z,EAAK4Z,SAAShB,EAAIgB,eAEE,IAAlBhB,EAAIiB,WACN7Z,EAAK6Z,UAAUjB,EAAIiB,gBAEI,IAArBjB,EAAIkB,cACN9Z,EAAK8Z,aAAalB,EAAIkB,mBAEP,IAAblB,EAAIE,MACN9Y,EAAK8Y,KAAKF,EAAIE,WAEG,IAAfF,EAAItO,QACNtK,EAAKsK,OAAOsO,EAAItO,aAEM,IAApBsO,EAAII,aACNhZ,EAAKgZ,YAAYJ,EAAII,kBAEJ,IAAfJ,EAAInL,QACNzN,EAAKoN,UAAUwL,EAAInL,aAEF,IAAfmL,EAAI3K,QACNjO,EAAK5C,UAAUwb,EAAI3K,QAEdjO,EAET,MAAM,IAAIzL,UAAU,GAAKqkB,IA5N3BpjB,EAAA,CADCqX,EAAAA,eAAeza,EAAU,CAAC8B,MAAO9B,EAAS0B,4CAI3C0B,EAAA,CADCqX,EAAAA,eAAe2J,EAAAA,QAAS,CAACtiB,MAAOsiB,EAAAA,QAAQ1iB,6CAIzC0B,EAAA,CADCqX,EAAAA,eAAeoL,EAAAA,OAAQ,CAAC/jB,MAAO+jB,EAAAA,OAAOsC,4CAIvC/kB,EAAA,CADCqX,EAAAA,eAAeoL,EAAAA,OAAQ,CAAC/jB,MAAO+jB,EAAAA,OAAOsC,4CAIvC/kB,EAAA,CADCqX,EAAAA,eAAe2N,EAAAA,MAAO,CAACtmB,MAAOsmB,EAAAA,MAAMD,2CAIrC/kB,EAAA,CADCqX,EAAAA,eAAe2N,EAAAA,MAAO,CAACtmB,MAAOsmB,EAAAA,MAAMD,2CAIrC/kB,EAAA,CADCqX,EAAAA,eAAe2N,EAAAA,MAAO,CAACtmB,MAAOsmB,EAAAA,MAAMD,yCAIrC/kB,EAAA,CADCqX,EAAAA,eAAeoL,EAAAA,OAAQ,CAAC/jB,MAAO,wCAIhCsB,EAAA,CADCqX,EAAAA,eAAeoL,EAAAA,OAAQ,CAAC/jB,MAAO+jB,EAAAA,OAAOsC,6CAIvC/kB,EAAA,CADCqX,EAAAA,eAAe2E,EAAAA,MAAO,CAAC2G,SAAS,gCAIjC3iB,EAAA,CADCqX,EAAAA,eAAe2E,EAAAA,MAAO,CAAC2G,SAAS,kCAIjC3iB,EAAA,CADCqX,EAAAA,eAAeoL,EAAAA,OAAQ,CAACE,SAAS,uCA8LpCmB,GA7OgCtf,iBCR9B,SAAAygB,IAAA,IAAAlkB,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAKyI,WAAapH,EAAOgC,QACzBrD,EAAKmkB,SAASjF,SAAWlf,EAAKokB,cAAchF,KAAKpf,GACjDA,EAAKqkB,OAAOnF,SAAWlf,EAAKskB,YAAYlF,KAAKpf,KA2NjD,OArOiCnB,EAAAqlB,EAAAjkB,GAa/B9D,OAAAC,eAAI8nB,EAAA7nB,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDAuBdwgB,EAAA7nB,UAAAkoB,SAAA,SAASA,GACP,YAAiB,IAAbA,OACwB,IAAnBvoB,KAAKwoB,UAAuBxoB,KAAKwoB,UAAY,MAEnC,OAAbD,EACFvoB,KAAKwoB,UAAYD,OACW,IAAnBvoB,KAAKwoB,YACdxoB,KAAKwoB,eAAY,GAEZxoB,OAIDkoB,EAAA7nB,UAAA+nB,cAAV,SAAwBK,EAAmCC,GACzD,IAAMC,EAAY3oB,KAAKqoB,OAAO1mB,MAC9B,QAAoB,IAAhB8mB,QAAwC,IAAdE,EAAsB,CAClD,IAAMnd,EAAexL,KAAKyM,WACpBlB,EAAe,IAAIlG,EAAOT,KAAK2B,IAAIkiB,EAAY3oB,IAAK6oB,EAAU7oB,KACpC8E,KAAK2B,IAAIkiB,EAAY1oB,IAAK4oB,EAAU5oB,KACpC6E,KAAK4B,IAAIiiB,EAAY3oB,IAAK6oB,EAAU7oB,KACpC8E,KAAK4B,IAAIiiB,EAAY1oB,IAAK4oB,EAAU5oB,MACpEC,KAAKyM,WAAalB,EAClBvL,KAAKsL,gBAAgBC,EAAcC,GAErCxL,KAAKmI,cAAcC,EAAAA,KAAKC,eAGhB6f,EAAA7nB,UAAAioB,YAAV,SAAsBK,EAAiCC,GACrD,IAAMH,EAAczoB,KAAKqoB,OAAO1mB,MAChC,QAAoB,IAAhB8mB,QAAwC,IAAdE,EAAsB,CAClD,IAAMnd,EAAexL,KAAKyM,WACpBlB,EAAe,IAAIlG,EAAOT,KAAK2B,IAAIkiB,EAAY3oB,IAAK6oB,EAAU7oB,KACpC8E,KAAK2B,IAAIkiB,EAAY1oB,IAAK4oB,EAAU5oB,KACpC6E,KAAK4B,IAAIiiB,EAAY3oB,IAAK6oB,EAAU7oB,KACpC8E,KAAK4B,IAAIiiB,EAAY1oB,IAAK4oB,EAAU5oB,MACpEC,KAAKyM,WAAalB,EAClBvL,KAAKsL,gBAAgBC,EAAcC,GAErCxL,KAAKmI,cAAcC,EAAAA,KAAKC,eAGhB6f,EAAA7nB,UAAA0J,UAAV,SAAoBnB,GAClB3E,EAAA5D,UAAM0J,UAAS7F,KAAAlE,KAAC4I,GAChB,IACIigB,EACAC,EAFEhhB,EAAgBc,EAAYd,cAG9B9H,KAAK6oB,UAAUrE,UACjBqE,EAAY/gB,EAAcxH,QAAQN,KAAKmoB,SAASxmB,OAChD3B,KAAK6oB,UAAUzD,aAAayD,IAE5BA,EAAY7oB,KAAK6oB,UAAUlnB,MAEzB3B,KAAK8oB,QAAQtE,UACfsE,EAAUhhB,EAAcxH,QAAQN,KAAKqoB,OAAO1mB,OAC5C3B,KAAK8oB,QAAQ1D,aAAa0D,IAE1BA,EAAU9oB,KAAK8oB,QAAQnnB,MAEzB,IAAMonB,EAAKF,EAAU1kB,EACf6kB,EAAKH,EAAUxkB,EACf4kB,EAAKH,EAAQ3kB,EACb8gB,EAAK6D,EAAQzkB,EAEbqX,GADWzU,SAAS8hB,IAAO9hB,SAAS+hB,KAAQ/hB,SAASgiB,KAAQhiB,SAASge,KACjDjlB,KAAK8b,UAAUoN,kBAAkB,IAAIC,EAAAA,UAAUJ,EAAIC,EAAIC,EAAIhE,IACtFjlB,KAAK6K,UAAU6Q,IAGPwM,EAAA7nB,UAAAqW,SAAV,SAAmB9N,GACjB3E,EAAA5D,UAAMqW,SAAQxS,KAAAlE,KAAC4I,GACf,IAAMoM,EAAWpM,EAAYoM,SAC7B,GAAIA,aAAoBmC,EAAAA,iBAAmBnX,KAAKoL,aAAepL,KAAKoX,WAAY,CAC9E,IAAMC,EAAUrC,EAASqC,QACzBA,EAAQC,OACRtX,KAAKopB,WAAW/R,EAASrX,KAAK8b,WAC9BzE,EAAQG,YAIF0Q,EAAA7nB,UAAA+oB,WAAV,SAAqB/R,EAAwBuN,GAC3C,IAAM7M,EAAS/X,KAAK+X,OAAOpW,MAC3B,QAAe,IAAXoW,EAAmB,CACrB,IAAM0O,EAAczmB,KAAKymB,YAAY9kB,MACrC,QAAoB,IAAhB8kB,EAAwB,CAC1B,IAAMpa,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACnCwH,EAAY7oB,KAAK6oB,UAAUlnB,MAC3BmnB,EAAU9oB,KAAK8oB,QAAQnnB,MAC7B0V,EAAQI,YACRJ,EAAQK,OAAOmR,EAAU1kB,EAAG0kB,EAAUxkB,GACtCgT,EAAQM,OAAOmR,EAAQ3kB,EAAG2kB,EAAQzkB,GAClCgT,EAAQQ,UAAY4O,EAAY1B,QAAQ1Y,GACxCgL,EAAQS,YAAcC,EAAO1W,WAC7BgW,EAAQU,YAKd5X,OAAAC,eAAI8nB,EAAA7nB,UAAA,eAAY,KAAhB,WACE,IAAMwoB,EAAY7oB,KAAK6oB,UAAUlnB,MAC3BmnB,EAAU9oB,KAAK8oB,QAAQnnB,MACvB0nB,GAAQR,EAAU1kB,EAAI2kB,EAAQ3kB,GAAK,EACnCmlB,GAAQT,EAAUxkB,EAAIykB,EAAQzkB,GAAK,EAEnC2gB,EADuBhlB,KAAK+c,cAAcH,UACVC,UAAUwM,EAAMC,GAA/C5C,EAAE1B,EAAA,GAAE2B,EAAE3B,EAAA,GACb,OAAO,IAAI7d,EAAAA,MAAMuf,EAAIC,EAAID,EAAIC,oCAG/BxmB,OAAAC,eAAI8nB,EAAA7nB,UAAA,aAAU,KAAd,WACE,IAAMwoB,EAAY7oB,KAAK6oB,UAAUlnB,MAC3BonB,EAAKF,EAAU1kB,EACf6kB,EAAKH,EAAUxkB,EACfykB,EAAU9oB,KAAK8oB,QAAQnnB,MACvBsnB,EAAKH,EAAQ3kB,EACb8gB,EAAK6D,EAAQzkB,EACnB,OAAO,IAAI8C,EAAAA,MAAMvC,KAAK2B,IAAIwiB,EAAIE,GAAKrkB,KAAK2B,IAAIyiB,EAAI/D,GAC/BrgB,KAAK4B,IAAIuiB,EAAIE,GAAKrkB,KAAK4B,IAAIwiB,EAAI/D,qCAGlD9kB,OAAAC,eAAI8nB,EAAA7nB,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK+b,4CAGd5b,OAAAC,eAAI8nB,EAAA7nB,UAAA,YAAS,KAAb,WACE,OAAOL,KAAKyM,4CAGdyb,EAAA7nB,UAAA6b,QAAA,SAAQ/X,EAAWE,EAAWuE,GAC5B,IAAI0T,EAAMrY,EAAA5D,UAAM6b,QAAOhY,KAAAlE,KAACmE,EAAGE,EAAGuE,GAC9B,GAAY,OAAR0T,EAAc,CAChB,IAAMtH,EAAWpM,EAAYoM,SAC7B,GAAIA,aAAoBmC,EAAAA,eAAgB,CACtC,IAAME,EAAUrC,EAASqC,QACzBA,EAAQC,OACRnT,GAAK6Q,EAASkL,WACd7b,GAAK2Q,EAASkL,WACd5D,EAAMtc,KAAKupB,YAAYplB,EAAGE,EAAGgT,EAASrX,KAAK8b,WAC3CzE,EAAQG,WAGZ,OAAO8E,GAGC4L,EAAA7nB,UAAAkpB,YAAV,SAAsBplB,EAAWE,EAAWgT,EAAwBuN,GAClE,IAAMiE,EAAY7oB,KAAK6oB,UAAUlnB,MAC3BmnB,EAAU9oB,KAAK8oB,QAAQnnB,MAEzB4mB,OAA8B,IAAnBvoB,KAAKwoB,UAAuBxoB,KAAKwoB,UAAY,EACtD/B,EAAczmB,KAAKymB,YAAY9kB,MACrC,QAAoB,IAAhB8kB,EAAwB,CAC1B,IAAMpa,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACzCkH,EAAW3jB,KAAK4B,IAAI+hB,EAAU9B,EAAY1B,QAAQ1Y,IAOpD,OAJAgL,EAAQI,YACRJ,EAAQK,OAAOmR,EAAU1kB,EAAG0kB,EAAUxkB,GACtCgT,EAAQM,OAAOmR,EAAQ3kB,EAAG2kB,EAAQzkB,GAClCgT,EAAQQ,UAAY0Q,EAChBlR,EAAQwP,gBAAgB1iB,EAAGE,GACtBrE,KAEF,MAGFkoB,EAAArmB,QAAP,SAAe2nB,GACb,GAAIA,aAAgBtB,EAClB,OAAOsB,EACF,GAAoB,iBAATA,GAA8B,OAATA,EAAe,CACpD,IAAM/b,EAAO,IAAIya,EAsBjB,YArBsB,IAAlBsB,EAAKrB,UACP1a,EAAK0a,SAASqB,EAAKrB,eAED,IAAhBqB,EAAKnB,QACP5a,EAAK4a,OAAOmB,EAAKnB,aAEC,IAAhBmB,EAAKzR,QACPtK,EAAKsK,OAAOyR,EAAKzR,aAEM,IAArByR,EAAK/C,aACPhZ,EAAKgZ,YAAY+C,EAAK/C,kBAEF,IAAlB+C,EAAKjB,UACP9a,EAAK8a,SAASiB,EAAKjB,eAED,IAAhBiB,EAAKtO,QACPzN,EAAKoN,UAAU2O,EAAKtO,aAEF,IAAhBsO,EAAK9N,QACPjO,EAAK5C,UAAU2e,EAAK9N,QAEfjO,EAET,MAAM,IAAIzL,UAAU,GAAKwnB,IAjN3BvmB,EAAA,CADCqX,EAAAA,eAAeza,EAAU,CAAC8B,MAAO9B,EAAS0B,2CAI3C0B,EAAA,CADCqX,EAAAA,eAAeza,EAAU,CAAC8B,MAAO9B,EAAS0B,yCAI3C0B,EAAA,CADCqX,EAAAA,eAAe2J,EAAAA,QAAS,CAACtiB,MAAOsiB,EAAAA,QAAQ1iB,4CAIzC0B,EAAA,CADCqX,EAAAA,eAAe2J,EAAAA,QAAS,CAACtiB,MAAOsiB,EAAAA,QAAQ1iB,0CAIzC0B,EAAA,CADCqX,EAAAA,eAAe2E,EAAAA,MAAO,CAAC2G,SAAS,kCAIjC3iB,EAAA,CADCqX,EAAAA,eAAeoL,EAAAA,OAAQ,CAACE,SAAS,uCAqMpCsC,GArOiCzgB,iBCkB/B,SAAAgiB,IAAA,IAAAzlB,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAK0I,WAAa7M,EAAS0B,SAC3ByC,EAAK0lB,YAAczF,EAAAA,QAAQ1iB,SAC3ByC,EAAK2lB,eAAiB,EACtB3lB,EAAK4lB,YAAcziB,EAAAA,MAAME,QACzBrD,EAAKyI,WAAapH,EAAOgC,UAuZ7B,OA3aqCxE,EAAA4mB,EAAAxlB,GAuBnC9D,OAAAC,eAAIqpB,EAAAppB,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDAKd+hB,EAAAppB,UAAAwpB,OAAA,SAAOA,EAA4B9F,GACjC,IAAM/Y,EAAahL,KAAKiL,YACxB,QAAe,IAAX4e,EAAmB,CACrBA,EAAS,GACT,IAAK,IAAIjmB,EAAI,EAAGA,EAAIoH,EAAW5I,OAAQwB,GAAK,EAAG,EACvCuH,EAAYH,EAAWpH,cACJqf,GACvB4G,EAAOtb,KAAKpD,GAGhB,OAAO0e,EAYP,IAVA,IAAMre,EAAexL,KAAKyM,WACtBnH,EAAS4B,EAAAA,EACT3B,EAAS2B,EAAAA,EACT1B,GAAU0B,EAAAA,EACVzB,GAAUyB,EAAAA,EACV4iB,EAAS,EACTC,EAAS,EACTC,GAAU,EAEVC,GADArmB,EAAI,EACA,GACDA,EAAIoH,EAAW5I,QAAU6nB,EAAIJ,EAAOznB,QAAQ,CAEjD,IADM+I,EAAYH,EAAWpH,cACJqf,EAAc,CACrC,IAAMa,EAAQ+F,EAAOI,GACrB9e,EAAU0Y,SAASC,GACb,IAAAkB,EAAa7Z,EAAUgR,SAASxa,MACtCmoB,GADOhqB,EAAGklB,EAAAllB,IAEViqB,GAFYhqB,EAAGilB,EAAAjlB,IAGfuF,EAASV,KAAK2B,IAAIjB,EAAQxF,GAC1ByF,EAASX,KAAK2B,IAAIhB,EAAQxF,GAC1ByF,EAASZ,KAAK4B,IAAI1G,EAAK0F,GACvBC,EAASb,KAAK4B,IAAIzG,EAAK0F,GACvBukB,EAAUA,IAAY/iB,SAASnH,KAASmH,SAASlH,GACjDkqB,GAAK,EAEPrmB,GAAK,EAEP,KAAOqmB,EAAIJ,EAAOznB,QAAQ,CAClB0hB,EAAQb,EAAaphB,QAAQgoB,EAAOI,IAC1CjqB,KAAK2S,gBAAgBmR,GACf,IAAChkB,EAAKC,EAANmqB,EAAapG,EAAM3H,SAASxa,MAClCmoB,GADOhqB,EAAGoqB,EAAApqB,IAEViqB,GAFYhqB,EAAGmqB,EAAAnqB,IAGfuF,EAASV,KAAK2B,IAAIjB,EAAQxF,GAC1ByF,EAASX,KAAK2B,IAAIhB,EAAQxF,GAC1ByF,EAASZ,KAAK4B,IAAI1G,EAAK0F,GACvBC,EAASb,KAAK4B,IAAIzG,EAAK0F,GACvBukB,EAAUA,IAAY/iB,SAASnH,KAASmH,SAASlH,GACjD6D,GAAK,EACLqmB,GAAK,EAEP,KAAOrmB,EAAIoH,EAAW5I,QAAQ,CAC5B,IAAM+I,GAAAA,EAAYH,EAAWpH,cACJqf,EACvBjjB,KAAK4S,gBAAgBzH,GAErBvH,GAAK,EAGJomB,GAAiB,IAANC,GAMdjqB,KAAK0M,WAAa7M,EAAS0B,SAC3BvB,KAAKyM,WAAapH,EAAOgC,UANzByiB,GAAUG,EACVF,GAAUE,EACVjqB,KAAK0M,WAAa,IAAI7M,EAASiqB,EAAQC,GACvC/pB,KAAKyM,WAAa,IAAIpH,EAAOC,EAAQC,EAAQC,EAAQC,IAKvD,IAAM8F,EAAevL,KAAKyM,WAI1B,OAHKjB,EAAa/K,OAAO8K,IACvBvL,KAAKsL,gBAAgBC,EAAcC,GAE9BxL,MAIXypB,EAAAppB,UAAA8pB,YAAA,SAAYrG,EAAwB1gB,GAGlC,OAFA0gB,EAAQb,EAAaphB,QAAQiiB,GAC7B9jB,KAAK2S,gBAAgBmR,EAAO1gB,GACrB0gB,GAGT2F,EAAAppB,UAAA+pB,SAAA,SAAShnB,EAAa0gB,GAGpB,OAFAA,EAAQb,EAAaphB,QAAQiiB,GAC7B9jB,KAAK4R,aAAaxO,EAAK0gB,GAChBA,GAGT3jB,OAAAC,eAAIqpB,EAAAppB,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK0M,4CAGdvM,OAAAC,eAAIqpB,EAAAppB,UAAA,aAAU,KAAd,WACE,OAAOL,KAAK0pB,6CAiBdD,EAAAppB,UAAAkoB,SAAA,SAASA,GACP,YAAiB,IAAbA,OACwB,IAAnBvoB,KAAKwoB,UAAuBxoB,KAAKwoB,UAAY,MAEnC,OAAbD,EACFvoB,KAAKwoB,UAAYD,OACW,IAAnBvoB,KAAKwoB,YACdxoB,KAAKwoB,eAAY,GAEZxoB,OAIDypB,EAAAppB,UAAAkS,kBAAV,SAA4BpH,EAAiBgI,GAC3ClP,EAAA5D,UAAMkS,kBAAiBrO,KAAAlE,KAACmL,EAAWgI,GAC/BhI,aAAqB8X,GACvBjjB,KAAKqqB,cAAclf,IAIbse,EAAAppB,UAAAgqB,cAAV,SAAwBlf,GACtBA,EAAUhD,cAAcC,EAAAA,KAAKU,aAAeV,EAAAA,KAAKC,eAGzCohB,EAAAppB,UAAA4J,WAAV,SAAqBrB,GAkBnB,IAjBA,IAAM4C,EAAexL,KAAKyM,WACtBnH,EAAS4B,EAAAA,EACT3B,EAAS2B,EAAAA,EACT1B,GAAU0B,EAAAA,EACVzB,GAAUyB,EAAAA,EACV4iB,EAAS,EACTC,EAAS,EACTpjB,EAAOO,EAAAA,EACPL,EAAOK,EAAAA,EACPH,GAAQG,EAAAA,EACRF,GAAQE,EAAAA,EACRmiB,EAAO,EACPC,EAAO,EACPU,GAAU,EACVM,EAAgB,EAChBC,EAAa,EACXvf,EAAahL,KAAKiL,YACfrH,EAAI,EAAGA,EAAIoH,EAAW5I,OAAQwB,GAAK,EAAG,CAC7C,IAAMuH,EAAYH,EAAWpH,GAC7B,GAAIuH,aAAqB8X,EAAc,CAC/B,IAAA+B,EAAa7Z,EAAUgR,SAASxa,MAA/B7B,EAAGklB,EAAAllB,IAAEC,EAAGilB,EAAAjlB,IACf+pB,GAAUhqB,EACViqB,GAAUhqB,EACVuF,EAASV,KAAK2B,IAAIjB,EAAQxF,GAC1ByF,EAASX,KAAK2B,IAAIhB,EAAQxF,GAC1ByF,EAASZ,KAAK4B,IAAI1G,EAAK0F,GACvBC,EAASb,KAAK4B,IAAIzG,EAAK0F,GACvBukB,EAAUA,IAAY/iB,SAASnH,KAASmH,SAASlH,GAC3C,IAAAmqB,EAAS/e,EAAU6Y,UAAUriB,MAA5BwC,EAAC+lB,EAAA/lB,EAAEE,EAAC6lB,EAAA7lB,EACXsC,EAAO/B,KAAK2B,IAAII,EAAMxC,GACtB0C,EAAOjC,KAAK2B,IAAIM,EAAMxC,GACtB0C,EAAOnC,KAAK4B,IAAIrC,EAAG4C,GACnBC,EAAOpC,KAAK4B,IAAInC,EAAG2C,GACnBqiB,GAAQllB,EACRmlB,GAAQnlB,EACR6lB,EAAUA,IAAY/iB,SAAS9C,KAAO8C,SAAS5C,GAC3C8G,EAAUwY,mBACZ2G,GAAiB,GAEnBC,GAAc,GAGbP,GAA0B,IAAfO,GAWdvqB,KAAK0M,WAAa7M,EAAS0B,SAC3BvB,KAAKyM,WAAapH,EAAOgC,QACzBrH,KAAK0pB,YAAczF,EAAAA,QAAQ1iB,SAC3BvB,KAAK4pB,YAAcziB,EAAAA,MAAME,QACzBrH,KAAK6K,WAAU,KAdfif,GAAUS,EACVR,GAAUQ,EACVvqB,KAAK0M,WAAa,IAAI7M,EAASiqB,EAAQC,GACvC/pB,KAAKyM,WAAa,IAAIpH,EAAOC,EAAQC,EAAQC,EAAQC,GACrD4jB,GAAQkB,EACRjB,GAAQiB,EACRvqB,KAAK0pB,YAAc,IAAIzF,EAAAA,QAAQoF,EAAMC,GACrCtpB,KAAK4pB,YAAc,IAAIziB,EAAAA,MAAMR,EAAME,EAAME,EAAMC,GAC/ChH,KAAK2K,aAAa/B,EAAYgC,WAQhC5K,KAAK2pB,eAAiBW,EACtB,IAAM/e,EAAevL,KAAKyM,WACrBjB,EAAa/K,OAAO8K,IACvBvL,KAAKsL,gBAAgBC,EAAcC,GAErCvH,EAAA5D,UAAM4J,WAAU/F,KAAAlE,KAAC4I,IAGT6gB,EAAAppB,UAAAqW,SAAV,SAAmB9N,GACjB3E,EAAA5D,UAAMqW,SAAQxS,KAAAlE,KAAC4I,GACf,IAAMoM,EAAWpM,EAAYoM,SAC7B,GAAIA,aAAoBmC,EAAAA,iBAAmBnX,KAAKoL,aAAepL,KAAKoX,WAAY,CAC9E,IAAMC,EAAUrC,EAASqC,QACzBA,EAAQC,OACoB,IAAxBtX,KAAK2pB,eACP3pB,KAAKwqB,uBAAuBnT,EAASrX,KAAK8b,WAE1C9b,KAAKyqB,qBAAqBpT,EAASrX,KAAK8b,WAE1CzE,EAAQG,YAIFiS,EAAAppB,UAAAoqB,qBAAV,SAA+BpT,EAAwBuN,GACrD,IAAM5Z,EAAahL,KAAKiL,YAClByf,EAAa1f,EAAW5I,OAC1BmoB,EAAa,EACjBlT,EAAQI,YACR,IAAK,IAAI7T,EAAI,EAAGA,EAAI8mB,EAAY9mB,GAAK,EAAG,CACtC,IAAMuH,EAAYH,EAAWpH,GAC7B,GAAIuH,aAAqB8X,EAAc,CAC/B,IAAA+B,EAAS7Z,EAAU6Y,UAAUriB,MAA5BwC,EAAC6gB,EAAA7gB,EAAEE,EAAC2gB,EAAA3gB,EACQ,IAAfkmB,EACFlT,EAAQK,OAAOvT,EAAGE,GAElBgT,EAAQM,OAAOxT,EAAGE,GAEpBkmB,GAAc,GAGlB,GAAmB,IAAfA,EAAkB,CACpB,IAAMxS,EAAS/X,KAAK+X,OAAOpW,MAC3B,QAAe,IAAXoW,EAAmB,CACrB,IAAM1L,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACnCoF,EAAczmB,KAAKymB,YAAY9kB,MAAOojB,QAAQ1Y,GACpDgL,EAAQS,YAAcC,EAAO1W,WAC7BgW,EAAQQ,UAAY4O,EACpBpP,EAAQU,YAKJ0R,EAAAppB,UAAAmqB,uBAAV,SAAiCnT,EAAwBuN,GAOvD,IANA,IAKI9gB,EALEiU,EAAS/X,KAAK+X,OAAOpW,MACrB0K,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACnCoF,EAAczmB,KAAKymB,YAAY9kB,MAAOojB,QAAQ1Y,GAC9CrB,EAAahL,KAAKiL,YAClByf,EAAa1f,EAAW5I,OAErBwB,EAAI,EAAGA,EAAI8mB,EAAY9mB,GAAK,EAAG,CACtC,IAAMG,EAAKiH,EAAWpH,GACtB,GAAIG,aAAckf,EAAc,CAC9B,QAAW,IAAPnf,EAAe,CACjB,IAAMilB,EAAKjlB,EAAGkgB,UAAUriB,MAAOwC,EACzB6kB,EAAKllB,EAAGkgB,UAAUriB,MAAO0C,EACzB4kB,EAAKllB,EAAGigB,UAAUriB,MAAOwC,EACzB8gB,EAAKlhB,EAAGigB,UAAUriB,MAAO0C,EACzBsmB,EAAWtT,EAAQuT,qBAAqB7B,EAAIC,EAAIC,EAAIhE,GAEtDrB,EAAQ9f,EAAG8f,MAAMjiB,WACP,IAAViiB,IACFA,EAAQ7L,GAEV,IAAIkK,EAAUne,EAAGme,QAAQtgB,MACF,iBAAZsgB,IACT2B,EAAQA,EAAMiH,MAAM5I,IAEtB0I,EAASG,aAAa,EAAGlH,EAAMviB,iBAGjB,KADduiB,EAAQ7f,EAAG6f,MAAMjiB,SAEfiiB,EAAQ7L,GAGa,iBADvBkK,EAAUle,EAAGke,QAAQtgB,SAEnBiiB,EAAQA,EAAMiH,MAAM5I,IAEtB0I,EAASG,aAAa,EAAGlH,EAAMviB,YAE/BgW,EAAQI,YACRJ,EAAQK,OAAOqR,EAAIC,GACnB3R,EAAQM,OAAOsR,EAAIhE,GACnB5N,EAAQS,YAAc6S,EACtBtT,EAAQQ,UAAY4O,EACpBpP,EAAQU,SAEVjU,EAAKC,KAKX5D,OAAAC,eAAIqpB,EAAAppB,UAAA,eAAY,KAAhB,WACE,IAAM4lB,EAAajmB,KAAK0pB,YAElB1E,EADuBhlB,KAAK+c,cAAcH,UACVC,UAAUoJ,EAAW9hB,EAAG8hB,EAAW5hB,GAAlEqiB,EAAE1B,EAAA,GAAE2B,EAAE3B,EAAA,GACb,OAAO,IAAI7d,EAAAA,MAAMuf,EAAIC,EAAID,EAAIC,oCAG/BxmB,OAAAC,eAAIqpB,EAAAppB,UAAA,aAAU,KAAd,WACE,OAAOL,KAAK4pB,6CAGdzpB,OAAAC,eAAIqpB,EAAAppB,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK+b,4CAGd5b,OAAAC,eAAIqpB,EAAAppB,UAAA,YAAS,KAAb,WACE,OAAOL,KAAKyM,4CAGdgd,EAAAppB,UAAA6b,QAAA,SAAQ/X,EAAWE,EAAWuE,GAC5B,IAAI0T,EAAMrY,EAAA5D,UAAM6b,QAAOhY,KAAAlE,KAACmE,EAAGE,EAAGuE,GAC9B,GAAY,OAAR0T,EAAc,CAChB,IAAMtH,EAAWpM,EAAYoM,SAC7B,GAAIA,aAAoBmC,EAAAA,eAAgB,CACtC,IAAME,EAAUrC,EAASqC,QACzBA,EAAQC,OACRnT,GAAK6Q,EAASkL,WACd7b,GAAK2Q,EAASkL,WACd5D,EAAMtc,KAAK+qB,gBAAgB5mB,EAAGE,EAAGgT,EAASrX,KAAK8b,WAC/CzE,EAAQG,WAGZ,OAAO8E,GAGCmN,EAAAppB,UAAA0qB,gBAAV,SAA0B5mB,EAAWE,EAAWgT,EAAwBuN,GACtE,IACM8F,EADa1qB,KAAKiL,YACM7I,OAC1BmoB,EAAa,EACjBlT,EAAQI,YACR,IAAK,IAAI7T,EAAI,EAAGA,EAAI8mB,EAAY9mB,GAAK,EAAG,CACtC,IAAMuH,EAAYnL,KAAKiL,YAAYrH,GACnC,GAAIuH,aAAqB8X,EAAc,CAC/B,IAAA+B,EAAS7Z,EAAU6Y,UAAUriB,MAA5BqpB,EAAChG,EAAA7gB,EAAE8mB,EAACjG,EAAA3gB,EACD,IAANT,EACFyT,EAAQK,OAAOsT,EAAGC,GAElB5T,EAAQM,OAAOqT,EAAGC,GAEpBV,GAAc,GAGlB,GAAmB,IAAfA,EAAkB,CACpB,IAAIhC,OAA8B,IAAnBvoB,KAAKwoB,UAAuBxoB,KAAKwoB,UAAY,EACtD/B,EAAczmB,KAAKymB,YAAY9kB,MACrC,QAAoB,IAAhB8kB,EAAwB,CAC1B,IAAMpa,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACzCkH,EAAW3jB,KAAK4B,IAAI+hB,EAAU9B,EAAY1B,QAAQ1Y,IAGpD,GADAgL,EAAQQ,UAAY0Q,EAChBlR,EAAQwP,gBAAgB1iB,EAAGE,GAC7B,OAAOrE,KAGX,OAAO,MAGFypB,EAAA5nB,QAAP,SAAeqpB,GACb,GAAIA,aAAoBzB,EACtB,OAAOyB,EACF,GAAwB,iBAAbA,GAAsC,OAAbA,EAAmB,CAC5D,IAAMzd,EAAO,IAAIgc,OACO,IAApByB,EAASnT,QACXtK,EAAKsK,OAAOmT,EAASnT,aAEM,IAAzBmT,EAASzE,aACXhZ,EAAKgZ,YAAYyE,EAASzE,kBAEF,IAAtByE,EAAS3C,UACX9a,EAAK8a,SAAS2C,EAAS3C,eAEH,IAAlB2C,EAAS9G,MACX3W,EAAK2W,KAAK8G,EAAS9G,WAEM,IAAvB8G,EAAS7G,WACX5W,EAAK4W,UAAU6G,EAAS7G,WAE1B,IAAMwF,EAASqB,EAASrB,OAUxB,YATe,IAAXA,GACFpc,EAAKoc,OAAOA,QAEU,IAApBqB,EAAShQ,QACXzN,EAAKoN,UAAUqQ,EAAShQ,aAEF,IAApBgQ,EAASxP,QACXjO,EAAK5C,UAAUqgB,EAASxP,QAEnBjO,EAET,MAAM,IAAIzL,UAAU,GAAKkpB,IAzS3BjoB,EAAA,CADCqX,EAAAA,eAAe2E,EAAAA,MAAO,CAAC2G,SAAS,kCAIjC3iB,EAAA,CADCqX,EAAAA,eAAeoL,EAAAA,OAAQ,CAACE,SAAS,uCAIlC3iB,EAAA,CADCqX,EAAAA,eAAeqL,EAAAA,KAAM,CAACC,SAAS,gCAIhC3iB,EAAA,CADCqX,EAAAA,eAAe2E,EAAAA,MAAO,CAAC2G,SAAS,qCAmSnC6D,GA3aqChiB,iBCoBnC,SAAA0jB,IAAA,IAAAnnB,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAK0I,WAAa7M,EAAS0B,SAC3ByC,EAAK0lB,YAAczF,EAAAA,QAAQ1iB,SAC3ByC,EAAKonB,eAAgB,EACrBpnB,EAAK4lB,YAAcziB,EAAAA,MAAME,QACzBrD,EAAKyI,WAAapH,EAAOgC,UAsX7B,OAxYoCxE,EAAAsoB,EAAAlnB,GAqBlC9D,OAAAC,eAAI+qB,EAAA9qB,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDAKdyjB,EAAA9qB,UAAAwpB,OAAA,SAAOA,EAA4B9F,GACjC,IAAM/Y,EAAahL,KAAKiL,YACxB,QAAe,IAAX4e,EAAmB,CACrBA,EAAS,GACT,IAAK,IAAIjmB,EAAI,EAAGA,EAAIoH,EAAW5I,OAAQwB,GAAK,EAAG,EACvCuH,EAAYH,EAAWpH,cACJqf,GACvB4G,EAAOtb,KAAKpD,GAGhB,OAAO0e,EAYP,IAVA,IAAMre,EAAexL,KAAKyM,WACtBnH,EAAS4B,EAAAA,EACT3B,EAAS2B,EAAAA,EACT1B,GAAU0B,EAAAA,EACVzB,GAAUyB,EAAAA,EACV4iB,EAAS,EACTC,EAAS,EACTC,GAAU,EAEVC,GADArmB,EAAI,EACA,GACDA,EAAIoH,EAAW5I,QAAU6nB,EAAIJ,EAAOznB,QAAQ,CAEjD,IADM+I,EAAYH,EAAWpH,cACJqf,EAAc,CACrC,IAAMa,EAAQ+F,EAAOI,GACrB9e,EAAU0Y,SAASC,GACb,IAAAkB,EAAa7Z,EAAUgR,SAASxa,MACtCmoB,GADOhqB,EAAGklB,EAAAllB,IAEViqB,GAFYhqB,EAAGilB,EAAAjlB,IAGfuF,EAASV,KAAK2B,IAAIjB,EAAQxF,GAC1ByF,EAASX,KAAK2B,IAAIhB,EAAQxF,GAC1ByF,EAASZ,KAAK4B,IAAI1G,EAAK0F,GACvBC,EAASb,KAAK4B,IAAIzG,EAAK0F,GACvBukB,EAAUA,IAAY/iB,SAASnH,KAASmH,SAASlH,GACjDkqB,GAAK,EAEPrmB,GAAK,EAEP,KAAOqmB,EAAIJ,EAAOznB,QAAQ,CAClB0hB,EAAQb,EAAaphB,QAAQgoB,EAAOI,IAC1CjqB,KAAK2S,gBAAgBmR,GACf,IAAChkB,EAAKC,EAANmqB,EAAapG,EAAM3H,SAASxa,MAClCmoB,GADOhqB,EAAGoqB,EAAApqB,IAEViqB,GAFYhqB,EAAGmqB,EAAAnqB,IAGfuF,EAASV,KAAK2B,IAAIjB,EAAQxF,GAC1ByF,EAASX,KAAK2B,IAAIhB,EAAQxF,GAC1ByF,EAASZ,KAAK4B,IAAI1G,EAAK0F,GACvBC,EAASb,KAAK4B,IAAIzG,EAAK0F,GACvBukB,EAAUA,IAAY/iB,SAASnH,KAASmH,SAASlH,GACjD6D,GAAK,EACLqmB,GAAK,EAEP,KAAOrmB,EAAIoH,EAAW5I,QAAQ,CAC5B,IAAM+I,GAAAA,EAAYH,EAAWpH,cACJqf,EACvBjjB,KAAK4S,gBAAgBzH,GAErBvH,GAAK,EAGJomB,GAAiB,IAANC,GAMdjqB,KAAK0M,WAAa7M,EAAS0B,SAC3BvB,KAAKyM,WAAapH,EAAOgC,UANzByiB,GAAUG,EACVF,GAAUE,EACVjqB,KAAK0M,WAAa,IAAI7M,EAASiqB,EAAQC,GACvC/pB,KAAKyM,WAAa,IAAIpH,EAAOC,EAAQC,EAAQC,EAAQC,IAKvD,IAAM8F,EAAevL,KAAKyM,WAI1B,OAHKjB,EAAa/K,OAAO8K,IACvBvL,KAAKsL,gBAAgBC,EAAcC,GAE9BxL,MAIXmrB,EAAA9qB,UAAA8pB,YAAA,SAAYrG,EAAwB1gB,GAGlC,OAFA0gB,EAAQb,EAAaphB,QAAQiiB,GAC7B9jB,KAAK2S,gBAAgBmR,EAAO1gB,GACrB0gB,GAGTqH,EAAA9qB,UAAA+pB,SAAA,SAAShnB,EAAa0gB,GAGpB,OAFAA,EAAQb,EAAaphB,QAAQiiB,GAC7B9jB,KAAK4R,aAAaxO,EAAK0gB,GAChBA,GAKTqH,EAAA9qB,UAAAgrB,aAAA,SAAaA,GACX,YAAqB,IAAjBA,EACKrrB,KAAKorB,eAEZprB,KAAKorB,cAAgBC,EACdrrB,OAIXG,OAAAC,eAAI+qB,EAAA9qB,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK0M,4CAGdvM,OAAAC,eAAI+qB,EAAA9qB,UAAA,aAAU,KAAd,WACE,OAAOL,KAAK0pB,6CAkBJyB,EAAA9qB,UAAAkS,kBAAV,SAA4BpH,EAAiBgI,GAC3ClP,EAAA5D,UAAMkS,kBAAiBrO,KAAAlE,KAACmL,EAAWgI,GAC/BhI,aAAqB8X,GACvBjjB,KAAKqqB,cAAclf,IAIbggB,EAAA9qB,UAAAgqB,cAAV,SAAwBlf,GACtBA,EAAUhD,cAAcC,EAAAA,KAAKU,aAAeV,EAAAA,KAAKC,eAGzC8iB,EAAA9qB,UAAA4J,WAAV,SAAqBrB,GAiBnB,IAhBA,IAAM4C,EAAexL,KAAKyM,WACtBnH,EAAS4B,EAAAA,EACT3B,EAAS2B,EAAAA,EACT1B,GAAU0B,EAAAA,EACVzB,GAAUyB,EAAAA,EACV4iB,EAAS,EACTC,EAAS,EACTpjB,EAAOO,EAAAA,EACPL,EAAOK,EAAAA,EACPH,GAAQG,EAAAA,EACRF,GAAQE,EAAAA,EACRmiB,EAAO,EACPC,EAAO,EACPU,GAAU,EACVO,EAAa,EACXvf,EAAahL,KAAKiL,YACfrH,EAAI,EAAGA,EAAIoH,EAAW5I,OAAQwB,GAAK,EAAG,CAC7C,IAAMuH,EAAYH,EAAWpH,GAC7B,GAAIuH,aAAqB8X,EAAc,CAC/B,IAAA+B,EAAa7Z,EAAUgR,SAASxa,MAA/B7B,EAAGklB,EAAAllB,IAAEC,EAAGilB,EAAAjlB,IACf+pB,GAAUhqB,EACViqB,GAAUhqB,EACVuF,EAASV,KAAK2B,IAAIjB,EAAQxF,GAC1ByF,EAASX,KAAK2B,IAAIhB,EAAQxF,GAC1ByF,EAASZ,KAAK4B,IAAI1G,EAAK0F,GACvBC,EAASb,KAAK4B,IAAIzG,EAAK0F,GACvBukB,EAAUA,IAAY/iB,SAASnH,KAASmH,SAASlH,GAC3C,IAAAmqB,EAAS/e,EAAU6Y,UAAUriB,MAA5BwC,EAAC+lB,EAAA/lB,EAAEE,EAAC6lB,EAAA7lB,EACXsC,EAAO/B,KAAK2B,IAAII,EAAMxC,GACtB0C,EAAOjC,KAAK2B,IAAIM,EAAMxC,GACtB0C,EAAOnC,KAAK4B,IAAIrC,EAAG4C,GACnBC,EAAOpC,KAAK4B,IAAInC,EAAG2C,GACnBqiB,GAAQllB,EACRmlB,GAAQnlB,EACR6lB,EAAUA,IAAY/iB,SAAS9C,KAAO8C,SAAS5C,GAC/CkmB,GAAc,GAGlB,GAAKP,GAA0B,IAAfO,EAwBdvqB,KAAK0M,WAAa7M,EAAS0B,SAC3BvB,KAAKyM,WAAapH,EAAOgC,QACzBrH,KAAK0pB,YAAczF,EAAAA,QAAQ1iB,SAC3BvB,KAAK4pB,YAAcziB,EAAAA,MAAME,QACzBrH,KAAK6K,WAAU,QAnBf,GARAif,GAAUS,EACVR,GAAUQ,EACVvqB,KAAK0M,WAAa,IAAI7M,EAASiqB,EAAQC,GACvC/pB,KAAKyM,WAAa,IAAIpH,EAAOC,EAAQC,EAAQC,EAAQC,GACrD4jB,GAAQkB,EACRjB,GAAQiB,EACRvqB,KAAK0pB,YAAc,IAAIzF,EAAAA,QAAQoF,EAAMC,GACrCtpB,KAAK4pB,YAAc,IAAIziB,EAAAA,MAAMR,EAAME,EAAME,EAAMC,GAC3C4B,EAAYgC,SAAS3E,WAAWjG,KAAKyM,YAAa,CACpD,IAAMmY,EAAQ5kB,KAAK8b,UACb5O,EAASlN,KAAK4pB,YAOdlO,KALa1b,KAAKorB,eACNxG,EAAMje,KAAO,EAAIie,EAAMxD,OAASlU,EAAOvG,MACvCuG,EAAOnG,MAAQ6d,EAAM7d,KAAO,EAAI6d,EAAMxD,OACtCwD,EAAM/d,KAAO,EAAI+d,EAAMvD,QAAUnU,EAAOrG,MACxCqG,EAAOlG,MAAQ4d,EAAM5d,KAAO,EAAI4d,EAAMvD,UAC1BuD,EAAM3e,WAAWiH,GAC/ClN,KAAK6K,UAAU6Q,QAEf1b,KAAK6K,WAAU,GASnB,IAAMU,EAAevL,KAAKyM,WACrBjB,EAAa/K,OAAO8K,IACvBvL,KAAKsL,gBAAgBC,EAAcC,GAErCvH,EAAA5D,UAAM4J,WAAU/F,KAAAlE,KAAC4I,IAGTuiB,EAAA9qB,UAAAqW,SAAV,SAAmB9N,GACjB3E,EAAA5D,UAAMqW,SAAQxS,KAAAlE,KAAC4I,GACf,IAAMoM,EAAWpM,EAAYoM,SAC7B,GAAIA,aAAoBmC,EAAAA,iBAAmBnX,KAAKoL,aAAepL,KAAKoX,WAAY,CAC9E,IAAMC,EAAUrC,EAASqC,QACzBA,EAAQC,OACRtX,KAAKsrB,cAAcjU,EAASrX,KAAK8b,WACjCzE,EAAQG,YAIF2T,EAAA9qB,UAAAirB,cAAV,SAAwBjU,EAAwBuN,GAC9C,IAAM5Z,EAAahL,KAAKiL,YAClByf,EAAa1f,EAAW5I,OAC1BmoB,EAAa,EACjBlT,EAAQI,YACR,IAAK,IAAI7T,EAAI,EAAGA,EAAI8mB,EAAY9mB,GAAK,EAAG,CACtC,IAAMuH,EAAYH,EAAWpH,GAC7B,GAAIuH,aAAqB8X,EAAc,CAC/B,IAAA+B,EAAS7Z,EAAU6Y,UAAUriB,MAA5BwC,EAAC6gB,EAAA7gB,EAAEE,EAAC2gB,EAAA3gB,EACQ,IAAfkmB,EACFlT,EAAQK,OAAOvT,EAAGE,GAElBgT,EAAQM,OAAOxT,EAAGE,GAEpBkmB,GAAc,GAIlB,GADAlT,EAAQO,YACW,IAAf2S,EAAkB,CACpB,IAAMhE,EAAOvmB,KAAKumB,KAAK5kB,WACV,IAAT4kB,IACFlP,EAAQmP,UAAYD,EAAKllB,WACzBgW,EAAQkP,QAEV,IAAMxO,EAAS/X,KAAK+X,OAAOpW,MACrB8kB,EAAczmB,KAAKymB,YAAY9kB,MACrC,QAAe,IAAXoW,QAAqC,IAAhB0O,EAAwB,CAC/C,IAAMpa,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QACzChK,EAAQQ,UAAY4O,EAAY1B,QAAQ1Y,GACxCgL,EAAQS,YAAcC,EAAO1W,WAC7BgW,EAAQU,YAKd5X,OAAAC,eAAI+qB,EAAA9qB,UAAA,eAAY,KAAhB,WACE,IAAM4lB,EAAajmB,KAAK0pB,YAElB1E,EADuBhlB,KAAK+c,cAAcH,UACVC,UAAUoJ,EAAW9hB,EAAG8hB,EAAW5hB,GAAlEqiB,EAAE1B,EAAA,GAAE2B,EAAE3B,EAAA,GACb,OAAO,IAAI7d,EAAAA,MAAMuf,EAAIC,EAAID,EAAIC,oCAG/BxmB,OAAAC,eAAI+qB,EAAA9qB,UAAA,aAAU,KAAd,WACE,OAAOL,KAAK4pB,6CAGdzpB,OAAAC,eAAI+qB,EAAA9qB,UAAA,YAAS,KAAb,WACE,OAAOL,KAAK+b,4CAGd5b,OAAAC,eAAI+qB,EAAA9qB,UAAA,YAAS,KAAb,WACE,OAAOL,KAAKyM,4CAGd0e,EAAA9qB,UAAA6b,QAAA,SAAQ/X,EAAWE,EAAWuE,GAC5B,IAAI0T,EAAMrY,EAAA5D,UAAM6b,QAAOhY,KAAAlE,KAACmE,EAAGE,EAAGuE,GAC9B,GAAY,OAAR0T,EAAc,CAChB,IAAMtH,EAAWpM,EAAYoM,SAC7B,GAAIA,aAAoBmC,EAAAA,eAAgB,CACtC,IAAME,EAAUrC,EAASqC,QACzBA,EAAQC,OACRnT,GAAK6Q,EAASkL,WACd7b,GAAK2Q,EAASkL,WACd5D,EAAMtc,KAAKurB,eAAepnB,EAAGE,EAAGgT,EAASrX,KAAK8b,WAC9CzE,EAAQG,WAGZ,OAAO8E,GAGC6O,EAAA9qB,UAAAkrB,eAAV,SAAyBpnB,EAAWE,EAAWgT,EAAwBuN,GACrE,IACM8F,EADa1qB,KAAKiL,YACM7I,OAC1BmoB,EAAa,EACjBlT,EAAQI,YACR,IAAK,IAAI7T,EAAI,EAAGA,EAAI8mB,EAAY9mB,GAAK,EAAG,CACtC,IAAMuH,EAAYnL,KAAKiL,YAAYrH,GACnC,GAAIuH,aAAqB8X,EAAc,CAC/B,IAAA+B,EAAS7Z,EAAU6Y,UAAUriB,MAA5BqpB,EAAChG,EAAA7gB,EAAE8mB,EAACjG,EAAA3gB,EACD,IAANT,EACFyT,EAAQK,OAAOsT,EAAGC,GAElB5T,EAAQM,OAAOqT,EAAGC,GAEpBV,GAAc,GAIlB,GADAlT,EAAQO,YACW,IAAf2S,EAAkB,CACpB,QAAwB,IAApBvqB,KAAKumB,KAAK5kB,OAAoB0V,EAAQ0Q,cAAc5jB,EAAGE,GACzD,OAAOrE,KAET,QAA0B,IAAtBA,KAAK+X,OAAOpW,MAAkB,CAChC,IAAM8kB,EAAczmB,KAAKymB,YAAY9kB,MACrC,QAAoB,IAAhB8kB,EAAwB,CAC1B,IAAMpa,EAAOzH,KAAK2B,IAAIqe,EAAMxD,MAAOwD,EAAMvD,QAEzC,GADAhK,EAAQQ,UAAY4O,EAAY1B,QAAQ1Y,GACpCgL,EAAQwP,gBAAgB1iB,EAAGE,GAC7B,OAAOrE,OAKf,OAAO,MAGFmrB,EAAAtpB,QAAP,SAAe2pB,GACb,GAAIA,aAAmBL,EACrB,OAAOK,EACF,GAAuB,iBAAZA,GAAoC,OAAZA,EAAkB,CAC1D,IAAM/d,EAAO,IAAI0d,OACY,IAAzBK,EAAQH,cACV5d,EAAK4d,aAAaG,EAAQH,mBAEP,IAAjBG,EAAQjF,MACV9Y,EAAK8Y,KAAKiF,EAAQjF,WAEG,IAAnBiF,EAAQzT,QACVtK,EAAKsK,OAAOyT,EAAQzT,aAEM,IAAxByT,EAAQ/E,aACVhZ,EAAKgZ,YAAY+E,EAAQ/E,kBAEN,IAAjB+E,EAAQpH,MACV3W,EAAK2W,KAAKoH,EAAQpH,WAEM,IAAtBoH,EAAQnH,WACV5W,EAAK4W,UAAUmH,EAAQnH,WAEzB,IAAMwF,EAAS2B,EAAQ3B,OAUvB,YATe,IAAXA,GACFpc,EAAKoc,OAAOA,QAES,IAAnB2B,EAAQtQ,QACVzN,EAAKoN,UAAU2Q,EAAQtQ,aAEF,IAAnBsQ,EAAQ9P,QACVjO,EAAK5C,UAAU2gB,EAAQ9P,QAElBjO,EAET,MAAM,IAAIzL,UAAU,GAAKwpB,IA7P3BvoB,EAAA,CADCqX,EAAAA,eAAe2E,EAAAA,MAAO,CAAC2G,SAAS,gCAIjC3iB,EAAA,CADCqX,EAAAA,eAAe2E,EAAAA,MAAO,CAAC2G,SAAS,kCAIjC3iB,EAAA,CADCqX,EAAAA,eAAeoL,EAAAA,OAAQ,CAACE,SAAS,uCAIlC3iB,EAAA,CADCqX,EAAAA,eAAeqL,EAAAA,KAAM,CAACC,SAAS,gCAIhC3iB,EAAA,CADCqX,EAAAA,eAAe2E,EAAAA,MAAO,CAAC2G,SAAS,qCAoPnCuF,GAxYoC1jB,gBC1BlC,SAAAgkB,EAAYC,GACV1rB,KAAK2rB,KAAOD,EAwChB,OArCEvrB,OAAAC,eAAIqrB,EAAAprB,UAAA,MAAG,KAAP,WACE,OAAOL,KAAK2rB,sCAGdxrB,OAAAC,eAAIqrB,EAAAprB,UAAA,SAAM,KAAV,WACE,IAAM6M,EAASlN,KAAK2rB,KAAKC,YACzB,OAAO,IAAIvmB,EAAO6H,EAAO2e,UAAW3e,EAAO4e,WACzB5e,EAAO6e,UAAW7e,EAAO8e,6CAK7CP,EAAAprB,UAAAC,QAAA,SAAQR,EAA2BC,GACjC,IAAIoc,EAEFA,EADiB,iBAARrc,EACE,IAAImsB,EAAAA,OAAgBnsB,EAAKC,GAEzBD,EAEb,IAAMgkB,EAAQ9jB,KAAK2rB,KAAKrrB,QAAQ6b,GAChC,OAAO,IAAI8H,EAAAA,QAAQH,EAAM3f,EAAG2f,EAAMzf,IAKpConB,EAAAprB,UAAA+b,UAAA,SAAUjY,EAAwBE,GAChC,IAAI2f,EAEFA,EADe,iBAAN7f,EACG,IAAI+nB,EAAAA,MAAe/nB,EAAGE,GACzBnC,MAAMC,QAAQgC,GACXA,EAEA,IAAI+nB,EAAAA,MAAe/nB,EAAEA,EAAGA,EAAEE,GAExC,IAAMyf,EAAQ9jB,KAAK2rB,KAAKvP,UAAU4H,GAClC,OAAO,IAAInkB,EAASikB,EAAMhkB,IAAKgkB,EAAM/jB,MAEzC0rB,mBC7BE,SAAAU,EAAYT,GAAZ,IAAA1nB,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAKooB,YAAcpoB,EAAKooB,YAAYhJ,KAAKpf,GACzCA,EAAK2nB,KAAOD,EACZ1nB,EAAKqoB,eAAiB,IAAIZ,EAAiBznB,EAAK2nB,MAChD3nB,EAAKsoB,SAAWZ,EAAIa,UACpBvoB,EAAKwoB,YAAcd,EAAIe,aACvBzoB,EAAK0oB,SAAWhB,EAAIiB,WACpB3oB,EAAK4oB,QAAQ5oB,EAAK2nB,QAiKtB,OArLgC9oB,EAAAspB,EAAAloB,GAuB9B9D,OAAAC,eAAI+rB,EAAA9rB,UAAA,MAAG,KAAP,WACE,OAAOL,KAAK2rB,sCAGJQ,EAAA9rB,UAAAusB,QAAV,SAAkBlB,GAChBA,EAAI1O,GAAG,SAAUhd,KAAKosB,cAGxBjsB,OAAAC,eAAI+rB,EAAA9rB,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDAKdykB,EAAA9rB,UAAAC,QAAA,SAAQR,EAA2BC,GACjC,OAAOC,KAAKqsB,eAAe/rB,QAAQusB,MAAM7sB,KAAKqsB,eAAgB9oB,YAKhE4oB,EAAA9rB,UAAA+b,UAAA,SAAUjY,EAAwBE,GAChC,OAAOrE,KAAKqsB,eAAejQ,UAAUyQ,MAAM7sB,KAAKqsB,eAAgB9oB,YAGlEpD,OAAAC,eAAI+rB,EAAA9rB,UAAA,gBAAa,KAAjB,WACE,OAAOL,KAAKqsB,gDAGdF,EAAA9rB,UAAAysB,iBAAA,SAAiBhlB,GACf9H,KAAK+sB,qBAAqBjlB,GAC1B9H,KAAKqsB,eAAiBvkB,EACtB9H,KAAKgtB,mBAAmBllB,GACxB9H,KAAKitB,oBAAoBnlB,IAGjBqkB,EAAA9rB,UAAA0sB,qBAAV,SAA+BjlB,GAC7B9H,KAAKsK,aAAY,SAAUC,QACqB,IAA1CA,EAAa2iB,0BACf3iB,EAAa2iB,yBAAyBplB,EAAe9H,UAKjDmsB,EAAA9rB,UAAA2sB,mBAAV,SAA6BllB,GACtB9H,KAAKoL,YAAepL,KAAKoX,YAC5BpX,KAAKmI,cAAcC,EAAAA,KAAKC,cAAc,IAIhC8jB,EAAA9rB,UAAA4sB,oBAAV,SAA8BnlB,GAC5B9H,KAAKyK,YAAW,SAAUF,QACqB,IAAzCA,EAAa4iB,yBACf5iB,EAAa4iB,wBAAwBrlB,EAAe9H,UAK1DG,OAAAC,eAAI+rB,EAAA9rB,UAAA,UAAO,KAAX,WACE,OAAOL,KAAKssB,0CAGdH,EAAA9rB,UAAA+sB,WAAA,SAAWC,GACT,IAAMC,EAAattB,KAAKssB,SACpBgB,IAAeD,IACjBrtB,KAAKutB,eAAeF,EAAYC,GAChCttB,KAAKssB,SAAWe,EAChBrtB,KAAKwtB,aAAaH,EAAYC,GAC9BttB,KAAKytB,cAAcJ,EAAYC,KAIzBnB,EAAA9rB,UAAAktB,eAAV,SAAyBF,EAAoBC,GAC3CttB,KAAKyK,YAAW,SAAUF,QACgB,IAApCA,EAAamjB,oBACfnjB,EAAamjB,mBAAmBL,EAAYC,EAAYttB,UAKpDmsB,EAAA9rB,UAAAmtB,aAAV,SAAuBG,EAAiBC,KAI9BzB,EAAA9rB,UAAAotB,cAAV,SAAwBE,EAAiBC,GACvC5tB,KAAKyK,YAAW,SAAUF,QACe,IAAnCA,EAAasjB,mBACftjB,EAAasjB,kBAAkBF,EAASC,EAAS5tB,UAKvDG,OAAAC,eAAI+rB,EAAA9rB,UAAA,aAAU,KAAd,WACE,OAAOL,KAAKwsB,6CAGdrsB,OAAAC,eAAI+rB,EAAA9rB,UAAA,UAAO,KAAX,WACE,OAAOL,KAAK0sB,0CAGJP,EAAA9rB,UAAAmU,QAAV,WACEvQ,EAAA5D,UAAMmU,QAAOtQ,KAAAlE,MACbA,KAAKmI,cAAcC,EAAAA,KAAKC,eAG1B8jB,EAAA9rB,UAAA4U,eAAA,SAAetM,EAAyBC,GACtCA,EAAc5I,KAAK8tB,eAAellB,GAClC3E,EAAA5D,UAAM4U,eAAc/Q,KAAAlE,KAAC2I,EAAcC,IAGrCujB,EAAA9rB,UAAAwV,eAAA,SAAeC,EAAyBlN,GACtCA,EAAc5I,KAAK8tB,eAAellB,GAClC3E,EAAA5D,UAAMwV,eAAc3R,KAAAlE,KAAC8V,EAAclN,IAGrCujB,EAAA9rB,UAAAsV,iBAAA,SAAiBxK,EAAiBvC,GAChC,OAAOA,GAGTujB,EAAA9rB,UAAAytB,eAAA,SAAellB,GACb,IAAMklB,EAAiB3tB,OAAO6C,OAAO4F,GAMrC,OALAklB,EAAehmB,cAAgB9H,KAAKqsB,eACpCyB,EAAeljB,SAAW5K,KAAK4K,SAC/BkjB,EAAe/lB,QAAU/H,KAAKssB,SAC9BwB,EAAe9lB,WAAahI,KAAKwsB,YACjCsB,EAAe7lB,QAAUjI,KAAK0sB,SACvBoB,GAGT3tB,OAAAC,eAAI+rB,EAAA9rB,UAAA,WAAQ,KAAZ,WACE,IAAM6M,EAASlN,KAAK2rB,KAAKC,YACzB,OAAO,IAAIvmB,EAAO6H,EAAO2e,UAAW3e,EAAO4e,WACzB5e,EAAO6e,UAAW7e,EAAO8e,6CAGnCG,EAAA9rB,UAAA+rB,YAAV,WACEpsB,KAAKwsB,YAAcxsB,KAAK2rB,KAAKc,aAC7BzsB,KAAK0sB,SAAW1sB,KAAK2rB,KAAKgB,WAC1B3sB,KAAKotB,WAAWptB,KAAK2rB,KAAKY,WAC1BvsB,KAAK8sB,iBAAiB9sB,KAAKqsB,iBAG7BF,EAAA9rB,UAAA6b,QAAA,SAAQ/X,EAAWE,EAAWuE,GAE5B,OADAA,EAAc5I,KAAK8tB,eAAellB,GAC3B3E,EAAA5D,UAAM6b,QAAOhY,KAAAlE,KAACmE,EAAGE,EAAGuE,IAG7BujB,EAAA9rB,UAAA0tB,cAAA,WACE,GAAyB,OAArB/tB,KAAKyL,YACP,OAAOzL,KAAKgR,WAEZ,IAAM0a,EAAM1rB,KAAK2rB,KACjBvjB,EAAAA,KAAK4lB,SAAStC,EAAIuC,gBAClB,IACMC,EADkB9lB,EAAAA,KAAK4lB,SAAStC,EAAIyC,sBACX1b,OAAO,UAEtC,OADAyb,EAAOzb,OAAOzS,MACPkuB,GAGb/B,GArLgC1kB,iBCHhC,SAAA2mB,mDAgBA,OAhB6EvrB,EAAAurB,EAAAnqB,GAC3EmqB,EAAA/tB,UAAA6sB,yBAAA,SAAyBplB,EAAiC2F,KAI1D2gB,EAAA/tB,UAAA8sB,wBAAA,SAAwBrlB,EAAiC2F,KAIzD2gB,EAAA/tB,UAAAqtB,mBAAA,SAAmBL,EAAoBC,EAAoB7f,KAI3D2gB,EAAA/tB,UAAAwtB,kBAAA,SAAkBR,EAAoBC,EAAoB7f,KAG5D2gB,GAhB6EjP,gBCG3E,SAAAkP,EAAYC,GACVtuB,KAAKuuB,SAAWD,EA6CpB,OA1CEnuB,OAAAC,eAAIiuB,EAAAhuB,UAAA,MAAG,KAAP,WACE,OAAOL,KAAKuuB,SAAS5C,sCAGvBxrB,OAAAC,eAAIiuB,EAAAhuB,UAAA,SAAM,KAAV,WACE,IAAM6M,EAASlN,KAAKuuB,SAAS5C,KAAKC,YAC5B4C,EAAKthB,EAAOuhB,eACZC,EAAKxhB,EAAOyhB,eAClB,OAAO,IAAItpB,EAAOmpB,EAAG1uB,MAAO0uB,EAAGzuB,MAAO2uB,EAAG5uB,MAAO4uB,EAAG3uB,wCAKrDsuB,EAAAhuB,UAAAC,QAAA,SAAQR,EAA2BC,GACjC,IAAIoc,EAEFA,EADiB,iBAARrc,EACE,IAAI8uB,OAAOC,KAAKC,OAAO/uB,EAAMD,GAC/BoC,MAAMC,QAAQrC,GACZ,IAAI8uB,OAAOC,KAAKC,OAAOhvB,EAAI,GAAIA,EAAI,IAEnC,IAAI8uB,OAAOC,KAAKC,OAAOhvB,EAAIC,IAAKD,EAAIA,KAEjD,IACMgkB,EADa9jB,KAAKuuB,SAASQ,YAAaC,gBACrBC,2BAA2B9S,GACpD,OAAO,IAAI8H,EAAAA,QAAQH,EAAM3f,EAAG2f,EAAMzf,IAKpCgqB,EAAAhuB,UAAA+b,UAAA,SAAUjY,EAAwBE,GAChC,IAAI2f,EAEFA,EADe,iBAAN7f,EACG,IAAIyqB,OAAOC,KAAKK,MAAM/qB,EAAGE,GAC5BnC,MAAMC,QAAQgC,GACX,IAAIyqB,OAAOC,KAAKK,MAAM/qB,EAAE,GAAIA,EAAE,IAE9B,IAAIyqB,OAAOC,KAAKK,MAAM/qB,EAAEA,EAAGA,EAAEE,GAE3C,IACMyf,EADa9jB,KAAKuuB,SAASQ,YAAaC,gBACrBG,2BAA2BnL,GACpD,OAAO,IAAInkB,EAASikB,EAAMhkB,MAAOgkB,EAAM/jB,QAE3CsuB,mBCjCE,SAAAe,EAAY1D,GAAZ,IAAA1nB,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAKooB,YAAcpoB,EAAKooB,YAAYhJ,KAAKpf,GACzCA,EAAK2nB,KAAOD,EACZ1nB,EAAKqoB,eAAiB,IAAIgC,EAAoBrqB,GAC9CA,EAAK+qB,YAAc,KACnB/qB,EAAKsoB,SAAWZ,EAAIa,UACpBvoB,EAAKwoB,YAAcd,EAAI2D,aACvBrrB,EAAK0oB,SAAWhB,EAAI4D,UACpBtrB,EAAK4oB,QAAQlB,KAiMjB,OAxNmC7oB,EAAAusB,EAAAnrB,GA0BjC9D,OAAAC,eAAIgvB,EAAA/uB,UAAA,MAAG,KAAP,WACE,OAAOL,KAAK2rB,sCAGJyD,EAAA/uB,UAAAusB,QAAV,SAAkBlB,KAIlBvrB,OAAAC,eAAIgvB,EAAA/uB,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDAKd0nB,EAAA/uB,UAAAC,QAAA,SAAQR,EAA2BC,GACjC,OAAOC,KAAKqsB,eAAe/rB,QAAQusB,MAAM7sB,KAAKqsB,eAAgB9oB,YAKhE6rB,EAAA/uB,UAAA+b,UAAA,SAAUjY,EAAwBE,GAChC,OAAOrE,KAAKqsB,eAAejQ,UAAUyQ,MAAM7sB,KAAKqsB,eAAgB9oB,YAGlEpD,OAAAC,eAAIgvB,EAAA/uB,UAAA,gBAAa,KAAjB,WACE,OAAOL,KAAKqsB,gDAGd+C,EAAA/uB,UAAAysB,iBAAA,SAAiBhlB,GACf9H,KAAK+sB,qBAAqBjlB,GAC1B9H,KAAKqsB,eAAiBvkB,EACtB9H,KAAKgtB,mBAAmBllB,GACxB9H,KAAKitB,oBAAoBnlB,IAGjBsnB,EAAA/uB,UAAA0sB,qBAAV,SAA+BjlB,GAC7B9H,KAAKsK,aAAY,SAAUC,QACqB,IAA1CA,EAAa2iB,0BACf3iB,EAAa2iB,yBAAyBplB,EAAe9H,UAKjDovB,EAAA/uB,UAAA2sB,mBAAV,SAA6BllB,GACtB9H,KAAKoL,YAAepL,KAAKoX,YAC5BpX,KAAKmI,cAAcC,EAAAA,KAAKC,cAAc,IAIhC+mB,EAAA/uB,UAAA4sB,oBAAV,SAA8BnlB,GAC5B9H,KAAKyK,YAAW,SAAUF,QACqB,IAAzCA,EAAa4iB,yBACf5iB,EAAa4iB,wBAAwBrlB,EAAe9H,UAK1DG,OAAAC,eAAIgvB,EAAA/uB,UAAA,aAAU,KAAd,WACE,OAAOL,KAAK+uB,6CAGd5uB,OAAAC,eAAIgvB,EAAA/uB,UAAA,UAAO,KAAX,WACE,OAAOL,KAAKssB,0CAGd8C,EAAA/uB,UAAA+sB,WAAA,SAAWC,GACT,IAAMC,EAAattB,KAAKssB,SACpBgB,IAAeD,IACjBrtB,KAAKutB,eAAeF,EAAYC,GAChCttB,KAAKssB,SAAWe,EAChBrtB,KAAKwtB,aAAaH,EAAYC,GAC9BttB,KAAKytB,cAAcJ,EAAYC,KAIzB8B,EAAA/uB,UAAAktB,eAAV,SAAyBF,EAAoBC,GAC3CttB,KAAKyK,YAAW,SAAUF,QACgB,IAApCA,EAAamjB,oBACfnjB,EAAamjB,mBAAmBL,EAAYC,EAAYttB,UAKpDovB,EAAA/uB,UAAAmtB,aAAV,SAAuBH,EAAoBC,KAIjC8B,EAAA/uB,UAAAotB,cAAV,SAAwBJ,EAAoBC,GAC1CttB,KAAKyK,YAAW,SAAUF,QACe,IAAnCA,EAAasjB,mBACftjB,EAAasjB,kBAAkBR,EAAYC,EAAYttB,UAK7DG,OAAAC,eAAIgvB,EAAA/uB,UAAA,aAAU,KAAd,WACE,OAAOL,KAAKwsB,6CAGdrsB,OAAAC,eAAIgvB,EAAA/uB,UAAA,UAAO,KAAX,WACE,OAAOL,KAAK0sB,0CAGd0C,EAAA/uB,UAAA4U,eAAA,SAAetM,EAAyBC,GACtCA,EAAc5I,KAAK8tB,eAAellB,GAClC3E,EAAA5D,UAAM4U,eAAc/Q,KAAAlE,KAAC2I,EAAcC,IAGrCwmB,EAAA/uB,UAAAwV,eAAA,SAAeC,EAAyBlN,GACtCA,EAAc5I,KAAK8tB,eAAellB,GAClC3E,EAAA5D,UAAMwV,eAAc3R,KAAAlE,KAAC8V,EAAclN,IAGrCwmB,EAAA/uB,UAAAsV,iBAAA,SAAiBxK,EAAiBvC,GAChC,OAAOA,GAGTwmB,EAAA/uB,UAAAytB,eAAA,SAAellB,GACb,IAAMklB,EAAiB3tB,OAAO6C,OAAO4F,GAMrC,OALAklB,EAAehmB,cAAgB9H,KAAKqsB,eACpCyB,EAAeljB,SAAW5K,KAAK4K,SAC/BkjB,EAAe/lB,QAAU/H,KAAKssB,SAC9BwB,EAAe9lB,WAAahI,KAAKwsB,YACjCsB,EAAe7lB,QAAUjI,KAAK0sB,SACvBoB,GAGT3tB,OAAAC,eAAIgvB,EAAA/uB,UAAA,WAAQ,KAAZ,WACE,IAAM6M,EAASlN,KAAK2rB,KAAKC,YACnB4C,EAAKthB,EAAOuhB,eACZC,EAAKxhB,EAAOyhB,eAClB,OAAO,IAAItpB,EAAOmpB,EAAG1uB,MAAO0uB,EAAGzuB,MAAO2uB,EAAG5uB,MAAO4uB,EAAG3uB,wCAGrDqvB,EAAA/uB,UAAA6b,QAAA,SAAQ/X,EAAWE,EAAWuE,GAE5B,OADAA,EAAc5I,KAAK8tB,eAAellB,GAC3B3E,EAAA5D,UAAM6b,QAAOhY,KAAAlE,KAACmE,EAAGE,EAAGuE,IAGnBwmB,EAAA/uB,UAAA+rB,YAAV,WACEpsB,KAAKwsB,YAAcxsB,KAAK2rB,KAAK0D,aAC7BrvB,KAAK0sB,SAAW1sB,KAAK2rB,KAAK2D,UAC1BtvB,KAAKotB,WAAWptB,KAAK2rB,KAAKY,WAC1BvsB,KAAK8sB,iBAAiB9sB,KAAKqsB,iBAG7B+C,EAAA/uB,UAAA0tB,cAAA,WACE,GAAyB,OAArB/tB,KAAKyL,YACP,OAAOzL,KAAKgR,WAEZ,IA0BMue,EAAa,IA1BnB,SAAAtrB,GAGE,SAAAurB,EAAYlB,GAAZ,IAAAtqB,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAKuqB,SAAWD,EAChBtqB,EAAKyrB,YAAc,OAmBvB,OAzBmC5sB,EAAA2sB,EAAAvrB,GAQjCurB,EAAAnvB,UAAAqvB,MAAA,WACE,IAAMC,EAAQ3vB,KAAK4vB,WAGbC,EAFqBT,EAAcU,qBAAqBH,EAAMI,oBACxBpoB,WACTA,WACnC3H,KAAKyvB,YAAcI,EAAUpd,OAAO,UACpCzS,KAAKyvB,YAAYhd,OAAOzS,KAAKuuB,WAE/BiB,EAAAnvB,UAAA2vB,SAAA,WAC2B,OAArBhwB,KAAKyvB,cACPzvB,KAAKyvB,YAAY3d,SACjB9R,KAAKyvB,YAAc,OAGvBD,EAAAnvB,UAAAqnB,KAAA,WACE1nB,KAAKuuB,SAASnC,eAElBoD,EAzBA,CAAmCZ,OAAOC,KAAKoB,aA0B5B,CAAyBjwB,MAG5C,OAFAuvB,EAAWW,OAAOlwB,KAAK2rB,MACvB3rB,KAAK+uB,YAAcQ,EACZA,EAAWE,aAIPL,EAAAU,qBAAf,SAAoC5O,GAClC,IAAMiP,EAAajP,EAAKiP,WAIxB,OAHIA,aAAsBC,cAAiBD,EAAwB1iB,MACjE2hB,EAAcU,qBAAqBK,GAE9B/nB,EAAAA,KAAK4lB,SAAS9M,IAEzBkO,GAxNmC3nB,iBCFnC,SAAA4oB,mDAgBA,OAhBsFxtB,EAAAwtB,EAAApsB,GACpFosB,EAAAhwB,UAAA6sB,yBAAA,SAAyBplB,EAAoC2F,KAI7D4iB,EAAAhwB,UAAA8sB,wBAAA,SAAwBrlB,EAAoC2F,KAI5D4iB,EAAAhwB,UAAAqtB,mBAAA,SAAmBL,EAAoBC,EAAoB7f,KAI3D4iB,EAAAhwB,UAAAwtB,kBAAA,SAAkBR,EAAoBC,EAAoB7f,KAG5D4iB,GAhBsFlR,GCEzEmR,EAAiB,CAC5BC,sBAAkB,EAElBtuB,KAAA,gBAC0C,IAApCquB,EAAeC,kBAChB5Q,OAAO6Q,QAAgB,CAAC,2CAA2C,SAAUD,GAC5ED,EAAeC,iBAAmBA,qBCLxC,SAAAE,IAAA,IAAAzsB,EACEC,EAAAC,KAAAlE,OAAOA,YACPswB,EAAeruB,SA+FnB,OAlGuCY,EAAA4tB,EAAAxsB,GAQrC9D,OAAAC,eAAIqwB,EAAApwB,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDAWJ+oB,EAAApwB,UAAA0sB,qBAAV,SAA+BjlB,GAC7B9H,KAAKsK,aAAY,SAAUC,QACqB,IAA1CA,EAAa2iB,0BACf3iB,EAAa2iB,yBAAyBplB,EAAe9H,UAKjDywB,EAAApwB,UAAA2sB,mBAAV,SAA6BllB,GACtB9H,KAAKoL,YAAepL,KAAKoX,YAC5BpX,KAAKmI,cAAcC,EAAAA,KAAKC,cAAc,IAIhCooB,EAAApwB,UAAA4sB,oBAAV,SAA8BnlB,GAC5B9H,KAAKyK,YAAW,SAAUF,QACqB,IAAzCA,EAAa4iB,yBACf5iB,EAAa4iB,wBAAwBrlB,EAAe9H,UAOhDywB,EAAApwB,UAAAktB,eAAV,SAAyBF,EAAoBC,GAC3CttB,KAAKyK,YAAW,SAAUF,QACgB,IAApCA,EAAamjB,oBACfnjB,EAAamjB,mBAAmBL,EAAYC,EAAYttB,UAKpDywB,EAAApwB,UAAAmtB,aAAV,SAAuBH,EAAoBC,KAIjCmD,EAAApwB,UAAAotB,cAAV,SAAwBJ,EAAoBC,GAC1CttB,KAAKyK,YAAW,SAAUF,QACe,IAAnCA,EAAasjB,mBACftjB,EAAasjB,kBAAkBR,EAAYC,EAAYttB,UAS7DywB,EAAApwB,UAAA4U,eAAA,SAAetM,EAAyBC,GACtCA,EAAc5I,KAAK8tB,eAAellB,GAClC3E,EAAA5D,UAAM4U,eAAc/Q,KAAAlE,KAAC2I,EAAcC,IAGrC6nB,EAAApwB,UAAAwV,eAAA,SAAeC,EAAyBlN,GACtCA,EAAc5I,KAAK8tB,eAAellB,GAClC3E,EAAA5D,UAAMwV,eAAc3R,KAAAlE,KAAC8V,EAAclN,IAGrC6nB,EAAApwB,UAAAsV,iBAAA,SAAiBxK,EAAiBvC,GAChC,OAAOA,GAGT6nB,EAAApwB,UAAAytB,eAAA,SAAellB,GACb,IAAMklB,EAAiB3tB,OAAO6C,OAAO4F,GAMrC,OALAklB,EAAehmB,cAAgB9H,KAAK8H,cACpCgmB,EAAeljB,SAAW5K,KAAK4K,SAC/BkjB,EAAe/lB,QAAU/H,KAAK+H,QAC9B+lB,EAAe9lB,WAAahI,KAAKgI,WACjC8lB,EAAe7lB,QAAUjI,KAAKiI,QACvB6lB,GAGT2C,EAAApwB,UAAA6b,QAAA,SAAQ/X,EAAWE,EAAWuE,GAE5B,OADAA,EAAc5I,KAAK8tB,eAAellB,GAC3B3E,EAAA5D,UAAM6b,QAAOhY,KAAAlE,KAACmE,EAAGE,EAAGuE,IAI/B6nB,GAlGuChpB,iBCFvC,SAAAipB,mDAgBA,OAhBuE7tB,EAAA6tB,EAAAzsB,GACrEysB,EAAArwB,UAAA6sB,yBAAA,SAAyBplB,EAA+B2F,KAIxDijB,EAAArwB,UAAA8sB,wBAAA,SAAwBrlB,EAA+B2F,KAIvDijB,EAAArwB,UAAAqtB,mBAAA,SAAmBL,EAAoBC,EAAoB7f,KAI3DijB,EAAArwB,UAAAwtB,kBAAA,SAAkBR,EAAoBC,EAAoB7f,KAG5DijB,GAhBuEvR,gBCGrE,SAAAwR,EAAYjF,GACV4E,EAAeruB,OACfjC,KAAK2rB,KAAOD,EAgDhB,OA7CEvrB,OAAAC,eAAIuwB,EAAAtwB,UAAA,MAAG,KAAP,WACE,OAAOL,KAAK2rB,sCAGdxrB,OAAAC,eAAIuwB,EAAAtwB,UAAA,SAAM,KAAV,WACE,IAAIuwB,EAAS5wB,KAAK2rB,KAAKiF,OAIvB,OAHe,OAAXA,IACFA,EAASN,EAAeC,iBAAkBM,wBAAwBD,IAErD,OAAXA,EACK,IAAIvrB,EAAOurB,EAAOE,KAAMF,EAAOG,KAAMH,EAAOI,KAAMJ,EAAOK,MAEzD5rB,EAAOkC,yCAMlBopB,EAAAtwB,UAAAC,QAAA,SAAQR,EAA2BC,GACjC,IAAIoc,EAEFA,EADiB,iBAARrc,EACE,CAACqE,EAAGrE,EAAKuE,EAAGtE,EAAMmxB,iBAAkB,CAACC,KAAM,OAC7CjvB,MAAMC,QAAQrC,GACZ,CAACqE,EAAGrE,EAAI,GAAIuE,EAAGvE,EAAI,GAAIoxB,iBAAkB,CAACC,KAAM,OAEhD,CAAChtB,EAAGrE,EAAIA,IAAKuE,EAAGvE,EAAIC,IAAKmxB,iBAAkB,CAACC,KAAM,OAE/D,IAAMrN,EAAQ9jB,KAAK2rB,KAAKyF,SAASjV,GACjC,OAAiB,OAAV2H,EAAiB,IAAIG,EAAAA,QAAQH,EAAM3f,EAAG2f,EAAMzf,GAAK4f,EAAAA,QAAQ1iB,UAKlEovB,EAAAtwB,UAAA+b,UAAA,SAAUjY,EAAwBE,GAChC,IAAI2f,EAEFA,EADe,iBAAN7f,EACG,CAACA,EAAGA,EAAGE,EAAGA,GACbnC,MAAMC,QAAQgC,GACX,CAACA,EAAGA,EAAE,GAAIE,EAAGF,EAAE,IAEfA,EAEd,IAAM2f,EAAQ9jB,KAAK2rB,KAAK0F,MAAMrN,GAC9B,OAAiB,OAAVF,EAAiB,IAAIjkB,EAASikB,EAAMwN,UAAWxN,EAAMyN,UAAY1xB,EAAS0B,UAErFovB,mBCxCE,SAAAa,EAAY9F,GAAZ,IAAA1nB,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAKooB,YAAcpoB,EAAKooB,YAAYhJ,KAAKpf,GACzCA,EAAK2nB,KAAOD,EACZ1nB,EAAKqoB,eAAiB,IAAIsE,EAAsB3sB,EAAK2nB,MACrD3nB,EAAKsoB,SAAWZ,EAAI+F,KACpBztB,EAAKwoB,YAAcd,EAAIgG,SACvB1tB,EAAK4oB,QAAQ5oB,EAAK2nB,QA4FtB,OA7GiC9oB,EAAA2uB,EAAAvtB,GAoB/B9D,OAAAC,eAAIoxB,EAAAnxB,UAAA,MAAG,KAAP,WACE,OAAOL,KAAK2rB,sCAGJ6F,EAAAnxB,UAAAusB,QAAV,SAAkBlB,GAChBA,EAAIiG,MAAM,SAAU3xB,KAAKosB,cAG3BjsB,OAAAC,eAAIoxB,EAAAnxB,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDAKd8pB,EAAAnxB,UAAAC,QAAA,SAAQR,EAA2BC,GACjC,OAAOC,KAAKqsB,eAAe/rB,QAAQusB,MAAM7sB,KAAKqsB,eAAgB9oB,YAKhEiuB,EAAAnxB,UAAA+b,UAAA,SAAUjY,EAAwBE,GAChC,OAAOrE,KAAKqsB,eAAejQ,UAAUyQ,MAAM7sB,KAAKqsB,eAAgB9oB,YAGlEpD,OAAAC,eAAIoxB,EAAAnxB,UAAA,gBAAa,KAAjB,WACE,OAAOL,KAAKqsB,gDAGdmF,EAAAnxB,UAAAysB,iBAAA,SAAiBhlB,GACf9H,KAAK+sB,qBAAqBjlB,GAC1B9H,KAAKqsB,eAAiBvkB,EACtB9H,KAAKgtB,mBAAmBllB,GACxB9H,KAAKitB,oBAAoBnlB,IAG3B3H,OAAAC,eAAIoxB,EAAAnxB,UAAA,UAAO,KAAX,WACE,OAAOL,KAAKssB,0CAGdkF,EAAAnxB,UAAA+sB,WAAA,SAAWC,GACT,IAAMC,EAAattB,KAAKssB,SACpBgB,IAAeD,IACjBrtB,KAAKutB,eAAeF,EAAYC,GAChCttB,KAAKssB,SAAWe,EAChBrtB,KAAKwtB,aAAaH,EAAYC,GAC9BttB,KAAKytB,cAAcJ,EAAYC,KAInCntB,OAAAC,eAAIoxB,EAAAnxB,UAAA,aAAU,KAAd,WACE,OAAOL,KAAKwsB,6CAGdrsB,OAAAC,eAAIoxB,EAAAnxB,UAAA,UAAO,KAAX,WACE,OAAO,mCAGTF,OAAAC,eAAIoxB,EAAAnxB,UAAA,WAAQ,KAAZ,WACE,IAAIuwB,EAAS5wB,KAAK2rB,KAAKiF,OAIvB,OAHe,OAAXA,IACFA,EAASN,EAAeC,iBAAkBM,wBAAwBD,IAErD,OAAXA,EACK,IAAIvrB,EAAOurB,EAAOE,KAAMF,EAAOG,KAAMH,EAAOI,KAAMJ,EAAOK,MAEzD5rB,EAAOkC,yCAIRiqB,EAAAnxB,UAAA+rB,YAAV,WACEpsB,KAAKwsB,YAAcxsB,KAAK2rB,KAAK+F,SAC7B1xB,KAAKotB,WAAWptB,KAAK2rB,KAAK8F,MAC1BzxB,KAAK8sB,iBAAiB9sB,KAAKqsB,iBAG7BmF,EAAAnxB,UAAA0tB,cAAA,WACE,GAAyB,OAArB/tB,KAAKyL,YACP,OAAOzL,KAAKgR,WAEZ,IAAM0a,EAAM1rB,KAAK2rB,KACXkE,EAAYznB,EAAAA,KAAK4lB,SAAStC,EAAImE,WAC9B+B,EAAexpB,EAAAA,KAAK4lB,SAAS6B,EAAU3O,KAAK2Q,cAAc,oBAE1D3D,EADqB9lB,EAAAA,KAAK4lB,SAAS4D,EAAa1Q,KAAK2Q,cAAc,0BACvCpf,OAAO,UAGzC,OAFAyb,EAAO4D,gBAAgBF,EAAa1Q,MACpCgN,EAAOzb,OAAOzS,MACPkuB,GAGbsD,GA7GiCf,iBCHjC,SAAAsB,mDAQA,OARgFlvB,EAAAkvB,EAAA9tB,GAC9E8tB,EAAA1xB,UAAA6sB,yBAAA,SAAyBplB,EAAsC2F,KAI/DskB,EAAA1xB,UAAA8sB,wBAAA,SAAwBrlB,EAAsC2F,KAGhEskB,GARgFrB,gBCG9E,SAAAsB,EAAYtG,GACV4E,EAAeruB,OACfjC,KAAK2rB,KAAOD,EAgDhB,OA7CEvrB,OAAAC,eAAI4xB,EAAA3xB,UAAA,MAAG,KAAP,WACE,OAAOL,KAAK2rB,sCAGdxrB,OAAAC,eAAI4xB,EAAA3xB,UAAA,SAAM,KAAV,WACE,IAAIuwB,EAAS5wB,KAAK2rB,KAAKiF,OAIvB,OAHe,OAAXA,IACFA,EAASN,EAAeC,iBAAkBM,wBAAwBD,IAErD,OAAXA,EACK,IAAIvrB,EAAOurB,EAAOE,KAAMF,EAAOG,KAAMH,EAAOI,KAAMJ,EAAOK,MAEzD5rB,EAAOkC,yCAMlByqB,EAAA3xB,UAAAC,QAAA,SAAQR,EAA2BC,GACjC,IAAIoc,EAEFA,EADiB,iBAARrc,EACE,CAACqE,EAAGrE,EAAKuE,EAAGtE,EAAMmxB,iBAAkB,CAACC,KAAM,OAC7CjvB,MAAMC,QAAQrC,GACZ,CAACqE,EAAGrE,EAAI,GAAIuE,EAAGvE,EAAI,GAAIoxB,iBAAkB,CAACC,KAAM,OAEhD,CAAChtB,EAAGrE,EAAIA,IAAKuE,EAAGvE,EAAIC,IAAKmxB,iBAAkB,CAACC,KAAM,OAE/D,IAAMrN,EAAQ9jB,KAAK2rB,KAAKyF,SAASjV,GACjC,OAAiB,OAAV2H,EAAiB,IAAIG,EAAAA,QAAQH,EAAM3f,EAAG2f,EAAMzf,GAAK4f,EAAAA,QAAQ1iB,UAKlEywB,EAAA3xB,UAAA+b,UAAA,SAAUjY,EAAwBE,GAChC,IAAI2f,EAEFA,EADe,iBAAN7f,EACG,CAACA,EAAGA,EAAGE,EAAGA,GACbnC,MAAMC,QAAQgC,GACX,CAACA,EAAGA,EAAE,GAAIE,EAAGF,EAAE,IAEfA,EAEd,IAAM2f,EAAQ9jB,KAAK2rB,KAAK0F,MAAMrN,GAC9B,OAAiB,OAAVF,EAAiB,IAAIjkB,EAASikB,EAAMwN,UAAWxN,EAAMyN,UAAY1xB,EAAS0B,UAErFywB,mBCtCE,SAAAC,EAAYvG,GAAZ,IAAA1nB,EACEC,EAAAC,KAAAlE,OAAOA,YACPgE,EAAKooB,YAAcpoB,EAAKooB,YAAYhJ,KAAKpf,GACzCA,EAAK2nB,KAAOD,EACZ1nB,EAAKqoB,eAAiB,IAAI2F,EAAwBhuB,EAAK2nB,MACvD3nB,EAAKsoB,SAAWZ,EAAI+F,KACpBztB,EAAKwoB,YAAcd,EAAIwG,OAAOC,QAC9BnuB,EAAK0oB,SAAWhB,EAAIwG,OAAOE,KAC3BpuB,EAAK4oB,QAAQ5oB,EAAK2nB,QA4FtB,OAhHmC9oB,EAAAovB,EAAAhuB,GAuBjC9D,OAAAC,eAAI6xB,EAAA5xB,UAAA,MAAG,KAAP,WACE,OAAOL,KAAK2rB,sCAGJsG,EAAA5xB,UAAAusB,QAAV,SAAkBlB,GAChBA,EAAIiG,MAAM,SAAU3xB,KAAKosB,cAG3BjsB,OAAAC,eAAI6xB,EAAA5xB,UAAA,iBAAc,KAAlB,WACE,OAAOL,KAAK0H,iDAKduqB,EAAA5xB,UAAAC,QAAA,SAAQR,EAA2BC,GACjC,OAAOC,KAAKqsB,eAAe/rB,QAAQusB,MAAM7sB,KAAKqsB,eAAgB9oB,YAKhE0uB,EAAA5xB,UAAA+b,UAAA,SAAUjY,EAAwBE,GAChC,OAAOrE,KAAKqsB,eAAejQ,UAAUyQ,MAAM7sB,KAAKqsB,eAAgB9oB,YAGlEpD,OAAAC,eAAI6xB,EAAA5xB,UAAA,gBAAa,KAAjB,WACE,OAAOL,KAAKqsB,gDAGd4F,EAAA5xB,UAAAysB,iBAAA,SAAiBhlB,GACf9H,KAAK+sB,qBAAqBjlB,GAC1B9H,KAAKqsB,eAAiBvkB,EACtB9H,KAAKgtB,mBAAmBllB,GACxB9H,KAAKitB,oBAAoBnlB,IAG3B3H,OAAAC,eAAI6xB,EAAA5xB,UAAA,UAAO,KAAX,WACE,OAAOL,KAAKssB,0CAGd2F,EAAA5xB,UAAA+sB,WAAA,SAAWC,GACT,IAAMC,EAAattB,KAAKssB,SACpBgB,IAAeD,IACjBrtB,KAAKutB,eAAeF,EAAYC,GAChCttB,KAAKssB,SAAWe,EAChBrtB,KAAKwtB,aAAaH,EAAYC,GAC9BttB,KAAKytB,cAAcJ,EAAYC,KAInCntB,OAAAC,eAAI6xB,EAAA5xB,UAAA,aAAU,KAAd,WACE,OAAOL,KAAKwsB,6CAGdrsB,OAAAC,eAAI6xB,EAAA5xB,UAAA,UAAO,KAAX,WACE,OAAOL,KAAK0sB,0CAGdvsB,OAAAC,eAAI6xB,EAAA5xB,UAAA,WAAQ,KAAZ,WACE,IAAIuwB,EAAS5wB,KAAK2rB,KAAKiF,OAIvB,OAHe,OAAXA,IACFA,EAASN,EAAeC,iBAAkBM,wBAAwBD,IAErD,OAAXA,EACK,IAAIvrB,EAAOurB,EAAOE,KAAMF,EAAOG,KAAMH,EAAOI,KAAMJ,EAAOK,MAEzD5rB,EAAOkC,yCAIR0qB,EAAA5xB,UAAA+rB,YAAV,WACEpsB,KAAKwsB,YAAcxsB,KAAK2rB,KAAKuG,OAAOC,QACpCnyB,KAAK0sB,SAAW1sB,KAAK2rB,KAAKuG,OAAOE,KACjCpyB,KAAKotB,WAAWptB,KAAK2rB,KAAK8F,MAC1BzxB,KAAK8sB,iBAAiB9sB,KAAKqsB,iBAG7B4F,EAAA5xB,UAAA0tB,cAAA,WACE,GAAyB,OAArB/tB,KAAKyL,YACP,OAAOzL,KAAKgR,WAEZ,IAAM0a,EAAM1rB,KAAK2rB,KACXkE,EAAYznB,EAAAA,KAAK4lB,SAAStC,EAAImE,WAC9B+B,EAAexpB,EAAAA,KAAK4lB,SAAS6B,EAAU3O,KAAK2Q,cAAc,oBAE1D3D,EADkB9lB,EAAAA,KAAK4lB,SAAS4D,EAAa1Q,KAAK2Q,cAAc,uBACvCpf,OAAO,UAEtC,OADAyb,EAAOzb,OAAOzS,MACPkuB,GAGb+D,GAhHmCxB,iBCHnC,SAAA4B,mDAQA,OARsFxvB,EAAAwvB,EAAApuB,GACpFouB,EAAAhyB,UAAA6sB,yBAAA,SAAyBplB,EAAwC2F,KAIjE4kB,EAAAhyB,UAAA8sB,wBAAA,SAAwBrlB,EAAwC2F,KAGlE4kB,GARsF3B,+RCUzD,CAC3B7oB,GAAA,SAAGqX,GACD,GAAsB,iBAAXA,GAAkC,OAAXA,EAAiB,CACjD,IAAM3e,EAAa2e,EACnB,MAAqC,mBAAvB3e,EAAWD,SACc,mBAAzBC,EAAW6b,UAE3B,OAAO","file":"/Users/c9r/Swim/Code/swim-platform/swim-toolkit-js/swim-maps-js/@swim/maps/dist/main/swim-maps.min.js","sourcesContent":["// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {PointR2} from \"@swim/math\";\nimport {GeoProjection} from \"./GeoProjection\";\n\nexport type AnyGeoPoint = GeoPoint | GeoPointInit | GeoPointTuple;\n\nexport interface GeoPointInit {\n  lng: number;\n  lat: number;\n}\n\nexport type GeoPointTuple = [number, number];\n\n/**\n * A geographic point represented by a WGS84 longitude and latitude.\n */\nexport class GeoPoint implements HashCode, Debug {\n  /** @hidden */\n  readonly _lng: number;\n  /** @hidden */\n  readonly _lat: number;\n\n  constructor(lng: number, lat: number) {\n    this._lng = lng;\n    this._lat = lat;\n  }\n\n  get lng(): number {\n    return this._lng;\n  }\n\n  get lat(): number {\n    return this._lat;\n  }\n\n  project(projection: GeoProjection): PointR2 {\n    return projection.project(this);\n  }\n\n  toAny(): GeoPointInit {\n    return {\n      lng: this._lng,\n      lat: this._lat,\n    };\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoPoint) {\n      return this._lng === that._lng && this._lat === that._lat;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (GeoPoint._hashSeed === void 0) {\n      GeoPoint._hashSeed = Murmur3.seed(GeoPoint);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(GeoPoint._hashSeed,\n        Murmur3.hash(this._lng)), Murmur3.hash(this._lat)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"GeoPoint\").write(46/*'.'*/).write(\"from\").write(40/*'('*/)\n        .debug(this._lng).write(\", \").debug(this._lat).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n\n  private static _origin?: GeoPoint;\n\n  static origin(): GeoPoint {\n    if (GeoPoint._origin === void 0) {\n      GeoPoint._origin = new GeoPoint(0, 0);\n    }\n    return GeoPoint._origin;\n  }\n\n  static from(lng: number, lat: number): GeoPoint {\n    return new GeoPoint(lng, lat);\n  }\n\n  static fromInit(value: GeoPointInit): GeoPoint {\n    return new GeoPoint(value.lng, value.lat);\n  }\n\n  static fromTuple(value: GeoPointTuple): GeoPoint {\n    return new GeoPoint(value[0], value[1]);\n  }\n\n  static fromAny(value: AnyGeoPoint): GeoPoint {\n    if (value instanceof GeoPoint) {\n      return value;\n    } else if (GeoPoint.isInit(value)) {\n      return GeoPoint.fromInit(value);\n    } else if (GeoPoint.isTuple(value)) {\n      return GeoPoint.fromTuple(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is GeoPointInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as GeoPointInit;\n      return typeof init.lng === \"number\"\n          && typeof init.lat === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static isTuple(value: unknown): value is GeoPointTuple {\n    return Array.isArray(value)\n        && value.length === 2\n        && typeof value[0] === \"number\"\n        && typeof value[1] === \"number\";\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyGeoPoint {\n    return value instanceof GeoPoint\n        || GeoPoint.isInit(value)\n        || GeoPoint.isTuple(value);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/interpolate\";\nimport {AnyGeoPoint, GeoPoint} from \"./GeoPoint\";\n\nexport class GeoPointInterpolator extends Interpolator<GeoPoint> {\n  /** @hidden */\n  readonly x: number;\n  /** @hidden */\n  readonly dx: number;\n  /** @hidden */\n  readonly y: number;\n  /** @hidden */\n  readonly dy: number;\n\n  constructor(p0: GeoPoint, p1: GeoPoint) {\n    super();\n    this.x = p0.lng;\n    this.dx = p1.lng - this.x;\n    this.y = p0.lat;\n    this.dy = p1.lat - this.y;\n  }\n\n  interpolate(u: number): GeoPoint {\n    const lng = this.x + this.dx * u;\n    const lat = this.y + this.dy * u;\n    return new GeoPoint(lng, lat);\n  }\n\n  deinterpolate(p: AnyGeoPoint): number {\n    p = GeoPoint.fromAny(p);\n    const x = p.lng - this.x;\n    const y = p.lat - this.y;\n    const dp = x * this.dx + y * this.dy;\n    const l = Math.sqrt(x * x + y * y);\n    return l !== 0 ? dp / l : l;\n  }\n\n  range(): ReadonlyArray<GeoPoint>;\n  range(ps: ReadonlyArray<AnyGeoPoint>): GeoPointInterpolator;\n  range(p0: AnyGeoPoint, p1: AnyGeoPoint): GeoPointInterpolator;\n  range(p0?: ReadonlyArray<AnyGeoPoint> | AnyGeoPoint, p1?: AnyGeoPoint): ReadonlyArray<GeoPoint> | GeoPointInterpolator {\n    if (p0 === void 0) {\n      return [this.interpolate(0), this.interpolate(1)];\n    } else if (p1 === void 0) {\n      p0 = p0 as ReadonlyArray<AnyGeoPoint>\n      return GeoPointInterpolator.between(p0[0], p0[1]);\n    } else {\n      return GeoPointInterpolator.between(p0 as AnyGeoPoint, p1);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoPointInterpolator) {\n      return this.x === that.x && this.dx === that.dx\n          && this.y === that.y && this.dy === that.dy;\n    }\n    return false;\n  }\n\n  static between(p0: AnyGeoPoint, p1: AnyGeoPoint): GeoPointInterpolator;\n  static between(a: unknown, b: unknown): Interpolator<unknown>;\n  static between(a: unknown, b: unknown): Interpolator<unknown> {\n    if (a instanceof GeoPoint && b instanceof GeoPoint) {\n      return new GeoPointInterpolator(a, b);\n    } else if (GeoPoint.isAny(a) && GeoPoint.isAny(b)) {\n      return new GeoPointInterpolator(GeoPoint.fromAny(a), GeoPoint.fromAny(b));\n    }\n    return Interpolator.between(a, b);\n  }\n\n  static tryBetween(a: unknown, b: unknown): GeoPointInterpolator | null {\n    if (a instanceof GeoPoint && b instanceof GeoPoint) {\n      return new GeoPointInterpolator(a, b);\n    }\n    return null;\n  }\n\n  static tryBetweenAny(a: unknown, b: unknown): GeoPointInterpolator | null {\n    if ((a instanceof GeoPoint || GeoPoint.isInit(a)) && (b instanceof GeoPoint || GeoPoint.isInit(b))) {\n      return new GeoPointInterpolator(GeoPoint.fromAny(a), GeoPoint.fromAny(b));\n    }\n    return null;\n  }\n}\nInterpolator.registerFactory(GeoPointInterpolator);\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport {BoxR2} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint} from \"./GeoPoint\";\nimport {GeoProjection} from \"./GeoProjection\";\n\nexport type AnyGeoBox = GeoBox | GeoBoxInit;\n\nexport interface GeoBoxInit {\n  lngMin: number;\n  latMin: number;\n  lngMax: number;\n  latMax: number;\n}\n\nexport class GeoBox implements HashCode, Debug {\n  /** @hidden */\n  readonly _lngMin: number;\n  /** @hidden */\n  readonly _latMin: number;\n  /** @hidden */\n  readonly _lngMax: number;\n  /** @hidden */\n  readonly _latMax: number;\n\n  constructor(lngMin: number, latMin: number, lngMax: number, latMax: number) {\n    this._lngMin = lngMin <= lngMax ? lngMin : lngMax;\n    this._latMin = latMin <= latMax ? latMin : latMax;\n    this._lngMax = lngMin <= lngMax ? lngMax : lngMin;\n    this._latMax = latMin <= latMax ? latMax : latMin;\n  }\n\n  get lngMin(): number {\n    return this._lngMin;\n  }\n\n  get latMin(): number {\n    return this._latMin;\n  }\n\n  get lngMax(): number {\n    return this._lngMax;\n  }\n\n  get latMax(): number {\n    return this._latMax;\n  }\n\n  get west(): number {\n    return this._lngMin;\n  }\n\n  get north(): number {\n    return this._latMin;\n  }\n\n  get east(): number {\n    return this._lngMax;\n  }\n\n  get south(): number {\n    return this._latMax;\n  }\n\n  get northWest(): GeoPoint {\n    return new GeoPoint(this._lngMin, this._latMin);\n  }\n\n  get northEast(): GeoPoint {\n    return new GeoPoint(this._lngMax, this._latMin);\n  }\n\n  get southEast(): GeoPoint {\n    return new GeoPoint(this._lngMax, this._latMax);\n  }\n\n  get southWest(): GeoPoint {\n    return new GeoPoint(this._lngMin, this._latMax);\n  }\n\n  get center(): GeoPoint {\n    return new GeoPoint((this._lngMin + this._lngMax) / 2,\n                        (this._latMin + this._latMax) / 2);\n  }\n\n  contains(that: AnyGeoPoint | AnyGeoBox): boolean;\n  contains(lng: number, lat: number): boolean;\n  contains(that: AnyGeoPoint | AnyGeoBox | number, y?: number): boolean {\n    if (typeof that === \"number\") {\n      return this._lngMin <= that && that <= this._lngMax\n          && this._latMin <= y! && y! <= this._latMax;\n    } else if (GeoPoint.isAny(that)) {\n      return this.containsPoint(GeoPoint.fromAny(that));\n    } else if (GeoBox.isAny(that)) {\n      return this.containsBox(GeoBox.fromAny(that));\n    } else {\n      throw new TypeError(\"\" + that);\n    }\n  }\n\n  /** @hidden */\n  containsPoint(that: GeoPoint): boolean {\n    return this._lngMin <= that._lng && that._lng <= this._lngMax\n        && this._latMin <= that._lat && that._lat <= this._latMax;\n  }\n\n  /** @hidden */\n  containsBox(that: GeoBox): boolean {\n    return this._lngMin <= that._lngMin && that._lngMax <= this._lngMax\n        && this._latMin <= that._latMin && that._latMax <= this._latMax;\n  }\n\n  intersects(that: AnyGeoPoint | AnyGeoBox): boolean {\n    if (GeoPoint.isAny(that)) {\n      return this.intersectsPoint(GeoPoint.fromAny(that));\n    } else if (GeoBox.isAny(that)) {\n      return this.intersectsBox(GeoBox.fromAny(that));\n    } else {\n      throw new TypeError(\"\" + that);\n    }\n  }\n\n  /** @hidden */\n  intersectsPoint(that: GeoPoint): boolean {\n    return this._lngMin <= that._lng && that._lng <= this._lngMax\n        && this._latMin <= that._lat && that._lat <= this._latMax;\n  }\n\n  /** @hidden */\n  intersectsBox(that: GeoBox): boolean {\n    return this._lngMin <= that._lngMax && that._lngMin <= this._lngMax\n        && this._latMin <= that._latMax && that._latMin <= this._latMax;\n  }\n\n  union(that: AnyGeoPoint | AnyGeoBox): GeoBox {\n    if (GeoPoint.isAny(that)) {\n      return this.unionPoint(GeoPoint.fromAny(that));\n    } else if (GeoBox.isAny(that)) {\n      return this.unionBox(GeoBox.fromAny(that));\n    } else {\n      throw new TypeError(\"\" + that);\n    }\n  }\n\n  /** @hidden */\n  unionPoint(that: GeoPoint): GeoBox {\n    return new GeoBox(Math.min(this._lngMin, that._lng),\n                      Math.min(this._latMin, that._lat),\n                      Math.max(this._lngMax, that._lng),\n                      Math.max(this._latMax, that._lat));\n  }\n\n  /** @hidden */\n  unionBox(that: GeoBox): GeoBox {\n    return new GeoBox(Math.min(this._lngMin, that._lngMin),\n                      Math.min(this._latMin, that._latMin),\n                      Math.max(this._lngMax, that._lngMax),\n                      Math.max(this._latMax, that._latMax));\n  }\n\n  project(projection: GeoProjection): BoxR2 {\n    const bottomLeft = projection.project(this._lngMin, this._latMin);\n    const topRight = projection.project(this._lngMax, this._latMax);\n    let xMin = bottomLeft._x;\n    let yMin = bottomLeft._y;\n    let xMax = topRight._x;\n    let yMax = topRight._y;\n    if (xMin > xMax) {\n      const x = xMin;\n      xMin = xMax;\n      xMax = x;\n    }\n    if (yMin > yMax) {\n      const y = yMin;\n      yMin = yMax;\n      yMax = y;\n    }\n    if (!isFinite(xMin)) {\n      xMin = -Infinity;\n    }\n    if (!isFinite(yMin)) {\n      yMin = -Infinity;\n    }\n    if (!isFinite(xMax)) {\n      xMax = Infinity;\n    }\n    if (!isFinite(yMax)) {\n      yMax = Infinity;\n    }\n    return new BoxR2(xMin, yMin, xMax, yMax);\n  }\n\n  toAny(): GeoBoxInit {\n    return {\n      lngMin: this._lngMin,\n      latMin: this._latMin,\n      lngMax: this._lngMax,\n      latMax: this._latMax,\n    };\n  }\n\n  protected canEqual(that: GeoBox): boolean {\n    return true;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeoBox) {\n      return that.canEqual(this) && this._lngMin === that._lngMin && this._latMin === that._latMin\n          && this._lngMax === that._lngMax && this._latMax === that._latMax;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (GeoBox._hashSeed === void 0) {\n      GeoBox._hashSeed = Murmur3.seed(GeoBox);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(GeoBox._hashSeed,\n        Murmur3.hash(this._lngMin)), Murmur3.hash(this._latMin)),\n        Murmur3.hash(this._lngMax)), Murmur3.hash(this._latMax)));\n  }\n\n  debug(output: Output): void {\n    output.write(\"GeoBox\").write(46/*'.'*/).write(\"of\").write(40/*'('*/)\n        .debug(this._lngMin).write(\", \").debug(this._latMin).write(\", \")\n        .debug(this._lngMax).write(\", \").debug(this._latMax).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n\n  private static _empty?: GeoBox;\n  static empty(): GeoBox {\n    if (GeoBox._empty === void 0) {\n      GeoBox._empty = new GeoBox(0, 0, 0, 0);\n    }\n    return GeoBox._empty;\n  }\n\n  private static _globe?: GeoBox;\n  static globe(): GeoBox {\n    if (GeoBox._globe === void 0) {\n      GeoBox._globe = new GeoBox(-180, -90, 180, 90);\n    }\n    return GeoBox._globe;\n  }\n\n  static from(lngMin: number, latMin: number, lngMax?: number, latMax?: number): GeoBox {\n    if (lngMax === void 0) {\n      lngMax = lngMin;\n    }\n    if (latMax === void 0) {\n      latMax = latMin;\n    }\n    return new GeoBox(lngMin, latMin, lngMax, latMax);\n  }\n\n  static fromInit(value: GeoBoxInit): GeoBox {\n    return new GeoBox(value.lngMin, value.latMin, value.lngMax, value.latMax);\n  }\n\n  static fromAny(value: AnyGeoBox): GeoBox {\n    if (value instanceof GeoBox) {\n      return value;\n    } else if (GeoBox.isInit(value)) {\n      return GeoBox.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @hidden */\n  static isInit(value: unknown): value is GeoBoxInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as GeoBoxInit;\n      return typeof init.lngMin === \"number\"\n          && typeof init.latMin === \"number\"\n          && typeof init.lngMax === \"number\"\n          && typeof init.latMax === \"number\";\n    }\n    return false;\n  }\n\n  /** @hidden */\n  static isAny(value: unknown): value is AnyGeoBox {\n    return value instanceof GeoBox\n        || GeoBox.isInit(value);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ViewFlags, View, GraphicsView} from \"@swim/view\";\nimport {GeoBox} from \"../geo/GeoBox\";\nimport {GeoProjection} from \"../geo/GeoProjection\";\nimport {MapViewContext} from \"../MapViewContext\";\nimport {MapView} from \"../MapView\";\nimport {MapGraphicsViewObserver} from \"./MapGraphicsViewObserver\";\nimport {MapGraphicsViewController} from \"./MapGraphicsViewController\";\n\nexport class MapGraphicsView extends GraphicsView implements MapView {\n  get viewController(): MapGraphicsViewController | null {\n    return this._viewController;\n  }\n\n  get geoProjection(): GeoProjection | null {\n    const parentView = this.parentView;\n    return MapView.is(parentView) ? parentView.geoProjection : null;\n  }\n\n  get mapZoom(): number {\n    const parentView = this.parentView;\n    return MapView.is(parentView) ? parentView.mapZoom : 0;\n  }\n\n  get mapHeading(): number {\n    const parentView = this.parentView;\n    return MapView.is(parentView) ? parentView.mapHeading : 0;\n  }\n\n  get mapTilt(): number {\n    const parentView = this.parentView;\n    return MapView.is(parentView) ? parentView.mapTilt : 0;\n  }\n\n  protected onMount(): void {\n    super.onMount();\n    this.requireUpdate(View.NeedsProject);\n  }\n\n  protected modifyUpdate(updateFlags: ViewFlags): ViewFlags {\n    let additionalFlags = 0;\n    if ((updateFlags & View.NeedsProject) !== 0) {\n      additionalFlags |= View.NeedsLayout;\n    }\n    additionalFlags |= super.modifyUpdate(updateFlags | additionalFlags);\n    return additionalFlags;\n  }\n\n  needsProcess(processFlags: ViewFlags, viewContext: MapViewContext): ViewFlags {\n    if ((this._viewFlags & View.NeedsAnimate) === 0) {\n      processFlags &= ~View.NeedsAnimate;\n    }\n    return processFlags;\n  }\n\n  /** @hidden */\n  protected doProcess(processFlags: ViewFlags, viewContext: MapViewContext): void {\n    let cascadeFlags = processFlags;\n    this._viewFlags &= ~(View.NeedsProcess | View.NeedsResize);\n    this.willProcess(viewContext);\n    this._viewFlags |= View.ProcessingFlag;\n    try {\n      if (((this._viewFlags | processFlags) & View.NeedsScroll) !== 0) {\n        cascadeFlags |= View.NeedsScroll;\n        this._viewFlags &= ~View.NeedsScroll;\n        this.willScroll(viewContext);\n      }\n      if (((this._viewFlags | processFlags) & View.NeedsDerive) !== 0) {\n        cascadeFlags |= View.NeedsDerive;\n        this._viewFlags &= ~View.NeedsDerive;\n        this.willDerive(viewContext);\n      }\n      if (((this._viewFlags | processFlags) & View.NeedsAnimate) !== 0) {\n        cascadeFlags |= View.NeedsAnimate;\n        this._viewFlags &= ~View.NeedsAnimate;\n        this.willAnimate(viewContext);\n      }\n      if (((this._viewFlags | processFlags) & View.NeedsProject) !== 0) {\n        cascadeFlags |= View.NeedsProject;\n        this._viewFlags &= ~View.NeedsProject;\n        this.willProject(viewContext);\n      }\n\n      this.onProcess(viewContext);\n      if ((cascadeFlags & View.NeedsScroll) !== 0) {\n        this.onScroll(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsDerive) !== 0) {\n        this.onDerive(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsAnimate) !== 0) {\n        this.onAnimate(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsProject) !== 0) {\n        this.onProject(viewContext);\n      }\n\n      this.doProcessChildViews(cascadeFlags, viewContext);\n\n      if ((cascadeFlags & View.NeedsProject) !== 0) {\n        this.didProject(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsAnimate) !== 0) {\n        this.didAnimate(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsDerive) !== 0) {\n        this.didDerive(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsScroll) !== 0) {\n        this.didScroll(viewContext);\n      }\n    } finally {\n      this._viewFlags &= ~View.ProcessingFlag;\n      this.didProcess(viewContext);\n    }\n  }\n\n  protected willProject(viewContext: MapViewContext): void {\n    this.willObserve(function (viewObserver: MapGraphicsViewObserver): void {\n      if (viewObserver.viewWillProject !== void 0) {\n        viewObserver.viewWillProject(viewContext, this);\n      }\n    });\n  }\n\n  protected onProject(viewContext: MapViewContext): void {\n    // hook\n  }\n\n  protected didProject(viewContext: MapViewContext): void {\n    this.didObserve(function (viewObserver: MapGraphicsViewObserver): void {\n      if (viewObserver.viewDidProject !== void 0) {\n        viewObserver.viewDidProject(viewContext, this);\n      }\n    });\n  }\n\n  cullGeoFrame(geoFrame: GeoBox = this.geoFrame): void {\n    this.setCulled(!geoFrame.intersects(this.geoBounds));\n  }\n\n  get geoFrame(): GeoBox {\n    const parentView = this.parentView;\n    return MapView.is(parentView) ? parentView.geoFrame : GeoBox.globe();\n  }\n\n  get geoBounds(): GeoBox {\n    return this.geoFrame;\n  }\n\n  deriveGeoBounds(): GeoBox {\n    let geoBounds: GeoBox | undefined;\n    const childViews = this._childViews;\n    for (let i = 0, n = childViews.length; i < n; i += 1) {\n      const childView = childViews[i];\n      if (MapView.is(childView) && !childView.isHidden()) {\n        const childGeoBounds = childView.geoBounds;\n        if (geoBounds === void 0) {\n          geoBounds = childGeoBounds;\n        } else {\n          geoBounds = geoBounds.union(childGeoBounds);\n        }\n      }\n    }\n    if (geoBounds === void 0) {\n      geoBounds = this.geoFrame;\n    }\n    return geoBounds;\n  }\n\n  protected didSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    const parentView = this._parentView;\n    if (MapView.is(parentView)) {\n      parentView.childViewDidSetGeoBounds(this, newGeoBounds, oldGeoBounds);\n    }\n  }\n\n  childViewDidSetGeoBounds(childView: MapView, newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    // nop\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {GeoPoint} from \"../geo/GeoPoint\";\nimport {GeoBox} from \"../geo/GeoBox\";\nimport {MapView} from \"../MapView\";\n\nexport class MapTile {\n  /** @hidden */\n  readonly _depth: number;\n  /** @hidden */\n  readonly _maxDepth: number;\n  /** @hidden */\n  readonly _geoFrame: GeoBox;\n  /** @hidden */\n  readonly _geoBounds: GeoBox;\n  /** @hidden */\n  readonly _geoCenter: GeoPoint;\n  /** @hidden */\n  readonly _southWest: MapTile | null;\n  /** @hidden */\n  readonly _northWest: MapTile | null;\n  /** @hidden */\n  readonly _southEast: MapTile | null;\n  /** @hidden */\n  readonly _northEast: MapTile | null;\n  /** @hidden */\n  readonly _views: ReadonlyArray<MapView>;\n  /** @hidden */\n  readonly _size: number;\n\n  constructor(depth: number, maxDepth: number, geoFrame: GeoBox,\n              geoBounds: GeoBox, geoCenter: GeoPoint,\n              southWest: MapTile | null, northWest: MapTile | null,\n              southEast: MapTile | null, northEast: MapTile | null,\n              views: ReadonlyArray<MapView>, size: number) {\n    this._depth = depth;\n    this._maxDepth = maxDepth;\n    this._geoFrame = geoFrame;\n    this._geoBounds = geoBounds;\n    this._geoCenter = geoCenter;\n    this._southWest = southWest;\n    this._northWest = northWest;\n    this._southEast = southEast;\n    this._northEast = northEast;\n    this._views = views;\n    this._size = size;\n  }\n\n  get depth(): number {\n    return this._depth;\n  }\n\n  get maxDepth(): number {\n    return this._maxDepth;\n  }\n\n  get geoFrame(): GeoBox {\n    return this._geoFrame;\n  }\n\n  get geoBounds(): GeoBox {\n    return this._geoBounds;\n  }\n\n  get geoCenter(): GeoPoint {\n    return this._geoCenter;\n  }\n\n  get southWest(): MapTile | null {\n    return this._southWest;\n  }\n\n  get northWest(): MapTile | null {\n    return this._northWest;\n  }\n\n  get southEast(): MapTile | null {\n    return this._southEast;\n  }\n\n  get northEast(): MapTile | null {\n    return this._northEast;\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  isEmpty(): boolean {\n    return this._size === 0;\n  }\n\n  contains(bounds: GeoBox): boolean {\n    return this._geoFrame.contains(bounds);\n  }\n\n  intersects(bounds: GeoBox): boolean {\n    return this._geoFrame.intersects(bounds);\n  }\n\n  getTile(bounds: GeoBox): MapTile {\n    if (this._depth < this._maxDepth) {\n      const geoCenter = this._geoCenter;\n      const inWest = bounds.lngMin <= geoCenter.lng;\n      const inSouth = bounds.latMin <= geoCenter.lat;\n      const inEast = bounds.lngMax > geoCenter.lng;\n      const inNorth = bounds.latMax > geoCenter.lat;\n      if (inWest !== inEast && inSouth !== inNorth) {\n        if (inSouth && inWest) {\n          const southWest = this._southWest;\n          if (southWest !== null) {\n            return southWest.getTile(bounds);\n          }\n        } else if (inNorth && inWest) {\n          const northWest = this._northWest;\n          if (northWest !== null) {\n            return northWest.getTile(bounds);\n          }\n        } else if (inSouth && inEast) {\n          const southEast = this._southEast;\n          if (southEast !== null) {\n            return southEast.getTile(bounds);\n          }\n        } else if (inNorth && inEast) {\n          const northEast = this._northEast;\n          if (northEast !== null) {\n            return northEast.getTile(bounds);\n          }\n        }\n      }\n    }\n    return this;\n  }\n\n  inserted(view: MapView, bounds: GeoBox): MapTile {\n    if (this._depth < this._maxDepth) {\n      const geoCenter = this._geoCenter;\n      const inWest = bounds.lngMin <= geoCenter.lng;\n      const inSouth = bounds.latMin <= geoCenter.lat;\n      const inEast = bounds.lngMax > geoCenter.lng;\n      const inNorth = bounds.latMax > geoCenter.lat;\n      if (inWest !== inEast && inSouth !== inNorth) {\n        if (inSouth && inWest) {\n          const oldSouthWest = this._southWest;\n          let newSouthWest = oldSouthWest;\n          if (newSouthWest === null) {\n            newSouthWest = this.createTile(this._depth + 1, this._maxDepth,\n                                           new GeoBox(this._geoFrame._lngMin, this._geoFrame._latMin,\n                                                      this._geoCenter._lng, this._geoCenter._lat));\n          }\n          newSouthWest = newSouthWest.inserted(view, bounds);\n          if (oldSouthWest !== newSouthWest) {\n            return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                                   newSouthWest, this._northWest, this._southEast, this._northEast,\n                                   this._views, this._size + 1);\n          } else {\n            return this;\n          }\n        } else if (inNorth && inWest) {\n          const oldNorthWest = this._northWest;\n          let newNorthWest = oldNorthWest;\n          if (newNorthWest === null) {\n            newNorthWest = this.createTile(this._depth + 1, this._maxDepth,\n                                           new GeoBox(this._geoFrame._lngMin, this._geoCenter._lat,\n                                                      this._geoCenter._lng, this._geoFrame._latMax));\n          }\n          newNorthWest = newNorthWest.inserted(view, bounds);\n          if (oldNorthWest !== newNorthWest) {\n            return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                                   this._southWest, newNorthWest, this._southEast, this._northEast,\n                                   this._views, this._size + 1);\n          } else {\n            return this;\n          }\n        } else if (inSouth && inEast) {\n          const oldSouthEast = this._southEast;\n          let newSouthEast = oldSouthEast;\n          if (newSouthEast === null) {\n            newSouthEast = this.createTile(this._depth + 1, this._maxDepth,\n                                           new GeoBox(this._geoCenter._lng, this._geoFrame._latMin,\n                                                      this._geoFrame._lngMax, this._geoCenter._lat));\n          }\n          newSouthEast = newSouthEast.inserted(view, bounds);\n          if (oldSouthEast !== newSouthEast) {\n            return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                                   this._southWest, this._northWest, newSouthEast, this._northEast,\n                                   this._views, this._size + 1);\n          } else {\n            return this;\n          }\n        } else if (inNorth && inEast) {\n          const oldNorthEast = this._northEast;\n          let newNorthEast = oldNorthEast;\n          if (newNorthEast === null) {\n            newNorthEast = this.createTile(this._depth + 1, this._maxDepth,\n                                           new GeoBox(this._geoCenter._lng, this._geoCenter._lat,\n                                                      this._geoFrame._lngMax, this._geoFrame._latMax));\n          }\n          newNorthEast = newNorthEast.inserted(view, bounds);\n          if (oldNorthEast !== newNorthEast) {\n            return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                                   this._southWest, this._northWest, this._southEast, newNorthEast,\n                                   this._views, this._size + 1);\n          } else {\n            return this;\n          }\n        }\n      }\n    }\n    const oldViews = this._views;\n    if (oldViews.indexOf(view) < 0) {\n      const newViews = oldViews.slice(0);\n      newViews.push(view);\n      return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                             this._southWest, this._northWest, this._southEast, this._northEast,\n                             newViews, this._size + 1);\n    } else {\n      return this;\n    }\n  }\n\n  removed(view: MapView, bounds: GeoBox): MapTile {\n    if (this._depth < this._maxDepth) {\n      const geoCenter = this._geoCenter;\n      const inWest = bounds.lngMin <= geoCenter.lng;\n      const inSouth = bounds.latMin <= geoCenter.lat;\n      const inEast = bounds.lngMax > geoCenter.lng;\n      const inNorth = bounds.latMax > geoCenter.lat;\n      if (inWest !== inEast && inSouth !== inNorth) {\n        if (inSouth && inWest) {\n          const oldSouthWest = this._southWest;\n          if (oldSouthWest !== null) {\n            let newSouthWest: MapTile | null = oldSouthWest.removed(view, bounds);\n            if (newSouthWest.isEmpty()) {\n              newSouthWest = null;\n            }\n            return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                                   newSouthWest, this._northWest, this._southEast, this._northEast,\n                                   this._views, this._size - 1);\n          } else {\n            return this;\n          }\n        } else if (inNorth && inWest) {\n          const oldNorthWest = this._northWest;\n          if (oldNorthWest !== null) {\n            let newNorthWest: MapTile | null = oldNorthWest.removed(view, bounds);\n            if (newNorthWest.isEmpty()) {\n              newNorthWest = null;\n            }\n            return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                                   this._southWest, newNorthWest, this._southEast, this._northEast,\n                                   this._views, this._size - 1);\n          } else {\n            return this;\n          }\n        } else if (inSouth && inEast) {\n          const oldSouthEast = this._southEast;\n          if (oldSouthEast !== null) {\n            let newSouthEast: MapTile | null = oldSouthEast.removed(view, bounds);\n            if (newSouthEast.isEmpty()) {\n              newSouthEast = null;\n            }\n            return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                                   this._southWest, this._northWest, newSouthEast, this._northEast,\n                                   this._views, this._size - 1);\n          } else {\n            return this;\n          }\n        } else if (inNorth && inEast) {\n          const oldNorthEast = this._northEast;\n          if (oldNorthEast !== null) {\n            let newNorthEast: MapTile | null = oldNorthEast.removed(view, bounds);\n            if (newNorthEast.isEmpty()) {\n              newNorthEast = null;\n            }\n            return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                                   this._southWest, this._northWest, this._southEast, newNorthEast,\n                                   this._views, this._size - 1);\n          } else {\n            return this;\n          }\n        }\n      }\n    }\n    const oldViews = this._views;\n    const index = oldViews.indexOf(view);\n    if (index >= 0) {\n      const newViews = oldViews.slice(0);\n      newViews.splice(index, 1);\n      return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                             this._southWest, this._northWest, this._southEast, this._northEast,\n                             newViews, this._size - 1);\n    } else {\n      return this;\n    }\n  }\n\n  moved(view: MapView, newBounds: GeoBox, oldBounds: GeoBox): MapTile {\n    if (this._depth < this._maxDepth) {\n      const geoCenter = this._geoCenter;\n      const newInWest = newBounds.lngMin <= geoCenter.lng;\n      const newInSouth = newBounds.latMin <= geoCenter.lat;\n      const newInEast = newBounds.lngMax > geoCenter.lng;\n      const newInNorth = newBounds.latMax > geoCenter.lat;\n      const oldInWest = oldBounds.lngMin <= geoCenter.lng;\n      const oldInSouth = oldBounds.latMin <= geoCenter.lat;\n      const oldInEast = oldBounds.lngMax > geoCenter.lng;\n      const oldInNorth = oldBounds.latMax > geoCenter.lat;\n      if (newInWest === oldInWest && newInSouth === oldInSouth && newInEast === oldInEast && newInNorth === oldInNorth) {\n        // in same tile\n        if (newInWest !== newInEast && newInSouth !== newInNorth) {\n          if (newInSouth && newInWest) {\n            const oldSouthWest = this._southWest!;\n            const newSouthWest = oldSouthWest.moved(view, newBounds, oldBounds);\n            if (oldSouthWest !== newSouthWest) {\n              return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                                     newSouthWest, this._northWest, this._southEast, this._northEast,\n                                     this._views, this._size);\n            } else {\n              return this;\n            }\n          } else if (newInNorth && newInWest) {\n            const oldNorthWest = this._northWest!;\n            const newNorthWest = oldNorthWest.moved(view, newBounds, oldBounds);\n            if (oldNorthWest !== newNorthWest) {\n              return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                                     this._southWest, newNorthWest, this._southEast, this._northEast,\n                                     this._views, this._size);\n            } else {\n              return this;\n            }\n          } else if (newInSouth && newInEast) {\n            const oldSouthEast = this._southEast!;\n            const newSouthEast = oldSouthEast.moved(view, newBounds, oldBounds);\n            if (oldSouthEast !== newSouthEast) {\n              return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                                     this._southWest, this._northWest, newSouthEast, this._northEast,\n                                     this._views, this._size);\n            } else {\n              return this;\n            }\n          } else if (newInNorth && newInEast) {\n            const oldNorthEast = this._northEast!;\n            const newNorthEast = oldNorthEast.moved(view, newBounds, oldBounds);\n            if (oldNorthEast !== newNorthEast) {\n              return this.createTile(this._depth, this._maxDepth, this._geoFrame, void 0, this._geoCenter,\n                                     this._southWest, this._northWest, this._southEast, newNorthEast,\n                                     this._views, this._size);\n            } else {\n              return this;\n            }\n          }\n        }\n      } else {\n        // moved from one tile to another\n        return this.removed(view, oldBounds).inserted(view, newBounds);\n      }\n    }\n    return this;\n  }\n\n  forEach<T, S>(callback: (this: S, view: MapView) => T | void, thisArg: S): T | undefined {\n    if (this._southWest !== null) {\n      const result = this._southWest.forEach(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this._northWest !== null) {\n      const result = this._northWest.forEach(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this._southEast !== null) {\n      const result = this._southEast.forEach(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this._northEast !== null) {\n      const result = this._northEast.forEach(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    const views = this._views;\n    for (let i = 0; i < views.length; i += 1) {\n      const result = callback.call(thisArg, views[i]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  forEachIntersecting<T, S>(bounds: GeoBox, callback: (this: S, view: MapView) => T | void, thisArg: S): T | undefined {\n    if (this._geoFrame.intersects(bounds)) {\n      if (this._southWest !== null) {\n        const result = this._southWest.forEachIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      if (this._northWest !== null) {\n        const result = this._northWest.forEachIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      if (this._southEast !== null) {\n        const result = this._southEast.forEachIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      if (this._northEast !== null) {\n        const result = this._northEast.forEachIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      const views = this._views;\n      for (let i = 0; i < views.length; i += 1) {\n        const result = callback.call(thisArg, views[i]);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n    }\n    return void 0;\n  }\n\n  forEachNonIntersecting<T, S>(bounds: GeoBox, callback: (this: S, view: MapView) => T | void, thisArg: S): T | undefined {\n    if (!this._geoFrame.intersects(bounds)) {\n      if (this._southWest !== null) {\n        const result = this._southWest.forEachNonIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      if (this._northWest !== null) {\n        const result = this._northWest.forEachNonIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      if (this._southEast !== null) {\n        const result = this._southEast.forEachNonIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      if (this._northEast !== null) {\n        const result = this._northEast.forEachNonIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      const views = this._views;\n      for (let i = 0; i < views.length; i += 1) {\n        const result = callback.call(thisArg, views[i]);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n    }\n    return void 0;\n  }\n\n  protected createTile(depth: number, maxDepth: number, geoFrame: GeoBox,\n                       geoBounds?: GeoBox, geoCenter?: GeoPoint,\n                       southWest: MapTile | null = null, northWest: MapTile | null = null,\n                       southEast: MapTile | null = null, northEast: MapTile | null = null,\n                       views: ReadonlyArray<MapView> = [], size: number = 0): MapTile {\n    if (geoCenter === void 0) {\n      geoCenter = geoFrame.center;\n    }\n    if (geoBounds === void 0) {\n      if (southWest !== null) {\n        geoBounds = southWest._geoBounds;\n      }\n      if (northWest !== null) {\n        geoBounds = geoBounds !== void 0 ? geoBounds.union(northWest._geoBounds) : northWest._geoBounds;\n      }\n      if (southEast !== null) {\n        geoBounds = geoBounds !== void 0 ? geoBounds.union(southEast._geoBounds) : southEast._geoBounds;\n      }\n      if (northEast !== null) {\n        geoBounds = geoBounds !== void 0 ? geoBounds.union(northEast._geoBounds) : northEast._geoBounds;\n      }\n      for (let i = 0; i < views.length; i += 1) {\n        const view = views[i];\n        geoBounds = geoBounds !== void 0 ? geoBounds.union(view.geoBounds) : view.geoBounds;\n      }\n      if (geoBounds === void 0) {\n        geoBounds = geoFrame;\n      }\n    }\n    return new MapTile(depth, maxDepth, geoFrame, geoBounds, geoCenter,\n                       southWest, northWest, southEast, northEast, views, size);\n  }\n\n  static empty(geoFrame?: GeoBox, depth?: number, maxDepth?: number): MapTile {\n    if (geoFrame === void 0) {\n      geoFrame = GeoBox.globe();\n    }\n    if (depth === void 0) {\n      depth = 0;\n    }\n    if (maxDepth === void 0) {\n      maxDepth = 10;\n    }\n    maxDepth = Math.max(depth, maxDepth);\n    return new MapTile(depth, maxDepth, geoFrame, geoFrame, geoFrame.center, null, null, null, null, [], 0);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BoxR2} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {Transform} from \"@swim/transform\";\nimport {Animator} from \"@swim/animate\";\nimport {Renderer, CanvasContext, CanvasRenderer} from \"@swim/render\";\nimport {\n  ViewScope,\n  ViewEvent,\n  ViewMouseEvent,\n  ViewEventHandler,\n  ViewControllerType,\n  ViewFlags,\n  View,\n  ViewObserver,\n  LayoutAnchor,\n  LayoutView,\n  MemberAnimator,\n  AnimatedViewClass,\n  AnimatedView,\n  RenderedViewConstructor,\n  RenderedView,\n  CanvasView,\n} from \"@swim/view\";\nimport {GeoPoint} from \"../geo/GeoPoint\";\nimport {GeoBox} from \"../geo/GeoBox\";\nimport {GeoProjection} from \"../geo/GeoProjection\";\nimport {MapViewContext} from \"../MapViewContext\";\nimport {MapView} from \"../MapView\";\nimport {MapTile} from \"./MapTile\";\nimport {MapLayerViewObserver} from \"./MapLayerViewObserver\";\nimport {MapLayerViewController} from \"./MapLayerViewController\";\n\nexport class MapLayerView extends View implements MapView {\n  /** @hidden */\n  _key?: string;\n  /** @hidden */\n  _parentView: View | null;\n  /** @hidden */\n  _childViews: MapTile;\n  /** @hidden */\n  _childViewMap?: {[key: string]: MapView | undefined};\n  /** @hidden */\n  _viewController: ViewControllerType<this> | null;\n  /** @hidden */\n  _viewObservers?: ViewObserver[];\n  /** @hidden */\n  _viewFlags: ViewFlags;\n  /** @hidden */\n  _viewScopes?: {[scopeName: string]: ViewScope<View, unknown> | undefined};\n  /** @hidden */\n  _layoutAnchors?: {[anchorName: string]: LayoutAnchor<LayoutView> | undefined};\n  /** @hidden */\n  _memberAnimators?: {[animatorName: string]: Animator | undefined};\n  /** @hidden */\n  _viewFrame?: BoxR2;\n  /** @hidden */\n  _eventHandlers?: {[type: string]: ViewEventHandler[] | undefined};\n\n  constructor(geoFrame?: GeoBox, depth?: number, maxDepth?: number) {\n    super();\n    this._parentView = null;\n    this._childViews = MapTile.empty(geoFrame, depth, maxDepth);\n    this._viewController = null;\n    this._viewFlags = 0;\n  }\n\n  get viewController(): MapLayerViewController | null {\n    return this._viewController;\n  }\n\n  setViewController(newViewController: ViewControllerType<this> | null): void {\n    const oldViewController = this._viewController;\n    if (oldViewController !== newViewController) {\n      this.willSetViewController(newViewController);\n      if (oldViewController !== null) {\n        oldViewController.setView(null);\n      }\n      this._viewController = newViewController;\n      if (newViewController !== null) {\n        newViewController.setView(this);\n      }\n      this.onSetViewController(newViewController);\n      this.didSetViewController(newViewController);\n    }\n  }\n\n  get viewObservers(): ReadonlyArray<ViewObserver> {\n    let viewObservers = this._viewObservers;\n    if (viewObservers === void 0) {\n      viewObservers = [];\n      this._viewObservers = viewObservers;\n    }\n    return viewObservers;\n  }\n\n  addViewObserver(viewObserver: ViewObserver): void {\n    let viewObservers = this._viewObservers;\n    let index: number;\n    if (viewObservers === void 0) {\n      viewObservers = [];\n      this._viewObservers = viewObservers;\n      index = -1;\n    } else {\n      index = viewObservers.indexOf(viewObserver);\n    }\n    if (index < 0) {\n      this.willAddViewObserver(viewObserver);\n      viewObservers.push(viewObserver);\n      this.onAddViewObserver(viewObserver);\n      this.didAddViewObserver(viewObserver);\n    }\n  }\n\n  removeViewObserver(viewObserver: ViewObserver): void {\n    const viewObservers = this._viewObservers;\n    if (viewObservers !== void 0) {\n      const index = viewObservers.indexOf(viewObserver);\n      if (index >= 0) {\n        this.willRemoveViewObserver(viewObserver);\n        viewObservers.splice(index, 1);\n        this.onRemoveViewObserver(viewObserver);\n        this.didRemoveViewObserver(viewObserver);\n      }\n    }\n  }\n\n  get geoProjection(): GeoProjection | null {\n    const parentView = this.parentView;\n    return MapView.is(parentView) ? parentView.geoProjection : null;\n  }\n\n  get mapZoom(): number {\n    const parentView = this.parentView;\n    return MapView.is(parentView) ? parentView.mapZoom : 0;\n  }\n\n  get mapHeading(): number {\n    const parentView = this.parentView;\n    return MapView.is(parentView) ? parentView.mapHeading : 0;\n  }\n\n  get mapTilt(): number {\n    const parentView = this.parentView;\n    return MapView.is(parentView) ? parentView.mapTilt : 0;\n  }\n\n  get canvasView(): CanvasView | null {\n    const parentView = this._parentView;\n    return RenderedView.is(parentView) ? parentView.canvasView : null;\n  }\n\n  @MemberAnimator(Color)\n  tileOutlineColor: MemberAnimator<this, Color, AnyColor>;\n\n  get key(): string | null {\n    const key = this._key;\n    return key !== void 0 ? key : null;\n  }\n\n  /** @hidden */\n  setKey(key: string | null): void {\n    if (key !== null) {\n      this._key = key;\n    } else if (this._key !== void 0) {\n      this._key = void 0;\n    }\n  }\n\n  get parentView(): View | null {\n    return this._parentView;\n  }\n\n  /** @hidden */\n  setParentView(newParentView: View | null, oldParentView: View | null) {\n    this.willSetParentView(newParentView, oldParentView);\n    this._parentView = newParentView;\n    this.onSetParentView(newParentView, oldParentView);\n    this.didSetParentView(newParentView, oldParentView);\n  }\n\n  get childViews(): ReadonlyArray<View> {\n    const childViews: View[] = [];\n    this._childViews.forEach(function (childView: MapView): void {\n      childViews.push(childView);\n    }, this);\n    return childViews;\n  }\n\n  getChildView(key: string): View | null {\n    const childViewMap = this._childViewMap;\n    if (childViewMap !== void 0) {\n      const childView = childViewMap[key];\n      if (childView !== void 0) {\n        return childView;\n      }\n    }\n    return null;\n  }\n\n  setChildView(key: string, newChildView: View | null): View | null {\n    if (newChildView !== null) {\n      if (!MapView.is(newChildView)) {\n        throw new TypeError(\"\" + newChildView);\n      }\n      newChildView.remove();\n    }\n    let oldChildView: MapView | null = null;\n    if (this._childViewMap !== void 0) {\n      const childView = this._childViewMap[key];\n      if (childView !== void 0) {\n        oldChildView = childView;\n        const oldChildViewBounds = oldChildView.geoBounds;\n        this.willRemoveChildView(childView);\n        childView.setParentView(null, this);\n        this.removeChildViewMap(childView);\n        const oldGeoBounds = this._childViews._geoBounds;\n        this._childViews = this._childViews.removed(oldChildView, oldChildViewBounds);\n        const newGeoBounds = this._childViews._geoBounds;\n        if (!newGeoBounds.equals(oldGeoBounds)) {\n          this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n        }\n        this.onRemoveChildView(childView);\n        this.didRemoveChildView(childView);\n        childView.setKey(null);\n      }\n    }\n    if (newChildView !== null) {\n      const newChildViewBounds = newChildView.geoBounds;\n      newChildView.setKey(key);\n      const oldGeoBounds = this._childViews._geoBounds;\n      this._childViews = this._childViews.inserted(newChildView, newChildViewBounds);\n      const newGeoBounds = this._childViews._geoBounds;\n      if (!newGeoBounds.equals(oldGeoBounds)) {\n        this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n      }\n      this.insertChildViewMap(newChildView);\n      newChildView.setParentView(this, null);\n      this.onInsertChildView(newChildView, null);\n      this.didInsertChildView(newChildView, null);\n    }\n    return oldChildView;\n  }\n\n  /** @hidden */\n  protected insertChildViewMap(childView: MapView): void {\n    const key = childView.key;\n    if (key !== null) {\n      let childViewMap = this._childViewMap;\n      if (childViewMap === void 0) {\n        childViewMap = {};\n        this._childViewMap = childViewMap;\n      }\n      childViewMap[key] = childView;\n    }\n  }\n\n  /** @hidden */\n  protected removeChildViewMap(childView: MapView): void {\n    const childViewMap = this._childViewMap;\n    if (childViewMap !== void 0) {\n      const key = childView.key;\n      if (key !== null) {\n        delete childViewMap[key];\n      }\n    }\n  }\n\n  append<V extends RenderedView>(childView: V, key?: string): V;\n  append<C extends RenderedViewConstructor>(viewConstructor: C, key?: string): InstanceType<C>;\n  append(child: RenderedView | RenderedViewConstructor, key?: string): RenderedView {\n    if (typeof child === \"function\") {\n      child = RenderedView.create(child);\n    }\n    this.appendChildView(child, key);\n    return child;\n  }\n\n  appendChildView(childView: View, key?: string): void {\n    if (!MapView.is(childView)) {\n      throw new TypeError(\"\" + childView);\n    }\n    childView.remove();\n    if (key !== void 0) {\n      this.removeChildView(key);\n      childView.setKey(key);\n    }\n    const childViewBounds = childView.geoBounds;\n    this.willInsertChildView(childView, null);\n    const oldGeoBounds = this._childViews._geoBounds;\n    this._childViews = this._childViews.inserted(childView, childViewBounds);\n    const newGeoBounds = this._childViews._geoBounds;\n    if (!newGeoBounds.equals(oldGeoBounds)) {\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n    this.insertChildViewMap(childView);\n    childView.setParentView(this, null);\n    this.onInsertChildView(childView, null);\n    this.didInsertChildView(childView, null);\n  }\n\n  prepend<V extends RenderedView>(childView: V, key?: string): V;\n  prepend<C extends RenderedViewConstructor>(viewConstructor: C, key?: string): InstanceType<C>;\n  prepend(child: RenderedView | RenderedViewConstructor, key?: string): RenderedView {\n    if (typeof child === \"function\") {\n      child = RenderedView.create(child);\n    }\n    this.prependChildView(child, key);\n    return child;\n  }\n\n  prependChildView(childView: View, key?: string): void {\n    if (!MapView.is(childView)) {\n      throw new TypeError(\"\" + childView);\n    }\n    childView.remove();\n    if (key !== void 0) {\n      this.removeChildView(key);\n      childView.setKey(key);\n    }\n    const childViewBounds = childView.geoBounds;\n    this.willInsertChildView(childView, null);\n    const oldGeoBounds = this._childViews._geoBounds;\n    this._childViews = this._childViews.inserted(childView, childViewBounds);\n    const newGeoBounds = this._childViews._geoBounds;\n    if (!newGeoBounds.equals(oldGeoBounds)) {\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n    this.insertChildViewMap(childView);\n    childView.setParentView(this, null);\n    this.onInsertChildView(childView, null);\n    this.didInsertChildView(childView, null);\n  }\n\n  insert<V extends RenderedView>(childView: V, target: View | null, key?: string): V;\n  insert<C extends RenderedViewConstructor>(viewConstructor: C, target: View | null, key?: string): InstanceType<C>;\n  insert(child: RenderedView | RenderedViewConstructor, target: View | null, key?: string): RenderedView {\n    if (typeof child === \"function\") {\n      child = RenderedView.create(child);\n    }\n    this.insertChildView(child, target, key);\n    return child;\n  }\n\n  insertChildView(childView: View, targetView: View | null, key?: string): void {\n    if (!MapView.is(childView)) {\n      throw new TypeError(\"\" + childView);\n    }\n    if (targetView !== null && !RenderedView.is(childView)) {\n      throw new TypeError(\"\" + targetView);\n    }\n    if (targetView !== null && targetView.parentView !== this) {\n      throw new TypeError(\"\" + targetView);\n    }\n    childView.remove();\n    if (key !== void 0) {\n      this.removeChildView(key);\n      childView.setKey(key);\n    }\n    const childViewBounds = childView.geoBounds;\n    this.willInsertChildView(childView, targetView);\n    const oldGeoBounds = this._childViews._geoBounds;\n    this._childViews = this._childViews.inserted(childView, childViewBounds);\n    const newGeoBounds = this._childViews._geoBounds;\n    if (!newGeoBounds.equals(oldGeoBounds)) {\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n    this.insertChildViewMap(childView);\n    childView.setParentView(this, null);\n    this.onInsertChildView(childView, targetView);\n    this.didInsertChildView(childView, targetView);\n  }\n\n  removeChildView(key: string): View | null;\n  removeChildView(childView: View): void;\n  removeChildView(key: string | View): View | null | void {\n    let childView: View | null;\n    if (typeof key === \"string\") {\n      childView = this.getChildView(key);\n      if (childView === null) {\n        return null;\n      }\n    } else {\n      childView = key;\n    }\n    if (!MapView.is(childView)) {\n      throw new TypeError(\"\" + childView);\n    }\n    if (childView.parentView !== this) {\n      throw new Error(\"not a child view\");\n    }\n    const childViewBounds = childView.geoBounds;\n    this.willRemoveChildView(childView);\n    childView.setParentView(null, this);\n    this.removeChildViewMap(childView);\n    const oldGeoBounds = this._childViews._geoBounds;\n    this._childViews = this._childViews.removed(childView, childViewBounds);\n    const newGeoBounds = this._childViews._geoBounds;\n    if (!newGeoBounds.equals(oldGeoBounds)) {\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n    this.onRemoveChildView(childView);\n    this.didRemoveChildView(childView);\n    childView.setKey(null);\n    if (typeof key === \"string\") {\n      return childView;\n    }\n  }\n\n  removeAll(): void {\n    this._childViews.forEach(function (childView: MapView): void {\n      this.removeChildView(childView);\n    }, this);\n  }\n\n  remove(): void {\n    const parentView = this._parentView;\n    if (parentView !== null) {\n      if ((this._viewFlags & View.UpdatingMask) === 0) {\n        parentView.removeChildView(this);\n      } else {\n        this._viewFlags |= View.RemovingFlag;\n      }\n    }\n  }\n\n  /** @hidden */\n  get viewFlags(): ViewFlags {\n    return this._viewFlags;\n  }\n\n  /** @hidden */\n  setViewFlags(viewFlags: ViewFlags): void {\n    this._viewFlags = viewFlags;\n  }\n\n  cascadeMount(): void {\n    if ((this._viewFlags & View.MountedFlag) === 0) {\n      this._viewFlags |= View.MountedFlag;\n      this.willMount();\n      this.onMount();\n      this.doMountChildViews();\n      this.didMount();\n    } else {\n      throw new Error(\"already mounted\");\n    }\n  }\n\n  /** @hidden */\n  doMountChildViews(): void {\n    this._childViews.forEach(function (childView: MapView): void {\n      childView.cascadeMount();\n    }, this);\n  }\n\n  cascadeUnmount(): void {\n    if ((this._viewFlags & View.MountedFlag) !== 0) {\n      this._viewFlags &= ~View.MountedFlag\n      this.willUnmount();\n      this.doUnmountChildViews();\n      this.onUnmount();\n      this.didUnmount();\n    } else {\n      throw new Error(\"already unmounted\");\n    }\n  }\n\n  /** @hidden */\n  doUnmountChildViews(): void {\n    this._childViews.forEach(function (childView: MapView): void {\n      childView.cascadeUnmount();\n    }, this);\n  }\n\n  protected onMount(): void {\n    super.onMount();\n    this.requireUpdate(View.NeedsProject);\n  }\n\n  protected onUnmount(): void {\n    this.cancelAnimators();\n    this._viewFlags = 0;\n  }\n\n  cascadePower(): void {\n    if ((this._viewFlags & View.PoweredFlag) === 0) {\n      this._viewFlags |= View.PoweredFlag;\n      this.willPower();\n      this.onPower();\n      this.doPowerChildViews();\n      this.didPower();\n    } else {\n      throw new Error(\"already powered\");\n    }\n  }\n\n  /** @hidden */\n  doPowerChildViews(): void {\n    this._childViews.forEach(function (childView: MapView): void {\n      childView.cascadePower();\n    }, this);\n  }\n\n  cascadeUnpower(): void {\n    if ((this._viewFlags & View.PoweredFlag) !== 0) {\n      this._viewFlags &= ~View.PoweredFlag\n      this.willUnpower();\n      this.doUnpowerChildViews();\n      this.onUnpower();\n      this.didUnpower();\n    } else {\n      throw new Error(\"already unpowered\");\n    }\n  }\n\n  /** @hidden */\n  doUnpowerChildViews(): void {\n    this._childViews.forEach(function (childView: MapView): void {\n      childView.cascadeUnpower();\n    }, this);\n  }\n\n  get renderer(): Renderer | null {\n    const parentView = this._parentView;\n    return RenderedView.is(parentView) ? parentView.renderer : null;\n  }\n\n  protected modifyUpdate(updateFlags: ViewFlags): ViewFlags {\n    let additionalFlags = 0;\n    if ((updateFlags & View.NeedsProject) !== 0) {\n      additionalFlags |= View.NeedsLayout;\n    }\n    additionalFlags |= super.modifyUpdate(updateFlags | additionalFlags);\n    return additionalFlags;\n  }\n\n  needsProcess(processFlags: ViewFlags, viewContext: MapViewContext): ViewFlags {\n    if ((this._viewFlags & View.NeedsAnimate) === 0) {\n      processFlags &= ~View.NeedsAnimate;\n    }\n    return processFlags;\n  }\n\n  cascadeProcess(processFlags: ViewFlags, viewContext: MapViewContext): void {\n    processFlags = this._viewFlags | processFlags;\n    processFlags = this.needsProcess(processFlags, viewContext);\n    this.doProcess(processFlags, viewContext);\n  }\n\n  /** @hidden */\n  protected doProcess(processFlags: ViewFlags, viewContext: MapViewContext): void {\n    let cascadeFlags = processFlags;\n    this._viewFlags &= ~(View.NeedsProcess | View.NeedsResize | View.NeedsProject);\n    this.willProcess(viewContext);\n    this._viewFlags |= View.ProcessingFlag;\n    try {\n      if (((this._viewFlags | processFlags) & View.NeedsScroll) !== 0) {\n        cascadeFlags |= View.NeedsScroll;\n        this._viewFlags &= ~View.NeedsScroll;\n        this.willScroll(viewContext);\n      }\n      if (((this._viewFlags | processFlags) & View.NeedsDerive) !== 0) {\n        cascadeFlags |= View.NeedsDerive;\n        this._viewFlags &= ~View.NeedsDerive;\n        this.willDerive(viewContext);\n      }\n      if (((this._viewFlags | processFlags) & View.NeedsAnimate) !== 0) {\n        cascadeFlags |= View.NeedsAnimate;\n        this._viewFlags &= ~View.NeedsAnimate;\n        this.willAnimate(viewContext);\n      }\n      if (((this._viewFlags | processFlags) & View.NeedsProject) !== 0) {\n        cascadeFlags |= View.NeedsProject;\n        this._viewFlags &= ~View.NeedsProject;\n        this.willProject(viewContext);\n      }\n\n      this.onProcess(viewContext);\n      if ((cascadeFlags & View.NeedsScroll) !== 0) {\n        this.onScroll(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsDerive) !== 0) {\n        this.onDerive(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsAnimate) !== 0) {\n        this.onAnimate(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsProject) !== 0) {\n        this.onProject(viewContext);\n      }\n\n      this.doProcessChildViews(cascadeFlags, viewContext);\n\n      if ((cascadeFlags & View.NeedsProject) !== 0) {\n        this.didProject(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsAnimate) !== 0) {\n        this.didAnimate(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsDerive) !== 0) {\n        this.didDerive(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsScroll) !== 0) {\n        this.didScroll(viewContext);\n      }\n    } finally {\n      this._viewFlags &= ~View.ProcessingFlag;\n      this.didProcess(viewContext);\n    }\n  }\n\n  protected willAnimate(viewContext: MapViewContext): void {\n    this.willObserve(function (viewObserver: MapLayerViewObserver): void {\n      if (viewObserver.viewWillAnimate !== void 0) {\n        viewObserver.viewWillAnimate(viewContext, this);\n      }\n    });\n  }\n\n  protected onAnimate(viewContext: MapViewContext): void {\n    this.animateMembers(viewContext.updateTime);\n  }\n\n  protected didAnimate(viewContext: MapViewContext): void {\n    this.didObserve(function (viewObserver: MapLayerViewObserver): void {\n      if (viewObserver.viewDidAnimate !== void 0) {\n        viewObserver.viewDidAnimate(viewContext, this);\n      }\n    });\n  }\n\n  protected willProject(viewContext: MapViewContext): void {\n    this.willObserve(function (viewObserver: MapLayerViewObserver): void {\n      if (viewObserver.viewWillProject !== void 0) {\n        viewObserver.viewWillProject(viewContext, this);\n      }\n    });\n  }\n\n  protected onProject(viewContext: MapViewContext): void {\n    // hook\n  }\n\n  protected didProject(viewContext: MapViewContext): void {\n    this.didObserve(function (viewObserver: MapLayerViewObserver): void {\n      if (viewObserver.viewDidProject !== void 0) {\n        viewObserver.viewDidProject(viewContext, this);\n      }\n    });\n  }\n\n  /** @hidden */\n  protected doProcessChildViews(processFlags: ViewFlags, viewContext: MapViewContext): void {\n    if ((processFlags & View.ProcessMask) !== 0 && !this._childViews.isEmpty()) {\n      this.willProcessChildViews(viewContext);\n      this.doProcessTile(this._childViews, processFlags, viewContext);\n      this.didProcessChildViews(viewContext);\n    }\n  }\n\n  /** @hidden */\n  protected doProcessTile(tile: MapTile, processFlags: ViewFlags, viewContext: MapViewContext): void {\n    if (tile._southWest !== null && tile._southWest._geoFrame.intersects(viewContext.geoFrame)) {\n      this.doProcessTile(tile._southWest, processFlags, viewContext);\n    }\n    if (tile._northWest !== null && tile._northWest._geoFrame.intersects(viewContext.geoFrame)) {\n      this.doProcessTile(tile._northWest, processFlags, viewContext);\n    }\n    if (tile._southEast !== null && tile._southEast._geoFrame.intersects(viewContext.geoFrame)) {\n      this.doProcessTile(tile._southEast, processFlags, viewContext);\n    }\n    if (tile._northEast !== null && tile._northEast._geoFrame.intersects(viewContext.geoFrame)) {\n      this.doProcessTile(tile._northEast, processFlags, viewContext);\n    }\n    const childViews = tile._views;\n    for (let i = 0; i < childViews.length; i += 1) {\n      const childView = childViews[i];\n      const childViewContext = this.childViewContext(childView, viewContext);\n      this.doProcessChildView(childView, processFlags, childViewContext);\n      if ((childView.viewFlags & View.RemovingFlag) !== 0) {\n        childView.setViewFlags(childView.viewFlags & ~View.RemovingFlag);\n        this.removeChildView(childView);\n      }\n    }\n  }\n\n  cascadeDisplay(displayFlags: ViewFlags, viewContext: MapViewContext): void {\n    displayFlags = this._viewFlags | displayFlags;\n    displayFlags = this.needsDisplay(displayFlags, viewContext);\n    this.doDisplay(displayFlags, viewContext);\n  }\n\n  /** @hidden */\n  protected doDisplay(displayFlags: ViewFlags, viewContext: MapViewContext): void {\n    let cascadeFlags = displayFlags;\n    this._viewFlags &= ~(View.NeedsDisplay | View.NeedsComposite);\n    this.willDisplay(viewContext);\n    this._viewFlags |= View.DisplayingFlag;\n    try {\n      if (((this._viewFlags | displayFlags) & View.NeedsLayout) !== 0) {\n        cascadeFlags |= View.NeedsLayout;\n        this._viewFlags &= ~View.NeedsLayout;\n        this.willLayout(viewContext);\n      }\n      if (((this._viewFlags | displayFlags) & View.NeedsRender) !== 0) {\n        cascadeFlags |= View.NeedsRender;\n        this._viewFlags &= ~View.NeedsRender;\n        this.willRender(viewContext);\n      }\n\n      this.onDisplay(viewContext);\n      if ((cascadeFlags & View.NeedsLayout) !== 0) {\n        this.onLayout(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsRender) !== 0) {\n        this.onRender(viewContext);\n      }\n\n      this.doDisplayChildViews(cascadeFlags, viewContext);\n\n      if ((cascadeFlags & View.NeedsRender) !== 0) {\n        this.didRender(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsLayout) !== 0) {\n        this.didLayout(viewContext);\n      }\n    } finally {\n      this._viewFlags &= ~View.DisplayingFlag;\n      this.didDisplay(viewContext);\n    }\n  }\n\n  protected willRender(viewContext: MapViewContext): void {\n    this.willObserve(function (viewObserver: MapLayerViewObserver): void {\n      if (viewObserver.viewWillRender !== void 0) {\n        viewObserver.viewWillRender(viewContext, this);\n      }\n    });\n  }\n\n  protected onRender(viewContext: MapViewContext): void {\n    const outlineColor = this.getMemberAnimator(\"tileOutlineColor\") as MemberAnimator<this, Color, AnyColor> | null;\n    if (outlineColor !== null && outlineColor.value !== void 0) {\n      this.renderTiles(viewContext, outlineColor.value);\n    }\n  }\n\n  protected renderTiles(viewContext: MapViewContext, outlineColor: Color): void {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.isHidden() && !this.isCulled()) {\n      const context = renderer.context;\n      context.save();\n      this.renderTile(this._childViews, context, viewContext.geoProjection, outlineColor);\n      context.restore();\n    }\n  }\n\n  protected renderTile(tile: MapTile, context: CanvasContext,\n                       geoProjection: GeoProjection, outlineColor: Color): void {\n    if (tile._southWest !== null) {\n      this.renderTile(tile._southWest, context, geoProjection, outlineColor);\n    }\n    if (tile._northWest !== null) {\n      this.renderTile(tile._northWest, context, geoProjection, outlineColor);\n    }\n    if (tile._southEast !== null) {\n      this.renderTile(tile._southEast, context, geoProjection, outlineColor);\n    }\n    if (tile._northEast !== null) {\n      this.renderTile(tile._northEast, context, geoProjection, outlineColor);\n    }\n    const minDepth = 2;\n    if (tile.depth >= minDepth) {\n      const southWest = geoProjection.project(tile._geoFrame.southWest);\n      const northWest = geoProjection.project(tile._geoFrame.northWest);\n      const northEast = geoProjection.project(tile._geoFrame.northEast);\n      const southEast = geoProjection.project(tile._geoFrame.southEast);\n      context.beginPath();\n      context.moveTo(southWest._x, southWest._y);\n      context.lineTo(northWest._x, northWest._y);\n      context.lineTo(northEast._x, northEast._y);\n      context.lineTo(southEast._x, southEast._y);\n      context.closePath();\n      const u = (tile._depth - minDepth) / (tile._maxDepth - minDepth)\n      context.lineWidth = 4 * (1 - u) + 0.5 * u;\n      context.strokeStyle = outlineColor.toString();\n      context.stroke();\n    }\n  }\n\n  protected didRender(viewContext: MapViewContext): void {\n    this.didObserve(function (viewObserver: MapLayerViewObserver): void {\n      if (viewObserver.viewDidRender !== void 0) {\n        viewObserver.viewDidRender(viewContext, this);\n      }\n    });\n  }\n\n  /** @hidden */\n  protected doDisplayChildViews(displayFlags: ViewFlags, viewContext: MapViewContext): void {\n    if ((displayFlags & View.DisplayMask) !== 0 && !this._childViews.isEmpty() && !this.isHidden() && !this.isCulled()) {\n      this.willDisplayChildViews(viewContext);\n      this.doDisplayTile(this._childViews, displayFlags, viewContext);\n      this.didDisplayChildViews(viewContext);\n    }\n  }\n\n  /** @hidden */\n  protected doDisplayTile(tile: MapTile, displayFlags: ViewFlags, viewContext: MapViewContext): void {\n    if (tile._southWest !== null && tile._southWest._geoFrame.intersects(viewContext.geoFrame)) {\n      this.doDisplayTile(tile._southWest, displayFlags, viewContext);\n    }\n    if (tile._northWest !== null && tile._northWest._geoFrame.intersects(viewContext.geoFrame)) {\n      this.doDisplayTile(tile._northWest, displayFlags, viewContext);\n    }\n    if (tile._southEast !== null && tile._southEast._geoFrame.intersects(viewContext.geoFrame)) {\n      this.doDisplayTile(tile._southEast, displayFlags, viewContext);\n    }\n    if (tile._northEast !== null && tile._northEast._geoFrame.intersects(viewContext.geoFrame)) {\n      this.doDisplayTile(tile._northEast, displayFlags, viewContext);\n    }\n    const childViews = tile._views;\n    for (let i = 0; i < childViews.length; i += 1) {\n      const childView = childViews[i];\n      const childViewContext = this.childViewContext(childView, viewContext);\n      this.doDisplayChildView(childView, displayFlags, childViewContext);\n      if ((childView.viewFlags & View.RemovingFlag) !== 0) {\n        childView.setViewFlags(childView.viewFlags & ~View.RemovingFlag);\n        this.removeChildView(childView);\n      }\n    }\n  }\n\n  childViewContext(childView: View, viewContext: MapViewContext): MapViewContext {\n    return viewContext;\n  }\n\n  protected didSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    const parentView = this._parentView;\n    if (MapView.is(parentView)) {\n      parentView.childViewDidSetGeoBounds(this, newGeoBounds, oldGeoBounds);\n    }\n  }\n\n  childViewDidSetGeoBounds(childView: MapView, newChildViewGeoBounds: GeoBox, oldChildViewGeoBounds: GeoBox): void {\n    const oldGeoBounds = this._childViews._geoBounds;\n    this._childViews = this._childViews.moved(childView, newChildViewGeoBounds, oldChildViewGeoBounds);\n    const newGeoBounds = this._childViews._geoBounds;\n    if (!newGeoBounds.equals(oldGeoBounds)) {\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n  }\n\n  hasViewScope(scopeName: string): boolean {\n    const viewScopes = this._viewScopes;\n    return viewScopes !== void 0 && viewScopes[scopeName] !== void 0;\n  }\n\n  getViewScope(scopeName: string): ViewScope<View, unknown> | null {\n    const viewScopes = this._viewScopes;\n    return viewScopes !== void 0 ? viewScopes[scopeName] || null : null;\n  }\n\n  setViewScope(scopeName: string, viewScope: ViewScope<View, unknown> | null): void {\n    let viewScopes = this._viewScopes;\n    if (viewScopes === void 0) {\n      viewScopes = {};\n      this._viewScopes = viewScopes;\n    }\n    if (viewScope !== null) {\n      viewScopes[scopeName] = viewScope;\n    } else {\n      delete viewScopes[scopeName];\n    }\n  }\n\n  hasLayoutAnchor(anchorName: string): boolean {\n    const layoutAnchors = this._layoutAnchors;\n    return layoutAnchors !== void 0 && layoutAnchors[anchorName] !== void 0;\n  }\n\n  getLayoutAnchor(anchorName: string): LayoutAnchor<LayoutView> | null {\n    const layoutAnchors = this._layoutAnchors;\n    return layoutAnchors !== void 0 ? layoutAnchors[anchorName] || null : null;\n  }\n\n  setLayoutAnchor(anchorName: string, layoutAnchor: LayoutAnchor<LayoutView> | null): void {\n    let layoutAnchors = this._layoutAnchors;\n    if (layoutAnchors === void 0) {\n      layoutAnchors = {};\n      this._layoutAnchors = layoutAnchors;\n    }\n    if (layoutAnchor !== null) {\n      layoutAnchors[anchorName] = layoutAnchor;\n    } else {\n      delete layoutAnchors[anchorName];\n    }\n  }\n\n  hasMemberAnimator(animatorName: string): boolean {\n    const memberAnimators = this._memberAnimators;\n    return memberAnimators !== void 0 && memberAnimators[animatorName] !== void 0;\n  }\n\n  getMemberAnimator(animatorName: string): Animator | null {\n    const memberAnimators = this._memberAnimators;\n    return memberAnimators !== void 0 ? memberAnimators[animatorName] || null : null;\n  }\n\n  setMemberAnimator(animatorName: string, animator: Animator | null): void {\n    let memberAnimators = this._memberAnimators;\n    if (memberAnimators === void 0) {\n      memberAnimators = {};\n      this._memberAnimators = memberAnimators;\n    }\n    if (animator !== null) {\n      memberAnimators[animatorName] = animator;\n    } else {\n      delete memberAnimators[animatorName];\n    }\n  }\n\n  /** @hidden */\n  getLazyMemberAnimator(animatorName: string): Animator | null {\n    let memberAnimator = this.getMemberAnimator(animatorName);\n    if (memberAnimator === null) {\n      const viewClass = (this as any).__proto__ as AnimatedViewClass;\n      const descriptor = AnimatedView.getMemberAnimatorDescriptor(animatorName, viewClass);\n      if (descriptor !== null && descriptor.animatorType !== void 0) {\n        memberAnimator = AnimatedView.initMemberAnimator(descriptor.animatorType, this, animatorName, descriptor);\n        this.setMemberAnimator(animatorName, memberAnimator);\n      }\n    }\n    return memberAnimator;\n  }\n\n  /** @hidden */\n  animatorDidSetAuto(animator: Animator, auto: boolean): void {\n    if (animator instanceof MemberAnimator) {\n      this.requireUpdate(View.NeedsDerive);\n    }\n  }\n\n  /** @hidden */\n  animateMembers(t: number): void {\n    const memberAnimators = this._memberAnimators;\n    if (memberAnimators !== void 0) {\n      for (const animatorName in memberAnimators) {\n        const animator = memberAnimators[animatorName]!;\n        animator.onFrame(t);\n      }\n    }\n  }\n\n  animate(animator: Animator): void {\n    this.requireUpdate(View.NeedsAnimate);\n  }\n\n  /** @hidden */\n  cancelAnimators(): void {\n    this.cancelMemberAnimators();\n  }\n\n  /** @hidden */\n  cancelMemberAnimators(): void {\n    const memberAnimators = this._memberAnimators;\n    if (memberAnimators !== void 0) {\n      for (const animatorName in memberAnimators) {\n        const animator = memberAnimators[animatorName]!;\n        animator.cancel();\n      }\n    }\n  }\n\n  isHidden(): boolean {\n    if ((this._viewFlags & View.HiddenFlag) !== 0) {\n      return true;\n    } else {\n      const parentView = this._parentView;\n      return RenderedView.is(parentView) ? parentView.isHidden() : false;\n    }\n  }\n\n  setHidden(newHidden: boolean): void {\n    const oldHidden = (this._viewFlags & View.HiddenFlag) !== 0;\n    if (oldHidden !== newHidden) {\n      this.willSetHidden(newHidden);\n      if (newHidden) {\n        this._viewFlags |= View.HiddenFlag;\n      } else {\n        this._viewFlags &= ~View.HiddenFlag;\n      }\n      this.onSetHidden(newHidden);\n      this.didSetHidden(newHidden);\n    }\n  }\n\n  protected willSetHidden(hidden: boolean): void {\n    this.willObserve(function (viewObserver: MapLayerViewObserver): void {\n      if (viewObserver.viewWillSetHidden !== void 0) {\n        viewObserver.viewWillSetHidden(hidden, this);\n      }\n    });\n  }\n\n  protected onSetHidden(hidden: boolean): void {\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected didSetHidden(hidden: boolean): void {\n    this.didObserve(function (viewObserver: MapLayerViewObserver): void {\n      if (viewObserver.viewDidSetHidden !== void 0) {\n        viewObserver.viewDidSetHidden(hidden, this);\n      }\n    });\n  }\n\n  isCulled(): boolean {\n    if ((this._viewFlags & View.CulledFlag) !== 0) {\n      return true;\n    } else {\n      const parentView = this._parentView;\n      return RenderedView.is(parentView) ? parentView.isCulled() : false;\n    }\n  }\n\n  setCulled(newCulled: boolean): void {\n    const oldCulled = (this._viewFlags & View.CulledFlag) !== 0;\n    if (oldCulled !== newCulled) {\n      this.willSetCulled(newCulled);\n      if (newCulled) {\n        this._viewFlags |= View.CulledFlag;\n      } else {\n        this._viewFlags &= ~View.CulledFlag;\n      }\n      this.onSetCulled(newCulled);\n      this.didSetCulled(newCulled);\n    }\n  }\n\n  protected willSetCulled(culled: boolean): void {\n    this.willObserve(function (viewObserver: MapLayerViewObserver): void {\n      if (viewObserver.viewWillSetCulled !== void 0) {\n        viewObserver.viewWillSetCulled(culled, this);\n      }\n    });\n  }\n\n  protected onSetCulled(culled: boolean): void {\n    if (!culled) {\n      this.requireUpdate(View.NeedsLayout);\n    }\n  }\n\n  protected didSetCulled(culled: boolean): void {\n    this.didObserve(function (viewObserver: MapLayerViewObserver): void {\n      if (viewObserver.viewDidSetCulled !== void 0) {\n        viewObserver.viewDidSetCulled(culled, this);\n      }\n    });\n  }\n\n  cullViewFrame(viewFrame: BoxR2 = this.viewFrame): void {\n    this.setCulled(!viewFrame.intersects(this.viewBounds));\n  }\n\n  get viewFrame(): BoxR2 {\n    let viewFrame = this._viewFrame;\n    if (viewFrame === void 0) {\n      const parentView = this._parentView;\n      viewFrame = RenderedView.is(parentView) ? parentView.viewFrame : BoxR2.empty();\n    }\n    return viewFrame;\n  }\n\n  setViewFrame(viewFrame: BoxR2 | null): void {\n    if (viewFrame !== null) {\n      this._viewFrame = viewFrame;\n    } else if (this._viewFrame !== void 0) {\n      this._viewFrame = void 0;\n    }\n  }\n\n  get viewBounds(): BoxR2 {\n    return this.viewFrame;\n  }\n\n  cullGeoFrame(geoFrame: GeoBox = this.geoFrame): void {\n    this.setCulled(!geoFrame.intersects(this.geoBounds));\n  }\n\n  get geoFrame(): GeoBox {\n    const parentView = this.parentView;\n    return MapView.is(parentView) ? parentView.geoFrame : GeoBox.globe();\n  }\n\n  get geoBounds(): GeoBox {\n    return this._childViews._geoBounds;\n  }\n\n  get hitBounds(): BoxR2 {\n    return this.viewBounds;\n  }\n\n  hitTest(x: number, y: number, viewContext: MapViewContext): RenderedView | null {\n    const geoPoint = viewContext.geoProjection.unproject(x, y);\n    return this.hitTestTile(this._childViews, x, y, geoPoint, viewContext);\n  }\n\n  protected hitTestTile(tile: MapTile, x: number, y: number, geoPoint: GeoPoint,\n                        viewContext: MapViewContext): RenderedView | null {\n    let hit: RenderedView | null = null;\n    if (tile._southWest !== null && tile._southWest._geoFrame.contains(geoPoint)) {\n      hit = this.hitTestTile(tile._southWest, x, y, geoPoint, viewContext);\n    }\n    if (hit === null && tile._northWest !== null && tile._northWest._geoFrame.contains(geoPoint)) {\n      hit = this.hitTestTile(tile._northWest, x, y, geoPoint, viewContext);\n    }\n    if (hit === null && tile._southEast !== null && tile._southEast._geoFrame.contains(geoPoint)) {\n      hit = this.hitTestTile(tile._southEast, x, y, geoPoint, viewContext);\n    }\n    if (hit === null && tile._northEast !== null && tile._northEast._geoFrame.contains(geoPoint)) {\n      hit = this.hitTestTile(tile._northEast, x, y, geoPoint, viewContext);\n    }\n    if (hit === null) {\n      const childViews = tile._views;\n      for (let i = 0; i < childViews.length; i += 1) {\n        const childView = childViews[i];\n        if (childView.hitBounds.contains(x, y)) {\n          hit = childView.hitTest(x, y, viewContext);\n          if (hit !== null) {\n            break;\n          }\n        }\n      }\n    }\n    return hit;\n  }\n\n  get parentTransform(): Transform {\n    return Transform.identity();\n  }\n\n  get clientBounds(): BoxR2 {\n    const inverseClientTransform = this.clientTransform.inverse();\n    return this.viewBounds.transform(inverseClientTransform);\n  }\n\n  get popoverFrame(): BoxR2 {\n    const inversePageTransform = this.pageTransform.inverse();\n    return this.viewBounds.transform(inversePageTransform);\n  }\n\n  on(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): this {\n    let eventHandlers = this._eventHandlers;\n    if (eventHandlers === void 0) {\n      eventHandlers = {};\n      this._eventHandlers = eventHandlers;\n    }\n    let handlers = eventHandlers[type];\n    const capture = typeof options === \"boolean\" ? options : typeof options === \"object\" && options !== null && options.capture || false;\n    const passive = options && typeof options === \"object\" && options.passive || false;\n    const once = options && typeof options === \"object\" && options.once || false;\n    let handler: ViewEventHandler | undefined;\n    if (handlers === void 0) {\n      handler = {listener, capture, passive, once};\n      handlers = [handler];\n      eventHandlers[type] = handlers;\n    } else {\n      const n = handlers.length;\n      let i = 0;\n      while (i < n) {\n        handler = handlers[i];\n        if (handler.listener === listener && handler.capture === capture) {\n          break;\n        }\n        i += 1;\n      }\n      if (i < n) {\n        handler!.passive = passive;\n        handler!.once = once;\n      } else {\n        handler = {listener, capture, passive, once};\n        handlers.push(handler);\n      }\n    }\n    return this;\n  }\n\n  off(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): this {\n    const eventHandlers = this._eventHandlers;\n    if (eventHandlers !== void 0) {\n      const handlers = eventHandlers[type];\n      if (handlers !== void 0) {\n        const capture = typeof options === \"boolean\" ? options : typeof options === \"object\" && options !== null && options.capture || false;\n        const n = handlers.length;\n        let i = 0;\n        while (i < n) {\n          const handler = handlers[i];\n          if (handler.listener === listener && handler.capture === capture) {\n            handlers.splice(i, 1);\n            if (handlers.length === 0) {\n              delete eventHandlers[type];\n            }\n            break;\n          }\n          i += 1;\n        }\n      }\n    }\n    return this;\n  }\n\n  /** @hidden */\n  handleEvent(event: ViewEvent): void {\n    const type = event.type;\n    const eventHandlers = this._eventHandlers;\n    if (eventHandlers !== void 0) {\n      const handlers = eventHandlers[type];\n      if (handlers !== void 0) {\n        let i = 0;\n        while (i < handlers.length) {\n          const handler = handlers[i];\n          if (!handler.capture) {\n            const listener = handler.listener;\n            if (typeof listener === \"function\") {\n              listener(event);\n            } else if (typeof listener === \"object\" && listener !== null) {\n              listener.handleEvent(event);\n            }\n            if (handler.once) {\n              handlers.splice(i, 1);\n              continue;\n            }\n          }\n          i += 1;\n        }\n        if (handlers.length === 0) {\n          delete eventHandlers[type];\n        }\n      }\n    }\n    if (type === \"mouseover\") {\n      this.onMouseOver(event as MouseEvent);\n    } else if (type === \"mouseout\") {\n      this.onMouseOut(event as MouseEvent);\n    }\n  }\n\n  /** @hidden */\n  bubbleEvent(event: ViewEvent): View | null {\n    this.handleEvent(event);\n    if (event.bubbles && !event.cancelBubble) {\n      const parentView = this._parentView;\n      if (RenderedView.is(parentView)) {\n        return parentView.bubbleEvent(event);\n      } else {\n        return parentView;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  dispatchEvent(event: ViewEvent): boolean {\n    event.targetView = this;\n    const next = this.bubbleEvent(event);\n    if (next !== null) {\n      return next.dispatchEvent(event);\n    } else {\n      return !event.cancelBubble;\n    }\n  }\n\n  isHovering(): boolean {\n    return (this._viewFlags & View.HoveringFlag) !== 0;\n  }\n\n  /** @hidden */\n  protected onMouseOver(event: ViewMouseEvent): void {\n    if ((this._viewFlags & View.HoveringFlag) === 0) {\n      this._viewFlags |= View.HoveringFlag;\n      const eventHandlers = this._eventHandlers;\n      if (eventHandlers !== void 0 && eventHandlers.mouseenter !== void 0) {\n        const enterEvent = new MouseEvent(\"mouseenter\", {\n          clientX: event.clientX,\n          clientY: event.clientY,\n          screenX: event.screenX,\n          screenY: event.screenY,\n          bubbles: false,\n        }) as ViewMouseEvent;\n        enterEvent.targetView = this;\n        enterEvent.relatedTargetView = event.relatedTargetView;\n        this.handleEvent(enterEvent);\n      }\n    }\n  }\n\n  /** @hidden */\n  protected onMouseOut(event: ViewMouseEvent): void {\n    if ((this._viewFlags & View.HoveringFlag) !== 0) {\n      this._viewFlags &= ~View.HoveringFlag;\n      const eventHandlers = this._eventHandlers;\n      if (eventHandlers !== void 0 && eventHandlers.mouseleave !== void 0) {\n        const leaveEvent = new MouseEvent(\"mouseleave\", {\n          clientX: event.clientX,\n          clientY: event.clientY,\n          screenX: event.screenX,\n          screenY: event.screenY,\n          bubbles: false,\n        }) as ViewMouseEvent;\n        leaveEvent.targetView = this;\n        leaveEvent.relatedTargetView = event.relatedTargetView;\n        this.handleEvent(leaveEvent);\n      }\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ViewFlags, RenderedViewInit, RenderedView} from \"@swim/view\";\nimport {GeoBox} from \"./geo/GeoBox\";\nimport {GeoProjection} from \"./geo/GeoProjection\";\nimport {MapViewContext} from \"./MapViewContext\";\nimport {MapViewController} from \"./MapViewController\";\nimport {MapGraphicsView} from \"./graphics/MapGraphicsView\";\nimport {MapLayerView} from \"./layer/MapLayerView\";\n\nexport interface MapViewInit extends RenderedViewInit {\n}\n\nexport interface MapView extends RenderedView {\n  readonly viewController: MapViewController | null;\n\n  readonly geoProjection: GeoProjection | null;\n\n  readonly mapZoom: number;\n\n  readonly mapHeading: number;\n\n  readonly mapTilt: number;\n\n  /**\n   * The map-specified geographic bounding box in which this view should layout\n   * and render geometry.\n   */\n  readonly geoFrame: GeoBox;\n\n  /**\n   * The self-defined geographic bounding box surrounding all geometry this\n   * view could possibly render.  Views with geo bounds that don't overlap\n   * their map frames may be culled from rendering and hit testing.\n   */\n  readonly geoBounds: GeoBox;\n\n  needsProcess(processFlags: ViewFlags, viewContext: MapViewContext): ViewFlags;\n\n  needsDisplay(displayFlags: ViewFlags, viewContext: MapViewContext): ViewFlags;\n\n  childViewDidSetGeoBounds(childView: MapView, newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void;\n}\n\n/** @hidden */\nexport const MapView = {\n  is(object: unknown): object is MapView {\n    if (typeof object === \"object\" && object !== null) {\n      const view = object as MapView;\n      return view instanceof MapGraphicsView\n          || view instanceof MapLayerView\n          || RenderedView.is(view) && \"geoProjection\" in view;\n    }\n    return false;\n  },\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {GraphicsViewController} from \"@swim/view\";\nimport {GeoBox} from \"../geo/GeoBox\";\nimport {GeoProjection} from \"../geo/GeoProjection\";\nimport {MapViewContext} from \"../MapViewContext\";\nimport {MapViewController} from \"../MapViewController\";\nimport {MapGraphicsView} from \"./MapGraphicsView\";\nimport {MapGraphicsViewObserver} from \"./MapGraphicsViewObserver\";\n\nexport class MapGraphicsViewController<V extends MapGraphicsView = MapGraphicsView> extends GraphicsViewController<V> implements MapViewController<V>, MapGraphicsViewObserver<V> {\n  get geoProjection(): GeoProjection | null {\n    const view = this._view;\n    return view !== null ? view.geoProjection : null;\n  }\n\n  get mapZoom(): number {\n    const view = this._view;\n    return view !== null ? view.mapZoom : 0;\n  }\n\n  get mapHeading(): number {\n    const view = this._view;\n    return view !== null ? view.mapHeading : 0;\n  }\n\n  get mapTilt(): number {\n    const view = this._view;\n    return view !== null ? view.mapTilt : 0;\n  }\n\n  get geoFrame(): GeoBox {\n    const view = this._view;\n    return view !== null ? view.geoFrame : GeoBox.globe();\n  }\n\n  get geoBounds(): GeoBox {\n    const view = this._view;\n    return view !== null ? view.geoBounds : GeoBox.empty();\n  }\n\n  viewWillProject(viewContext: MapViewContext, view: V): void {\n    // hook\n  }\n\n  viewDidProject(viewContext: MapViewContext, view: V): void {\n    // hook\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BoxR2} from \"@swim/math\";\nimport {Transform} from \"@swim/transform\";\nimport {\n  AnyRenderer,\n  RendererType,\n  Renderer,\n  CanvasCompositeOperation,\n  CanvasRenderer,\n  WebGLRenderer,\n} from \"@swim/render\";\nimport {ViewFlags, View, MemberAnimator, RenderedView} from \"@swim/view\";\nimport {MapViewContext} from \"../MapViewContext\";\nimport {MapGraphicsView} from \"../graphics/MapGraphicsView\";\nimport {CompositedMapViewContext} from \"../composited/CompositedMapViewContext\";\nimport {CompositedMapView} from \"../composited/CompositedMapView\";\nimport {MapRasterViewObserver} from \"./MapRasterViewObserver\";\nimport {MapRasterViewController} from \"./MapRasterViewController\";\n\nexport class MapRasterView extends MapGraphicsView implements CompositedMapView {\n  /** @hidden */\n  _canvas: HTMLCanvasElement;\n  /** @hidden */\n  _renderer: Renderer | null | undefined;\n  /** @hidden */\n  _rasterFrame: BoxR2;\n\n  constructor() {\n    super();\n    this._canvas = this.createCanvas();\n    this._renderer = void 0;\n    this._rasterFrame = BoxR2.empty();\n  }\n\n  get viewController(): MapRasterViewController | null {\n    return this._viewController;\n  }\n\n  @MemberAnimator(Number, {value: 1})\n  opacity: MemberAnimator<this, number>;\n\n  @MemberAnimator(String, {value: \"source-over\"})\n  compositeOperation: MemberAnimator<this, CanvasCompositeOperation>;\n\n  get pixelRatio(): number {\n    return window.devicePixelRatio || 1;\n  }\n\n  get canvas(): HTMLCanvasElement {\n    return this._canvas;\n  }\n\n  get compositor(): Renderer | null {\n    const parentView = this.parentView;\n    return RenderedView.is(parentView) ? parentView.renderer : null;\n  }\n\n  get renderer(): Renderer | null {\n    let renderer = this._renderer;\n    if (renderer === void 0) {\n      renderer = this.createRenderer();\n      this._renderer = renderer;\n    }\n    return renderer;\n  }\n\n  setRenderer(renderer: AnyRenderer | null): void {\n    if (typeof renderer === \"string\") {\n      renderer = this.createRenderer(renderer as RendererType);\n    }\n    this._renderer = renderer;\n    this.resetRenderer();\n  }\n\n  protected createRenderer(rendererType: RendererType = \"canvas\"): Renderer | null {\n    if (rendererType === \"canvas\") {\n      const context = this._canvas.getContext(\"2d\");\n      if (context !== null) {\n        return new CanvasRenderer(context, this.pixelRatio);\n      } else {\n        throw new Error(\"Failed to create canvas rendering context\");\n      }\n    } else if (rendererType === \"webgl\") {\n      const context = this._canvas.getContext(\"webgl\");\n      if (context !== null) {\n        return new WebGLRenderer(context, this.pixelRatio);\n      } else {\n        throw new Error(\"Failed to create webgl rendering context\");\n      }\n    } else {\n      throw new Error(\"Failed to create \" + rendererType + \" renderer\");\n    }\n  }\n\n  protected modifyUpdate(updateFlags: ViewFlags): ViewFlags {\n    let additionalFlags = 0;\n    if ((updateFlags & View.UpdateMask) !== 0) {\n      if ((updateFlags & View.ProcessMask) !== 0) {\n        additionalFlags |= View.NeedsProcess;\n      }\n      if ((updateFlags & View.DisplayMask) !== 0) {\n        additionalFlags |= View.NeedsDisplay;\n      }\n      additionalFlags |= View.NeedsRender | View.NeedsComposite;\n    }\n    return additionalFlags;\n  }\n\n  cascadeProcess(processFlags: ViewFlags, viewContext: MapViewContext): void {\n    viewContext = this.rasterViewContext(viewContext);\n    super.cascadeProcess(processFlags, viewContext);\n  }\n\n  cascadeDisplay(displayFlags: ViewFlags, viewContext: MapViewContext): void {\n    viewContext = this.rasterViewContext(viewContext);\n    super.cascadeDisplay(displayFlags, viewContext);\n  }\n\n  /** @hidden */\n  protected doDisplay(displayFlags: ViewFlags, viewContext: CompositedMapViewContext): void {\n    let cascadeFlags = displayFlags;\n    this.willDisplay(viewContext);\n    this._viewFlags |= View.DisplayingFlag;\n    try {\n      if (((this._viewFlags | displayFlags) & View.NeedsLayout) !== 0) {\n        cascadeFlags |= View.NeedsLayout;\n        this._viewFlags &= ~View.NeedsLayout;\n        this.willLayout(viewContext);\n      }\n      if (((this._viewFlags | displayFlags) & View.NeedsRender) !== 0) {\n        cascadeFlags |= View.NeedsRender;\n        this._viewFlags &= ~View.NeedsRender;\n        this.willRender(viewContext);\n      }\n      if (((this._viewFlags | displayFlags) & View.NeedsComposite) !== 0) {\n        cascadeFlags |= View.NeedsComposite;\n        this._viewFlags &= ~View.NeedsComposite;\n        this.willComposite(viewContext);\n      }\n\n      this.onDisplay(viewContext);\n      if ((cascadeFlags & View.NeedsLayout) !== 0) {\n        this.onLayout(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsRender) !== 0) {\n        this.onRender(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsComposite) !== 0) {\n        this.onComposite(viewContext);\n      }\n\n      this.doDisplayChildViews(cascadeFlags, viewContext);\n\n      if ((cascadeFlags & View.NeedsComposite) !== 0) {\n        this.didComposite(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsRender) !== 0) {\n        this.didRender(viewContext);\n      }\n      if ((cascadeFlags & View.NeedsLayout) !== 0) {\n        this.didLayout(viewContext);\n      }\n    } finally {\n      this._viewFlags &= ~View.DisplayingFlag;\n      this.didDisplay(viewContext);\n    }\n  }\n\n  protected onLayout(viewContext: CompositedMapViewContext): void {\n    super.onLayout(viewContext);\n    this.resizeCanvas(this._canvas);\n    this.resetRenderer();\n  }\n\n  protected onRender(viewContext: CompositedMapViewContext): void {\n    super.onRender(viewContext);\n    this.clearCanvas();\n  }\n\n  protected willComposite(viewContext: CompositedMapViewContext): void {\n    this.willObserve(function (viewObserver: MapRasterViewObserver): void {\n      if (viewObserver.viewWillRender !== void 0) {\n        viewObserver.viewWillRender(viewContext, this);\n      }\n    });\n  }\n\n  protected onComposite(viewContext: CompositedMapViewContext): void {\n    this.compositeImage(viewContext);\n  }\n\n  protected didComposite(viewContext: CompositedMapViewContext): void {\n    this.didObserve(function (viewObserver: MapRasterViewObserver): void {\n      if (viewObserver.viewDidRender !== void 0) {\n        viewObserver.viewDidRender(viewContext, this);\n      }\n    });\n  }\n\n  childViewContext(childView: View, viewContext: CompositedMapViewContext): CompositedMapViewContext {\n    return viewContext;\n  }\n\n  rasterViewContext(viewContext: MapViewContext): CompositedMapViewContext {\n    const rasterViewContext = Object.create(viewContext);\n    rasterViewContext.compositor = viewContext.renderer;\n    rasterViewContext.renderer = this.renderer;\n    return rasterViewContext;\n  }\n\n  /** @hidden */\n  get compositeFrame(): BoxR2 {\n    let viewFrame = this._viewFrame;\n    if (viewFrame === void 0) {\n      const parentView = this._parentView;\n      viewFrame = RenderedView.is(parentView) ? parentView.viewFrame : BoxR2.empty();\n    }\n    return viewFrame;\n  }\n\n  get viewFrame(): BoxR2 {\n    return this._rasterFrame;\n  }\n\n  setViewFrame(viewFrame: BoxR2 | null): void {\n    if (viewFrame !== null) {\n      this._viewFrame = viewFrame;\n    } else if (this._viewFrame !== void 0) {\n      this._viewFrame = void 0;\n    }\n  }\n\n  hitTest(x: number, y: number, viewContext: CompositedMapViewContext): RenderedView | null {\n    const rasterViewContext = this.rasterViewContext(viewContext);\n    const compositeFrame = this.compositeFrame;\n    x -= Math.floor(compositeFrame.xMin);\n    y -= Math.floor(compositeFrame.yMin);\n\n    let hit: RenderedView | null = null;\n    const childViews = this._childViews;\n    for (let i = childViews.length - 1; i >= 0; i -= 1) {\n      const childView = childViews[i];\n      if (RenderedView.is(childView) && !childView.isHidden() && !childView.isCulled()) {\n        const hitBounds = childView.hitBounds;\n        if (hitBounds.contains(x, y)) {\n          hit = childView.hitTest(x, y, rasterViewContext);\n          if (hit !== null) {\n            break;\n          }\n        }\n      }\n    }\n    return hit;\n  }\n\n  get parentTransform(): Transform {\n    const compositeFrame = this.compositeFrame;\n    const dx = Math.floor(compositeFrame.xMin);\n    const dy = Math.floor(compositeFrame.yMin);\n    if (dx !== 0 || dy !== 0) {\n      return Transform.translate(-dx, -dy);\n    }\n    return Transform.identity();\n  }\n\n  protected createCanvas(): HTMLCanvasElement {\n    return document.createElement(\"canvas\");\n  }\n\n  protected resizeCanvas(node: HTMLCanvasElement): void {\n    const compositeFrame = this.compositeFrame;\n    const xMin = compositeFrame.xMin - Math.floor(compositeFrame.xMin);\n    const yMin = compositeFrame.yMin - Math.floor(compositeFrame.yMin);\n    const xMax = Math.ceil(xMin + compositeFrame.width);\n    const yMax = Math.ceil(yMin + compositeFrame.height);\n    const rasterFrame = new BoxR2(xMin, yMin, xMax, yMax);\n    if (!this._rasterFrame.equals(rasterFrame)) {\n      const pixelRatio = this.pixelRatio;\n      node.width = xMax * pixelRatio;\n      node.height = yMax * pixelRatio;\n      node.style.width = xMax + \"px\";\n      node.style.height = yMax + \"px\";\n      this._rasterFrame = rasterFrame;\n    }\n  }\n\n  clearCanvas(): void {\n    const renderer = this.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const rasterFrame = this._rasterFrame;\n      renderer.context.clearRect(0, 0, rasterFrame.xMax, rasterFrame.yMax);\n    } else if (renderer instanceof WebGLRenderer) {\n      const context = renderer.context;\n      context.clear(context.COLOR_BUFFER_BIT | context.DEPTH_BUFFER_BIT);\n    }\n  }\n\n  resetRenderer(): void {\n    const renderer = this.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const pixelRatio = this.pixelRatio;\n      renderer.context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    } else if (renderer instanceof WebGLRenderer) {\n      const rasterFrame = this._rasterFrame;\n      renderer.context.viewport(0, 0, rasterFrame.xMax, rasterFrame.yMax);\n    }\n  }\n\n  protected compositeImage(viewContext: CompositedMapViewContext): void {\n    const compositor = viewContext.compositor;\n    const renderer = viewContext.renderer;\n    if (compositor instanceof CanvasRenderer && renderer instanceof CanvasRenderer) {\n      const imageData = renderer.context.getImageData(0, 0, this._canvas.width, this._canvas.height);\n      const compositeFrame = this.compositeFrame;\n      const pixelRatio = compositor.pixelRatio;\n      const context = compositor.context;\n      context.save();\n      context.globalAlpha = this.opacity.value!;\n      context.globalCompositeOperation = this.compositeOperation.value!;\n      const x = Math.floor(compositeFrame.xMin) * pixelRatio;\n      const y = Math.floor(compositeFrame.yMin) * pixelRatio;\n      context.putImageData(imageData, x, y);\n      context.restore();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ViewFlags, CompositedViewInit, CompositedView} from \"@swim/view\";\nimport {MapViewInit, MapView} from \"../MapView\";\nimport {CompositedMapViewContext} from \"./CompositedMapViewContext\";\nimport {CompositedMapViewController} from \"./CompositedMapViewController\";\nimport {MapRasterView} from \"../raster/MapRasterView\";\n\nexport interface CompositedMapViewInit extends CompositedViewInit, MapViewInit {\n}\n\nexport interface CompositedMapView extends CompositedView, MapView {\n  readonly viewController: CompositedMapViewController | null;\n\n  needsProcess(processFlags: ViewFlags, viewContext: CompositedMapViewContext): ViewFlags;\n\n  needsDisplay(displayFlags: ViewFlags, viewContext: CompositedMapViewContext): ViewFlags;\n}\n\n/** @hidden */\nexport const CompositedMapView = {\n  is(object: unknown): object is CompositedMapView {\n    if (typeof object === \"object\" && object !== null) {\n      const view = object as CompositedMapView;\n      return view instanceof MapRasterView\n          || CompositedView.is(view) && MapView.is(view);\n    }\n    return false;\n  },\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {MapGraphicsViewController} from \"../graphics/MapGraphicsViewController\";\nimport {CompositedMapViewContext} from \"../composited/CompositedMapViewContext\";\nimport {CompositedMapViewController} from \"../composited/CompositedMapViewController\";\nimport {MapRasterView} from \"./MapRasterView\";\nimport {MapRasterViewObserver} from \"./MapRasterViewObserver\";\n\nexport class MapRasterViewController<V extends MapRasterView = MapRasterView> extends MapGraphicsViewController<V> implements CompositedMapViewController<V>, MapRasterViewObserver<V> {\n  viewWillComposite(viewContext: CompositedMapViewContext, view: V): void {\n    // hook\n  }\n\n  viewDidComposite(viewContext: CompositedMapViewContext, view: V): void {\n    // hook\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BoxR2} from \"@swim/math\";\nimport {ViewController, CanvasView} from \"@swim/view\";\nimport {GeoBox} from \"../geo/GeoBox\";\nimport {GeoProjection} from \"../geo/GeoProjection\";\nimport {MapViewContext} from \"../MapViewContext\";\nimport {MapViewController} from \"../MapViewController\";\nimport {MapLayerView} from \"./MapLayerView\";\nimport {MapLayerViewObserver} from \"./MapLayerViewObserver\";\n\nexport class MapLayerViewController<V extends MapLayerView = MapLayerView> extends ViewController<V> implements MapViewController<V>, MapLayerViewObserver<V> {\n  get canvasView(): CanvasView | null {\n    const view = this._view;\n    return view !== null ? view.canvasView : null;\n  }\n\n  get geoProjection(): GeoProjection | null {\n    const view = this._view;\n    return view !== null ? view.geoProjection : null;\n  }\n\n  get mapZoom(): number {\n    const view = this._view;\n    return view !== null ? view.mapZoom : 0;\n  }\n\n  get mapHeading(): number {\n    const view = this._view;\n    return view !== null ? view.mapHeading : 0;\n  }\n\n  get mapTilt(): number {\n    const view = this._view;\n    return view !== null ? view.mapTilt : 0;\n  }\n\n  get geoFrame(): GeoBox {\n    const view = this._view;\n    return view !== null ? view.geoFrame : GeoBox.globe();\n  }\n\n  get geoBounds(): GeoBox {\n    const view = this._view;\n    return view !== null ? view.geoBounds : GeoBox.empty();\n  }\n\n  viewWillAnimate(viewContext: MapViewContext, view: V): void {\n    // hook\n  }\n\n  viewDidAnimate(viewContext: MapViewContext, view: V): void {\n    // hook\n  }\n\n  viewWillProject(viewContext: MapViewContext, view: V): void {\n    // hook\n  }\n\n  viewDidProject(viewContext: MapViewContext, view: V): void {\n    // hook\n  }\n\n  viewWillRender(viewContext: MapViewContext, view: V): void {\n    // hook\n  }\n\n  viewDidRender(viewContext: MapViewContext, view: V): void {\n    // hook\n  }\n\n  isHidden(): boolean {\n    const view = this._view;\n    return view !== null && view.isHidden();\n  }\n\n  viewWillSetHidden(hidden: boolean, view: V): void {\n    // hook\n  }\n\n  viewDidSetHidden(hidden: boolean, view: V): void {\n    // hook\n  }\n\n  isCulled(): boolean {\n    const view = this._view;\n    return view !== null && view.isCulled();\n  }\n\n  viewWillSetCulled(culled: boolean, view: V): void {\n    // hook\n  }\n\n  viewDidSetCulled(culled: boolean, view: V): void {\n    // hook\n  }\n\n  get viewFrame(): BoxR2 {\n    const view = this._view;\n    return view !== null ? view.viewFrame : BoxR2.empty();\n  }\n\n  get viewBounds(): BoxR2 {\n    const view = this._view;\n    return view !== null ? view.viewBounds : BoxR2.empty();\n  }\n\n  get hitBounds(): BoxR2 {\n    const view = this._view;\n    return view !== null ? view.hitBounds : BoxR2.empty();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {View} from \"@swim/view\";\nimport {GeoBox} from \"../geo/GeoBox\";\nimport {MapView} from \"../MapView\";\nimport {MapGraphicsView} from \"../graphics/MapGraphicsView\";\n\nexport class MapGroupView extends MapGraphicsView {\n  /** @hidden */\n  _geoBounds: GeoBox;\n\n  constructor() {\n    super();\n    this._geoBounds = GeoBox.globe();\n  }\n\n  protected didInsertChildView(childView: View, targetView: View | null | undefined): void {\n    this.doUpdateGeoBounds();\n    super.didInsertChildView(childView, targetView);\n  }\n\n  protected didRemoveChildVIew(childView: View): void {\n    this.doUpdateGeoBounds();\n    super.didRemoveChildView(childView);\n  }\n\n  childViewDidSetGeoBounds(childView: MapView, newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    this.doUpdateGeoBounds();\n  }\n\n  protected doUpdateGeoBounds(): void {\n    const oldGeoBounds = this._geoBounds;\n    const newGeoBounds = this.deriveGeoBounds();\n    if (!oldGeoBounds.equals(newGeoBounds)) {\n      this._geoBounds = newGeoBounds;\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n  }\n\n  get geoBounds(): GeoBox {\n    return this._geoBounds;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2, BoxR2} from \"@swim/math\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont, Font} from \"@swim/font\";\nimport {Tween} from \"@swim/transition\";\nimport {CanvasContext, CanvasRenderer} from \"@swim/render\";\nimport {ViewFlags, View, MemberAnimator, RenderedView, TypesetView} from \"@swim/view\";\nimport {AnyTextRunView, TextRunView} from \"@swim/typeset\";\nimport {AnyGeoPoint, GeoPointInit, GeoPointTuple, GeoPoint} from \"../geo/GeoPoint\";\nimport {GeoBox} from \"../geo/GeoBox\";\nimport {MapViewContext} from \"../MapViewContext\";\nimport {MapViewInit} from \"../MapView\";\nimport {MapGraphicsView} from \"../graphics/MapGraphicsView\";\nimport {MapGraphicsViewController} from \"../graphics/MapGraphicsViewController\";\n\nexport type MapPointLabelPlacement = \"auto\" | \"top\" | \"right\" | \"bottom\" | \"left\";\n\nexport type AnyMapPointView = MapPointView | MapPointViewInit | GeoPoint | GeoPointInit | GeoPointTuple;\n\nexport interface MapPointViewInit extends MapViewInit {\n  lng?: number;\n  lat?: number;\n  x?: number;\n  y?: number;\n\n  radius?: AnyLength;\n\n  hitRadius?: number;\n\n  color?: AnyColor;\n  opacity?: number;\n\n  labelPadding?: AnyLength;\n  labelPlacement?: MapPointLabelPlacement;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n\n  label?: View | string | null;\n}\n\nexport class MapPointView extends MapGraphicsView {\n  /** @hidden */\n  _hitRadius?: number;\n  /** @hidden */\n  _labelPlacement?: MapPointLabelPlacement;\n  /** @hidden */\n  _geoBounds: GeoBox;\n\n  constructor() {\n    super();\n    this._geoBounds = GeoBox.empty();\n    this.geoPoint.onUpdate = this.onSetGeoPoint.bind(this);\n  }\n\n  get viewController(): MapGraphicsViewController<MapPointView> | null {\n    return this._viewController;\n  }\n\n  @MemberAnimator(GeoPoint, {value: GeoPoint.origin()})\n  geoPoint: MemberAnimator<this, GeoPoint, AnyGeoPoint>;\n\n  @MemberAnimator(PointR2, {value: PointR2.origin()})\n  viewPoint: MemberAnimator<this, PointR2, AnyPointR2>;\n\n  @MemberAnimator(Length)\n  radius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color)\n  color: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Number)\n  opacity: MemberAnimator<this, number>;\n\n  @MemberAnimator(Length)\n  labelPadding: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Font, {inherit: true})\n  font: MemberAnimator<this, Font, AnyFont>;\n\n  @MemberAnimator(Color, {inherit: true})\n  textColor: MemberAnimator<this, Color, AnyColor>;\n\n  hitRadius(): number | null;\n  hitRadius(hitRadius: number | null): this;\n  hitRadius(hitRadius?: number | null): number | null | this {\n    if (hitRadius === void 0) {\n      return this._hitRadius !== void 0 ? this._hitRadius : null;\n    } else {\n      if (hitRadius !== null) {\n        this._hitRadius = hitRadius;\n      } else if (this._hitRadius !== void 0) {\n        this._hitRadius = void 0;\n      }\n      return this;\n    }\n  }\n\n  label(): View | null;\n  label(label: View | AnyTextRunView | null): this;\n  label(label?: View | AnyTextRunView | null): View | null | this {\n    if (label === void 0) {\n      return this.getChildView(\"label\");\n    } else {\n      if (label !== null && !(label instanceof View)) {\n        label = TextRunView.fromAny(label);\n      }\n      this.setChildView(\"label\", label);\n      return this;\n    }\n  }\n\n  labelPlacement(): MapPointLabelPlacement;\n  labelPlacement(labelPlacement: MapPointLabelPlacement): this;\n  labelPlacement(labelPlacement?: MapPointLabelPlacement): MapPointLabelPlacement | this {\n    if (labelPlacement === void 0) {\n      return this._labelPlacement !== void 0 ? this._labelPlacement : \"auto\";\n    } else {\n      this._labelPlacement = labelPlacement;\n      return this;\n    }\n  }\n\n  isGradientStop(): boolean {\n    return !!this.color.value || typeof this.opacity.value === \"number\";\n  }\n\n  setState(point: AnyMapPointView, tween?: Tween<any>): void {\n    let init: MapPointViewInit;\n    if (point instanceof MapPointView) {\n      init = point.toAny();\n    } else if (point instanceof GeoPoint) {\n      init = point.toAny();\n    } else if (GeoPoint.isTuple(point)) {\n      init = {lng: point[0], lat: point[1]};\n    } else {\n      init = point;\n    }\n    if (init.lng !== void 0 && init.lat !== void 0) {\n      this.geoPoint(new GeoPoint(init.lng, init.lat), tween);\n    } else if (init.x !== void 0 && init.y !== void 0) {\n      this.viewPoint(new PointR2(init.x, init.y), tween);\n    }\n\n    if (init.radius !== void 0) {\n      this.radius(init.radius, tween);\n    }\n\n    if (init.hitRadius !== void 0) {\n      this.hitRadius(init.hitRadius);\n    }\n\n    if (init.color !== void 0) {\n      this.color(init.color, tween);\n    }\n    if (init.opacity !== void 0) {\n      this.opacity(init.opacity, tween);\n    }\n\n    if (init.labelPadding !== void 0) {\n      this.labelPadding(init.labelPadding, tween);\n    }\n    if (init.labelPlacement !== void 0) {\n      this.labelPlacement(init.labelPlacement);\n    }\n\n    if (init.font !== void 0) {\n      this.font(init.font, tween);\n    }\n    if (init.textColor !== void 0) {\n      this.textColor(init.textColor, tween);\n    }\n\n    if (init.label !== void 0) {\n      this.label(init.label);\n    }\n\n    if (init.hidden !== void 0) {\n      this.setHidden(init.hidden);\n    }\n    if (init.culled !== void 0) {\n      this.setCulled(init.culled);\n    }\n  }\n\n  protected onSetGeoPoint(newGeoPoint: GeoPoint | undefined, oldGeoPoint: GeoPoint | undefined): void {\n    if (newGeoPoint !== void 0) {\n      const oldGeoBounds = this._geoBounds;\n      const newGeoBounds = new GeoBox(newGeoPoint._lng, newGeoPoint._lat, newGeoPoint._lng, newGeoPoint._lat);\n      this._geoBounds = newGeoBounds;\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n    this.requireUpdate(View.NeedsProject);\n  }\n\n  protected modifyUpdate(updateFlags: ViewFlags): ViewFlags {\n    let additionalFlags = 0;\n    if ((updateFlags & View.NeedsProject) !== 0 && this.label() !== null) {\n      additionalFlags |= View.NeedsLayout;\n    }\n    additionalFlags |= super.modifyUpdate(updateFlags | additionalFlags);\n    return additionalFlags;\n  }\n\n  protected onProject(viewContext: MapViewContext): void {\n    super.onProject(viewContext);\n    if (this.viewPoint.isAuto()) {\n      const viewPoint = viewContext.geoProjection.project(this.geoPoint.value!);\n      //this.viewPoint.setAutoState(viewPoint);\n      this.viewPoint._value = viewPoint;\n      this.viewPoint._state = viewPoint;\n    }\n  }\n\n  protected onLayout(viewContext: MapViewContext): void {\n    super.onLayout(viewContext);\n    const label = this.label();\n    if (RenderedView.is(label)) {\n      this.layoutLabel(label, this.viewFrame);\n    }\n  }\n\n  protected layoutLabel(label: RenderedView, frame: BoxR2): void {\n    const placement = this._labelPlacement !== void 0 ? this._labelPlacement : \"auto\";\n    // TODO: auto placement\n\n    const size = Math.min(frame.width, frame.height);\n    const padding = this.labelPadding.value!.pxValue(size);\n    const {x, y} = this.viewPoint.value!;\n    let y1 = y;\n    if (placement === \"top\") {\n      y1 -= padding;\n    } else if (placement === \"bottom\") {\n      y1 += padding;\n    }\n\n    if (TypesetView.is(label)) {\n      label.textAlign.setAutoState(\"center\");\n      label.textBaseline.setAutoState(\"bottom\");\n      label.textOrigin.setAutoState(new PointR2(x, y1));\n    }\n  }\n\n  get viewBounds(): BoxR2 {\n    const {x, y} = this.viewPoint.value!;\n    return new BoxR2(x, y, x, y);\n  }\n\n  get hitBounds(): BoxR2 {\n    const {x, y} = this.viewPoint.value!;\n    const hitRadius = this._hitRadius !== void 0 ? this._hitRadius : 0;\n    return new BoxR2(x - hitRadius, y - hitRadius, x + hitRadius, y + hitRadius);\n  }\n\n  get geoBounds(): GeoBox {\n    return this._geoBounds;\n  }\n\n  hitTest(x: number, y: number, viewContext: MapViewContext): RenderedView | null {\n    let hit = super.hitTest(x, y, viewContext);\n    if (hit === null) {\n      const renderer = viewContext.renderer;\n      if (renderer instanceof CanvasRenderer) {\n        const context = renderer.context;\n        hit = this.hitTestPoint(x, y, context, this.viewFrame);\n      }\n    }\n    return hit;\n  }\n\n  protected hitTestPoint(hx: number, hy: number, context: CanvasContext, frame: BoxR2): RenderedView | null {\n    const {x, y} = this.viewPoint.value!;\n    const radius = this.radius.value;\n\n    let hitRadius = this._hitRadius !== void 0 ? this._hitRadius : 0;\n    if (radius !== void 0) {\n      const size = Math.min(frame.width, frame.height);\n      hitRadius = Math.max(hitRadius, radius.pxValue(size));\n    }\n\n    const dx = x - hx;\n    const dy = y - hy;\n    if (dx * dx + dy * dy < hitRadius * hitRadius) {\n      return this;\n    }\n    return null;\n  }\n\n  toAny(): MapPointViewInit {\n    const init: MapPointViewInit = {};\n    if (this.geoPoint.value !== void 0) {\n      init.lng = this.geoPoint.value.lng;\n      init.lat = this.geoPoint.value.lat;\n    }\n    if (this.viewPoint.value !== void 0 && !this.viewPoint.isAuto()) {\n      init.x = this.viewPoint.value.x;\n      init.y = this.viewPoint.value.y;\n    }\n    if (this.radius.value !== void 0) {\n      init.radius = this.radius.value;\n    }\n    if (this._hitRadius !== null) {\n      init.hitRadius = this._hitRadius;\n    }\n    if (this.color.value !== void 0) {\n      init.color = this.color.value;\n    }\n    if (this.opacity.value !== void 0) {\n      init.opacity = this.opacity.value;\n    }\n    if (this.labelPadding.value !== void 0) {\n      init.labelPadding = this.labelPadding.value;\n    }\n    if (this._labelPlacement !== void 0) {\n      init.labelPlacement = this._labelPlacement;\n    }\n    return init;\n  }\n\n  static fromAny<X, Y>(point: AnyMapPointView): MapPointView {\n    if (point instanceof MapPointView) {\n      return point;\n    } else if (typeof point === \"object\" && point !== null) {\n      const view = new MapPointView();\n      view.setState(point);\n      return view;\n    }\n    throw new TypeError(\"\" + point);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2, BoxR2, CircleR2} from \"@swim/math\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {CanvasContext, CanvasRenderer} from \"@swim/render\";\nimport {\n  View,\n  MemberAnimator,\n  RenderedView,\n  FillViewInit,\n  FillView,\n  StrokeViewInit,\n  StrokeView,\n} from \"@swim/view\";\nimport {AnyGeoPoint, GeoPoint} from \"../geo/GeoPoint\";\nimport {GeoBox} from \"../geo/GeoBox\";\nimport {MapViewContext} from \"../MapViewContext\";\nimport {MapViewInit} from \"../MapView\";\nimport {MapGraphicsView} from \"../graphics/MapGraphicsView\";\nimport {MapGraphicsViewController} from \"../graphics/MapGraphicsViewController\";\n\nexport type AnyMapCircleView = MapCircleView | MapCircleViewInit;\n\nexport interface MapCircleViewInit extends MapViewInit, FillViewInit, StrokeViewInit {\n  geoCenter?: AnyGeoPoint;\n  viewCenter?: AnyPointR2;\n  radius?: AnyLength;\n  hitRadius?: number;\n}\n\nexport class MapCircleView extends MapGraphicsView implements FillView, StrokeView {\n  /** @hidden */\n  _hitRadius?: number;\n  /** @hidden */\n  _geoBounds: GeoBox;\n\n  constructor() {\n    super();\n    this._geoBounds = GeoBox.empty();\n    this.geoCenter.onUpdate = this.onSetGeoCenter.bind(this);\n  }\n\n  get viewController(): MapGraphicsViewController<MapCircleView> | null {\n    return this._viewController;\n  }\n\n  @MemberAnimator(GeoPoint, {value: GeoPoint.origin()})\n  geoCenter: MemberAnimator<this, GeoPoint, AnyGeoPoint>;\n\n  @MemberAnimator(PointR2, {value: PointR2.origin()})\n  viewCenter: MemberAnimator<this, PointR2, AnyPointR2>;\n\n  @MemberAnimator(Length, {value: 0})\n  radius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color, {inherit: true})\n  fill: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Color, {inherit: true})\n  stroke: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Length, {inherit: true})\n  strokeWidth: MemberAnimator<this, Length, AnyLength>;\n\n  hitRadius(): number | null;\n  hitRadius(hitRadius: number | null): this;\n  hitRadius(hitRadius?: number | null): number | null | this {\n    if (hitRadius === void 0) {\n      return this._hitRadius !== void 0 ? this._hitRadius : null;\n    } else {\n      if (hitRadius !== null) {\n        this._hitRadius = hitRadius;\n      } else if (this._hitRadius !== void 0) {\n        this._hitRadius = void 0;\n      }\n      return this;\n    }\n  }\n\n  protected onSetGeoCenter(newGeoCenter: GeoPoint | undefined, oldGeoCenter: GeoPoint | undefined): void {\n    if (newGeoCenter !== void 0) {\n      const oldGeoBounds = this._geoBounds;\n      const newGeoBounds = new GeoBox(newGeoCenter._lng, newGeoCenter._lat, newGeoCenter._lng, newGeoCenter._lat);\n      this._geoBounds = newGeoBounds;\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n    this.requireUpdate(View.NeedsProject);\n  }\n\n  protected onProject(viewContext: MapViewContext): void {\n    super.onProject(viewContext);\n    let viewCenter: PointR2;\n    if (this.viewCenter.isAuto()) {\n      const geoProjection = viewContext.geoProjection;\n      viewCenter = geoProjection.project(this.geoCenter.value!);\n      this.viewCenter.setAutoState(viewCenter);\n    } else {\n      viewCenter = this.viewCenter.value!;\n    }\n    const frame = this.viewFrame;\n    const size = Math.min(frame.width, frame.height);\n    const radius = this.radius.value!.pxValue(size);\n    const invalid = !isFinite(viewCenter.x) || !isFinite(viewCenter.y) || !isFinite(radius);\n    const culled = invalid || !frame.intersectsCircle(new CircleR2(viewCenter.x, viewCenter.y, radius));\n    this.setCulled(culled);\n  }\n\n  protected onRender(viewContext: MapViewContext): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.isHidden() && !this.isCulled()) {\n      const context = renderer.context;\n      context.save();\n      this.renderCircle(renderer.context, this.viewFrame);\n      context.restore();\n    }\n  }\n\n  protected renderCircle(context: CanvasContext, frame: BoxR2): void {\n    const size = Math.min(frame.width, frame.height);\n    const viewCenter = this.viewCenter.value!;\n    const radius = this.radius.value!.pxValue(size);\n\n    context.beginPath();\n    context.arc(viewCenter.x, viewCenter.y, radius, 0, 2 * Math.PI);\n\n    const fill = this.fill.value;\n    if (fill !== void 0) {\n      context.fillStyle = fill.toString();\n      context.fill();\n    }\n\n    const stroke = this.stroke.value;\n    if (stroke !== void 0) {\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== void 0) {\n        context.lineWidth = strokeWidth.pxValue(size);\n      }\n      context.strokeStyle = stroke.toString();\n      context.stroke();\n    }\n  }\n\n  get popoverFrame(): BoxR2 {\n    const frame = this.viewFrame;\n    const size = Math.min(frame.width, frame.height);\n    const inversePageTransform = this.pageTransform.inverse();\n    const viewCenter = this.viewCenter.value!;\n    const [px, py] = inversePageTransform.transform(viewCenter.x, viewCenter.y);\n    const radius = this.radius.value!.pxValue(size);\n    return new BoxR2(px - radius, py - radius, px + radius, py + radius);\n  }\n\n  get viewBounds(): BoxR2 {\n    const frame = this.viewFrame;\n    const size = Math.min(frame.width, frame.height);\n    const viewCenter = this.viewCenter.value!;\n    const radius = this.radius.value!.pxValue(size);\n    return new BoxR2(viewCenter.x - radius, viewCenter.y - radius,\n                     viewCenter.x + radius, viewCenter.y + radius);\n  }\n\n  get hitBounds(): BoxR2 {\n    const frame = this.viewFrame;\n    const size = Math.min(frame.width, frame.height);\n    const viewCenter = this.viewCenter.value!;\n    const radius = this.radius.value!.pxValue(size);\n    const hitRadius = this._hitRadius !== void 0 ? Math.max(this._hitRadius, radius) : radius;\n    return new BoxR2(viewCenter.x - hitRadius, viewCenter.y - hitRadius,\n                     viewCenter.x + hitRadius, viewCenter.y + hitRadius);\n  }\n\n  get geoBounds(): GeoBox {\n    return this._geoBounds;\n  }\n\n  hitTest(x: number, y: number, viewContext: MapViewContext): RenderedView | null {\n    let hit = super.hitTest(x, y, viewContext);\n    if (hit === null) {\n      const renderer = viewContext.renderer;\n      if (renderer instanceof CanvasRenderer) {\n        const context = renderer.context;\n        hit = this.hitTestCircle(x, y, context, this.viewFrame, renderer.pixelRatio);\n      }\n    }\n    return hit;\n  }\n\n  protected hitTestCircle(x: number, y: number, context: CanvasContext,\n                          frame: BoxR2, pixelRatio: number): RenderedView | null {\n    const size = Math.min(frame.width, frame.height);\n    const viewCenter = this.viewCenter.value!;\n    const radius = this.radius.value!.pxValue(size);\n\n    if (this.fill.value !== void 0) {\n      const hitRadius = this._hitRadius !== void 0 ? Math.max(this._hitRadius, radius) : radius;\n      const dx = viewCenter.x - x;\n      const dy = viewCenter.y - y;\n      if (dx * dx + dy * dy < hitRadius * hitRadius) {\n        return this;\n      }\n    }\n\n    const strokeWidth = this.strokeWidth.value;\n    if (this.stroke.value !== void 0 && strokeWidth !== void 0) {\n      x *= pixelRatio;\n      y *= pixelRatio;\n\n      context.save();\n      context.beginPath();\n      context.arc(viewCenter.x, viewCenter.y, radius, 0, 2 * Math.PI);\n      context.lineWidth = strokeWidth.pxValue(size);\n      if (context.isPointInStroke(x, y)) {\n        context.restore();\n        return this;\n      } else {\n        context.restore();\n      }\n    }\n    return null;\n  }\n\n  static fromAny(circle: AnyMapCircleView): MapCircleView {\n    if (circle instanceof MapCircleView) {\n      return circle;\n    } else if (typeof circle === \"object\" && circle !== null) {\n      const view = new MapCircleView();\n      if (circle.geoCenter !== void 0) {\n        view.geoCenter(circle.geoCenter);\n      }\n      if (circle.viewCenter !== void 0) {\n        view.viewCenter(circle.viewCenter);\n      }\n      if (circle.radius !== void 0) {\n        view.radius(circle.radius);\n      }\n      if (circle.hitRadius !== void 0) {\n        view.hitRadius(circle.hitRadius);\n      }\n      if (circle.fill !== void 0) {\n        view.fill(circle.fill);\n      }\n      if (circle.stroke !== void 0) {\n        view.stroke(circle.stroke);\n      }\n      if (circle.strokeWidth !== void 0) {\n        view.strokeWidth(circle.strokeWidth);\n      }\n      if (circle.hidden !== void 0) {\n        view.setHidden(circle.hidden);\n      }\n      if (circle.culled !== void 0) {\n        view.setCulled(circle.culled);\n      }\n      return view;\n    }\n    throw new TypeError(\"\" + circle);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2, BoxR2, CircleR2} from \"@swim/math\";\nimport {AnyAngle, Angle} from \"@swim/angle\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {CanvasContext, CanvasRenderer} from \"@swim/render\";\nimport {\n  View,\n  MemberAnimator,\n  RenderedView,\n  FillViewInit,\n  FillView,\n  StrokeViewInit,\n  StrokeView,\n} from \"@swim/view\";\nimport {Arc} from \"@swim/shape\";\nimport {AnyGeoPoint, GeoPoint} from \"../geo/GeoPoint\";\nimport {GeoBox} from \"../geo/GeoBox\";\nimport {MapViewContext} from \"../MapViewContext\";\nimport {MapViewInit} from \"../MapView\";\nimport {MapGraphicsView} from \"../graphics/MapGraphicsView\";\nimport {MapGraphicsViewController} from \"../graphics/MapGraphicsViewController\";\n\nexport type AnyMapArcView = MapArcView | MapArcViewInit;\n\nexport interface MapArcViewInit extends MapViewInit, FillViewInit, StrokeViewInit {\n  geoCenter?: AnyGeoPoint;\n  viewCenter?: PointR2;\n  innerRadius?: AnyLength;\n  outerRadius?: AnyLength;\n  startAngle?: AnyAngle;\n  sweepAngle?: AnyAngle;\n  padAngle?: AnyAngle;\n  padRadius?: AnyLength | null;\n  cornerRadius?: AnyLength;\n}\n\nexport class MapArcView extends MapGraphicsView implements FillView, StrokeView {\n  /** @hidden */\n  _geoBounds: GeoBox;\n\n  constructor() {\n    super();\n    this._geoBounds = GeoBox.empty();\n    this.geoCenter.onUpdate = this.onSetGeoCenter.bind(this);\n  }\n\n  get viewController(): MapGraphicsViewController<MapArcView> | null {\n    return this._viewController;\n  }\n\n  @MemberAnimator(GeoPoint, {value: GeoPoint.origin()})\n  geoCenter: MemberAnimator<this, GeoPoint, AnyGeoPoint>;\n\n  @MemberAnimator(PointR2, {value: PointR2.origin()})\n  viewCenter: MemberAnimator<this, PointR2, AnyPointR2>;\n\n  @MemberAnimator(Length, {value: Length.zero()})\n  innerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Length, {value: Length.zero()})\n  outerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Angle, {value: Angle.zero()})\n  startAngle: MemberAnimator<this, Angle, AnyAngle>;\n\n  @MemberAnimator(Angle, {value: Angle.zero()})\n  sweepAngle: MemberAnimator<this, Angle, AnyAngle>;\n\n  @MemberAnimator(Angle, {value: Angle.zero()})\n  padAngle: MemberAnimator<this, Angle, AnyAngle>;\n\n  @MemberAnimator(Length, {value: null})\n  padRadius: MemberAnimator<this, Length | null, AnyLength | null>;\n\n  @MemberAnimator(Length, {value: Length.zero()})\n  cornerRadius: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Color, {inherit: true})\n  fill: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Color, {inherit: true})\n  stroke: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Length, {inherit: true})\n  strokeWidth: MemberAnimator<this, Length, AnyLength>;\n\n  get value(): Arc {\n    return new Arc(this.viewCenter.value!, this.innerRadius.value!, this.outerRadius.value!,\n                   this.startAngle.value!, this.sweepAngle.value!, this.padAngle.value!,\n                   this.padRadius.value!, this.cornerRadius.value!);\n  }\n\n  get state(): Arc {\n    return new Arc(this.viewCenter.state!, this.innerRadius.state!, this.outerRadius.state!,\n                   this.startAngle.state!, this.sweepAngle.state!, this.padAngle.state!,\n                   this.padRadius.state!, this.cornerRadius.state!);\n  }\n\n  protected onSetGeoCenter(newGeoCenter: GeoPoint | undefined, oldGeoCenter: GeoPoint | undefined): void {\n    if (newGeoCenter !== void 0) {\n      const oldGeoBounds = this._geoBounds;\n      const newGeoBounds = new GeoBox(newGeoCenter._lng, newGeoCenter._lat, newGeoCenter._lng, newGeoCenter._lat);\n      this._geoBounds = newGeoBounds;\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n    this.requireUpdate(View.NeedsProject);\n  }\n\n  protected onProject(viewContext: MapViewContext): void {\n    super.onProject(viewContext);\n    let viewCenter: PointR2;\n    if (this.viewCenter.isAuto()) {\n      const geoProjection = viewContext.geoProjection;\n      viewCenter = geoProjection.project(this.geoCenter.value!);\n      this.viewCenter.setAutoState(viewCenter);\n    } else {\n      viewCenter = this.viewCenter.value!;\n    }\n    const frame = this.viewFrame;\n    const size = Math.min(frame.width, frame.height);\n    const radius = this.outerRadius.value!.pxValue(size);\n    const invalid = !isFinite(viewCenter.x) || !isFinite(viewCenter.y) || !isFinite(radius);\n    const culled = invalid || !frame.intersectsCircle(new CircleR2(viewCenter.x, viewCenter.y, radius));\n    this.setCulled(culled);\n  }\n\n  protected onRender(viewContext: MapViewContext): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.isHidden() && !this.isCulled()) {\n      const context = renderer.context;\n      context.save();\n      this.renderArc(renderer.context, this.viewFrame);\n      context.restore();\n    }\n  }\n\n  protected renderArc(context: CanvasContext, frame: BoxR2): void {\n    const arc = this.value;\n    arc.draw(context, frame);\n    const fill = this.fill.value;\n    if (fill !== void 0) {\n      context.fillStyle = fill.toString();\n      context.fill();\n    }\n    const stroke = this.stroke.value;\n    if (stroke !== void 0) {\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== void 0) {\n        const size = Math.min(frame.width, frame.height);\n        context.lineWidth = strokeWidth.pxValue(size);\n      }\n      context.strokeStyle = stroke.toString();\n      context.stroke();\n    }\n  }\n\n  get popoverFrame(): BoxR2 {\n    const frame = this.viewFrame;\n    const size = Math.min(frame.width, frame.height);\n    const inversePageTransform = this.pageTransform.inverse();\n    const viewCenter = this.viewCenter.value!;\n    const [px, py] = inversePageTransform.transform(viewCenter.x, viewCenter.y);\n    const r = (this.innerRadius.value!.pxValue(size) + this.outerRadius.value!.pxValue(size)) / 2;\n    const a = this.startAngle.value!.radValue() + this.sweepAngle.value!.radValue() / 2;\n    const x = px + r * Math.cos(a);\n    const y = py + r * Math.sin(a);\n    return new BoxR2(x, y, x, y);\n  }\n\n  get viewBounds(): BoxR2 {\n    const frame = this.viewFrame;\n    const size = Math.min(frame.width, frame.height);\n    const viewCenter = this.viewCenter.value!;\n    const radius = this.outerRadius.value!.pxValue(size);\n    return new BoxR2(viewCenter.x - radius, viewCenter.y - radius,\n                     viewCenter.x + radius, viewCenter.y + radius);\n  }\n\n  get hitBounds(): BoxR2 {\n    return this.viewBounds;\n  }\n\n  get geoBounds(): GeoBox {\n    return this._geoBounds;\n  }\n\n  hitTest(x: number, y: number, viewContext: MapViewContext): RenderedView | null {\n    let hit = super.hitTest(x, y, viewContext);\n    if (hit === null) {\n      const renderer = viewContext.renderer;\n      if (renderer instanceof CanvasRenderer) {\n        const context = renderer.context;\n        context.save();\n        x *= renderer.pixelRatio;\n        y *= renderer.pixelRatio;\n        hit = this.hitTestArc(x, y, context, this.viewFrame);\n        context.restore();\n      }\n    }\n    return hit;\n  }\n\n  protected hitTestArc(x: number, y: number, context: CanvasContext, frame: BoxR2): RenderedView | null {\n    context.beginPath();\n    const arc = this.value;\n    arc.draw(context, frame);\n    if (this.fill.value !== void 0 && context.isPointInPath(x, y)) {\n      return this;\n    } else if (this.stroke.value !== void 0) {\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== void 0) {\n        const size = Math.min(frame.width, frame.height);\n        context.lineWidth = strokeWidth.pxValue(size);\n        if (context.isPointInStroke(x, y)) {\n          return this;\n        }\n      }\n    }\n    return null;\n  }\n\n  static fromAny(arc: AnyMapArcView): MapArcView {\n    if (arc instanceof MapArcView) {\n      return arc;\n    } else if (typeof arc === \"object\" && arc !== null) {\n      const view = new MapArcView();\n      if (arc.geoCenter !== void 0) {\n        view.geoCenter(arc.geoCenter);\n      }\n      if (arc.viewCenter !== void 0) {\n        view.viewCenter(arc.viewCenter);\n      }\n      if (arc.innerRadius !== void 0) {\n        view.innerRadius(arc.innerRadius);\n      }\n      if (arc.outerRadius !== void 0) {\n        view.outerRadius(arc.outerRadius);\n      }\n      if (arc.startAngle !== void 0) {\n        view.startAngle(arc.startAngle);\n      }\n      if (arc.sweepAngle !== void 0) {\n        view.sweepAngle(arc.sweepAngle);\n      }\n      if (arc.padAngle !== void 0) {\n        view.padAngle(arc.padAngle);\n      }\n      if (arc.padRadius !== void 0) {\n        view.padRadius(arc.padRadius);\n      }\n      if (arc.cornerRadius !== void 0) {\n        view.cornerRadius(arc.cornerRadius);\n      }\n      if (arc.fill !== void 0) {\n        view.fill(arc.fill);\n      }\n      if (arc.stroke !== void 0) {\n        view.stroke(arc.stroke);\n      }\n      if (arc.strokeWidth !== void 0) {\n        view.strokeWidth(arc.strokeWidth);\n      }\n      if (arc.hidden !== void 0) {\n        view.setHidden(arc.hidden);\n      }\n      if (arc.culled !== void 0) {\n        view.setCulled(arc.culled);\n      }\n      return view;\n    }\n    throw new TypeError(\"\" + arc);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2, BoxR2, SegmentR2} from \"@swim/math\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {CanvasContext, CanvasRenderer} from \"@swim/render\";\nimport {View, MemberAnimator, RenderedView, StrokeViewInit, StrokeView} from \"@swim/view\";\nimport {AnyGeoPoint, GeoPoint} from \"../geo/GeoPoint\";\nimport {GeoBox} from \"../geo/GeoBox\";\nimport {MapViewContext} from \"../MapViewContext\";\nimport {MapViewInit} from \"../MapView\";\nimport {MapGraphicsView} from \"../graphics/MapGraphicsView\";\nimport {MapGraphicsViewController} from \"../graphics/MapGraphicsViewController\";\n\nexport type AnyMapLineView = MapLineView | MapLineViewInit;\n\nexport interface MapLineViewInit extends MapViewInit, StrokeViewInit {\n  geoStart?: AnyGeoPoint;\n  geoEnd?: AnyGeoPoint;\n  viewStart?: AnyPointR2;\n  viewEnd?: AnyPointR2;\n  hitWidth?: number;\n}\n\nexport class MapLineView extends MapGraphicsView implements StrokeView {\n  /** @hidden */\n  _hitWidth?: number;\n  /** @hidden */\n  _geoBounds: GeoBox;\n\n  constructor() {\n    super();\n    this._geoBounds = GeoBox.empty();\n    this.geoStart.onUpdate = this.onSetGeoStart.bind(this);\n    this.geoEnd.onUpdate = this.onSetGeoEnd.bind(this);\n  }\n\n  get viewController(): MapGraphicsViewController<MapLineView> | null {\n    return this._viewController;\n  }\n\n  @MemberAnimator(GeoPoint, {value: GeoPoint.origin()})\n  geoStart: MemberAnimator<this, GeoPoint, AnyGeoPoint>;\n\n  @MemberAnimator(GeoPoint, {value: GeoPoint.origin()})\n  geoEnd: MemberAnimator<this, GeoPoint, AnyGeoPoint>;\n\n  @MemberAnimator(PointR2, {value: PointR2.origin()})\n  viewStart: MemberAnimator<this, PointR2, AnyPointR2>;\n\n  @MemberAnimator(PointR2, {value: PointR2.origin()})\n  viewEnd: MemberAnimator<this, PointR2, AnyPointR2>;\n\n  @MemberAnimator(Color, {inherit: true})\n  stroke: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Length, {inherit: true})\n  strokeWidth: MemberAnimator<this, Length, AnyLength>;\n\n  hitWidth(): number | null;\n  hitWidth(hitWidth: number | null): this;\n  hitWidth(hitWidth?: number | null): number | null | this {\n    if (hitWidth === void 0) {\n      return this._hitWidth !== void 0 ? this._hitWidth : null;\n    } else {\n      if (hitWidth !== null) {\n        this._hitWidth = hitWidth;\n      } else if (this._hitWidth !== void 0) {\n        this._hitWidth = void 0;\n      }\n      return this;\n    }\n  }\n\n  protected onSetGeoStart(newGeoStart: GeoPoint | undefined, oldGeoStart: GeoPoint | undefined): void {\n    const newGeoEnd = this.geoEnd.value!;\n    if (newGeoStart !== void 0 && newGeoEnd !== void 0) {\n      const oldGeoBounds = this._geoBounds;\n      const newGeoBounds = new GeoBox(Math.min(newGeoStart.lng, newGeoEnd.lng),\n                                      Math.min(newGeoStart.lat, newGeoEnd.lat),\n                                      Math.max(newGeoStart.lng, newGeoEnd.lng),\n                                      Math.max(newGeoStart.lat, newGeoEnd.lat));\n      this._geoBounds = newGeoBounds;\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n    this.requireUpdate(View.NeedsProject);\n  }\n\n  protected onSetGeoEnd(newGeoEnd: GeoPoint | undefined, oldGeoEnd: GeoPoint | undefined): void {\n    const newGeoStart = this.geoEnd.value!;\n    if (newGeoStart !== void 0 && newGeoEnd !== void 0) {\n      const oldGeoBounds = this._geoBounds;\n      const newGeoBounds = new GeoBox(Math.min(newGeoStart.lng, newGeoEnd.lng),\n                                      Math.min(newGeoStart.lat, newGeoEnd.lat),\n                                      Math.max(newGeoStart.lng, newGeoEnd.lng),\n                                      Math.max(newGeoStart.lat, newGeoEnd.lat));\n      this._geoBounds = newGeoBounds;\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n    this.requireUpdate(View.NeedsProject);\n  }\n\n  protected onProject(viewContext: MapViewContext): void {\n    super.onProject(viewContext);\n    const geoProjection = viewContext.geoProjection;\n    let viewStart: PointR2;\n    let viewEnd: PointR2;\n    if (this.viewStart.isAuto()) {\n      viewStart = geoProjection.project(this.geoStart.value!);\n      this.viewStart.setAutoState(viewStart);\n    } else {\n      viewStart = this.viewStart.value!;\n    }\n    if (this.viewEnd.isAuto()) {\n      viewEnd = geoProjection.project(this.geoEnd.value!);\n      this.viewEnd.setAutoState(viewEnd);\n    } else {\n      viewEnd = this.viewEnd.value!;\n    }\n    const x0 = viewStart.x;\n    const y0 = viewStart.y;\n    const x1 = viewEnd.x;\n    const y1 = viewEnd.y;\n    const invalid = !isFinite(x0) || isFinite(y0) || !isFinite(x1) || !isFinite(y1);\n    const culled = invalid || !this.viewFrame.intersectsSegment(new SegmentR2(x0, y0, x1, y1));\n    this.setCulled(culled);\n  }\n\n  protected onRender(viewContext: MapViewContext): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.isHidden() && !this.isCulled()) {\n      const context = renderer.context;\n      context.save();\n      this.renderLine(context, this.viewFrame);\n      context.restore();\n    }\n  }\n\n  protected renderLine(context: CanvasContext, frame: BoxR2): void {\n    const stroke = this.stroke.value;\n    if (stroke !== void 0) {\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== void 0) {\n        const size = Math.min(frame.width, frame.height);\n        const viewStart = this.viewStart.value!;\n        const viewEnd = this.viewEnd.value!;\n        context.beginPath();\n        context.moveTo(viewStart.x, viewStart.y);\n        context.lineTo(viewEnd.x, viewEnd.y);\n        context.lineWidth = strokeWidth.pxValue(size);\n        context.strokeStyle = stroke.toString();\n        context.stroke();\n      }\n    }\n  }\n\n  get popoverFrame(): BoxR2 {\n    const viewStart = this.viewStart.value!;\n    const viewEnd = this.viewEnd.value!;\n    const xMid = (viewStart.x + viewEnd.x) / 2;\n    const yMid = (viewStart.y + viewEnd.y) / 2;\n    const inversePageTransform = this.pageTransform.inverse();\n    const [px, py] = inversePageTransform.transform(xMid, yMid);\n    return new BoxR2(px, py, px, py);\n  }\n\n  get viewBounds(): BoxR2 {\n    const viewStart = this.viewStart.value!;\n    const x0 = viewStart.x;\n    const y0 = viewStart.y;\n    const viewEnd = this.viewEnd.value!;\n    const x1 = viewEnd.x;\n    const y1 = viewEnd.y;\n    return new BoxR2(Math.min(x0, x1), Math.min(y0, y1),\n                     Math.max(x0, x1), Math.max(y0, y1));\n  }\n\n  get hitBounds(): BoxR2 {\n    return this.viewBounds;\n  }\n\n  get geoBounds(): GeoBox {\n    return this._geoBounds;\n  }\n\n  hitTest(x: number, y: number, viewContext: MapViewContext): RenderedView | null {\n    let hit = super.hitTest(x, y, viewContext);\n    if (hit === null) {\n      const renderer = viewContext.renderer;\n      if (renderer instanceof CanvasRenderer) {\n        const context = renderer.context;\n        context.save();\n        x *= renderer.pixelRatio;\n        y *= renderer.pixelRatio;\n        hit = this.hitTestLine(x, y, context, this.viewFrame);\n        context.restore();\n      }\n    }\n    return hit;\n  }\n\n  protected hitTestLine(x: number, y: number, context: CanvasContext, frame: BoxR2): RenderedView | null {\n    const viewStart = this.viewStart.value!;\n    const viewEnd = this.viewEnd.value!;\n\n    let hitWidth = this._hitWidth !== void 0 ? this._hitWidth : 0;\n    const strokeWidth = this.strokeWidth.value;\n    if (strokeWidth !== void 0) {\n      const size = Math.min(frame.width, frame.height);\n      hitWidth = Math.max(hitWidth, strokeWidth.pxValue(size));\n    }\n\n    context.beginPath();\n    context.moveTo(viewStart.x, viewStart.y);\n    context.lineTo(viewEnd.x, viewEnd.y);\n    context.lineWidth = hitWidth;\n    if (context.isPointInStroke(x, y)) {\n      return this;\n    }\n    return null;\n  }\n\n  static fromAny(line: AnyMapLineView): MapLineView {\n    if (line instanceof MapLineView) {\n      return line;\n    } else if (typeof line === \"object\" && line !== null) {\n      const view = new MapLineView();\n      if (line.geoStart !== void 0) {\n        view.geoStart(line.geoStart);\n      }\n      if (line.geoEnd !== void 0) {\n        view.geoEnd(line.geoEnd);\n      }\n      if (line.stroke !== void 0) {\n        view.stroke(line.stroke);\n      }\n      if (line.strokeWidth !== void 0) {\n        view.strokeWidth(line.strokeWidth);\n      }\n      if (line.hitWidth !== void 0) {\n        view.hitWidth(line.hitWidth);\n      }\n      if (line.hidden !== void 0) {\n        view.setHidden(line.hidden);\n      }\n      if (line.culled !== void 0) {\n        view.setCulled(line.culled);\n      }\n      return view;\n    }\n    throw new TypeError(\"\" + line);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PointR2, BoxR2} from \"@swim/math\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont, Font} from \"@swim/font\";\nimport {Tween} from \"@swim/transition\";\nimport {CanvasContext, CanvasRenderer} from \"@swim/render\";\nimport {View, MemberAnimator, RenderedView, StrokeViewInit, StrokeView} from \"@swim/view\";\nimport {GeoPoint} from \"../geo/GeoPoint\";\nimport {GeoBox} from \"../geo/GeoBox\";\nimport {MapViewContext} from \"../MapViewContext\";\nimport {MapViewInit} from \"../MapView\";\nimport {MapGraphicsView} from \"../graphics/MapGraphicsView\";\nimport {MapGraphicsViewController} from \"../graphics/MapGraphicsViewController\";\nimport {AnyMapPointView, MapPointView} from \"./MapPointView\";\n\nexport type AnyMapPolylineView = MapPolylineView | MapPolylineViewInit;\n\nexport interface MapPolylineViewInit extends MapViewInit, StrokeViewInit {\n  points?: AnyMapPointView[];\n\n  hitWidth?: number;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n}\n\nexport class MapPolylineView extends MapGraphicsView implements StrokeView {\n  /** @hidden */\n  _hitWidth?: number;\n  /** @hidden */\n  _geoCenter: GeoPoint;\n  /** @hidden */\n  _viewCenter: PointR2;\n  /** @hidden */\n  _gradientStops: number;\n  /** @hidden */\n  _viewBounds: BoxR2;\n  /** @hidden */\n  _geoBounds: GeoBox;\n\n  constructor() {\n    super();\n    this._geoCenter = GeoPoint.origin();\n    this._viewCenter = PointR2.origin();\n    this._gradientStops = 0;\n    this._viewBounds = BoxR2.empty();\n    this._geoBounds = GeoBox.empty();\n  }\n\n  get viewController(): MapGraphicsViewController<MapPolylineView> | null {\n    return this._viewController;\n  }\n\n  points(): ReadonlyArray<MapPointView>;\n  points(points: AnyMapPointView[], tween?: Tween<GeoPoint>): this;\n  points(points?: AnyMapPointView[], tween?: Tween<GeoPoint>): ReadonlyArray<MapPointView> | this {\n    const childViews = this._childViews;\n    if (points === void 0) {\n      points = [];\n      for (let i = 0; i < childViews.length; i += 1) {\n        const childView = childViews[i];\n        if (childView instanceof MapPointView) {\n          points.push(childView);\n        }\n      }\n      return points as ReadonlyArray<MapPointView>;\n    } else {\n      const oldGeoBounds = this._geoBounds;\n      let lngMin = Infinity;\n      let latMin = Infinity;\n      let lngMax = -Infinity;\n      let latMax = -Infinity;\n      let lngMid = 0;\n      let latMid = 0;\n      let invalid = false;\n      let i = 0;\n      let j = 0;\n      while (i < childViews.length && j < points.length) {\n        const childView = childViews[i];\n        if (childView instanceof MapPointView) {\n          const point = points[j];\n          childView.setState(point);\n          const {lng, lat} = childView.geoPoint.value!;\n          lngMid += lng;\n          latMid += lat;\n          lngMin = Math.min(lngMin, lng);\n          latMin = Math.min(latMin, lat);\n          lngMax = Math.max(lng, lngMax);\n          latMax = Math.max(lat, latMax);\n          invalid = invalid || !isFinite(lng) || !isFinite(lat);\n          j += 1;\n        }\n        i += 1;\n      }\n      while (j < points.length) {\n        const point = MapPointView.fromAny(points[j]);\n        this.appendChildView(point);\n        const {lng, lat} = point.geoPoint.value!;\n        lngMid += lng;\n        latMid += lat;\n        lngMin = Math.min(lngMin, lng);\n        latMin = Math.min(latMin, lat);\n        lngMax = Math.max(lng, lngMax);\n        latMax = Math.max(lat, latMax);\n        invalid = invalid || !isFinite(lng) || !isFinite(lat);\n        i += 1;\n        j += 1;\n      }\n      while (i < childViews.length) {\n        const childView = childViews[i];\n        if (childView instanceof MapPointView) {\n          this.removeChildView(childView);\n        } else {\n          i += 1;\n        }\n      }\n      if (!invalid && j !== 0) {\n        lngMid /= j;\n        latMid /= j;\n        this._geoCenter = new GeoPoint(lngMid, latMid);\n        this._geoBounds = new GeoBox(lngMin, latMin, lngMax, latMax);\n      } else {\n        this._geoCenter = GeoPoint.origin();\n        this._geoBounds = GeoBox.empty();\n      }\n      const newGeoBounds = this._geoBounds;\n      if (!oldGeoBounds.equals(newGeoBounds)) {\n        this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n      }\n      return this;\n    }\n  }\n\n  appendPoint(point: AnyMapPointView, key?: string): MapPointView {\n    point = MapPointView.fromAny(point);\n    this.appendChildView(point, key);\n    return point;\n  }\n\n  setPoint(key: string, point: AnyMapPointView): MapPointView {\n    point = MapPointView.fromAny(point);\n    this.setChildView(key, point);\n    return point;\n  }\n\n  get geoCenter(): GeoPoint {\n    return this._geoCenter;\n  }\n\n  get viewCenter(): PointR2 {\n    return this._viewCenter;\n  }\n\n  @MemberAnimator(Color, {inherit: true})\n  stroke: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Length, {inherit: true})\n  strokeWidth: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Font, {inherit: true})\n  font: MemberAnimator<this, Font, AnyFont>;\n\n  @MemberAnimator(Color, {inherit: true})\n  textColor: MemberAnimator<this, Color, AnyColor>;\n\n  hitWidth(): number | null;\n  hitWidth(hitWidth: number | null): this;\n  hitWidth(hitWidth?: number | null): number | null | this {\n    if (hitWidth === void 0) {\n      return this._hitWidth !== void 0 ? this._hitWidth : null;\n    } else {\n      if (hitWidth !== null) {\n        this._hitWidth = hitWidth;\n      } else if (this._hitWidth !== void 0) {\n        this._hitWidth = void 0;\n      }\n      return this;\n    }\n  }\n\n  protected onInsertChildView(childView: View, targetView: View | null | undefined): void {\n    super.onInsertChildView(childView, targetView);\n    if (childView instanceof MapPointView) {\n      this.onInsertPoint(childView);\n    }\n  }\n\n  protected onInsertPoint(childView: MapPointView): void {\n    childView.requireUpdate(View.NeedsAnimate | View.NeedsProject);\n  }\n\n  protected didProject(viewContext: MapViewContext): void {\n    const oldGeoBounds = this._geoBounds;\n    let lngMin = Infinity;\n    let latMin = Infinity;\n    let lngMax = -Infinity;\n    let latMax = -Infinity;\n    let lngMid = 0;\n    let latMid = 0;\n    let xMin = Infinity;\n    let yMin = Infinity;\n    let xMax = -Infinity;\n    let yMax = -Infinity;\n    let xMid = 0;\n    let yMid = 0;\n    let invalid = false;\n    let gradientStops = 0;\n    let pointCount = 0;\n    const childViews = this._childViews;\n    for (let i = 0; i < childViews.length; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof MapPointView) {\n        const {lng, lat} = childView.geoPoint.value!;\n        lngMid += lng;\n        latMid += lat;\n        lngMin = Math.min(lngMin, lng);\n        latMin = Math.min(latMin, lat);\n        lngMax = Math.max(lng, lngMax);\n        latMax = Math.max(lat, latMax);\n        invalid = invalid || !isFinite(lng) || !isFinite(lat);\n        const {x, y} = childView.viewPoint.value!;\n        xMin = Math.min(xMin, x);\n        yMin = Math.min(yMin, y);\n        xMax = Math.max(x, xMax);\n        yMax = Math.max(y, yMax);\n        xMid += x;\n        yMid += x;\n        invalid = invalid || !isFinite(x) || !isFinite(y);\n        if (childView.isGradientStop()) {\n          gradientStops += 1;\n        }\n        pointCount += 1;\n      }\n    }\n    if (!invalid && pointCount !== 0) {\n      lngMid /= pointCount;\n      latMid /= pointCount;\n      this._geoCenter = new GeoPoint(lngMid, latMid);\n      this._geoBounds = new GeoBox(lngMin, latMin, lngMax, latMax);\n      xMid /= pointCount;\n      yMid /= pointCount;\n      this._viewCenter = new PointR2(xMid, yMid);\n      this._viewBounds = new BoxR2(xMin, yMin, xMax, yMax);\n      this.cullGeoFrame(viewContext.geoFrame);\n    } else {\n      this._geoCenter = GeoPoint.origin();\n      this._geoBounds = GeoBox.empty();\n      this._viewCenter = PointR2.origin();\n      this._viewBounds = BoxR2.empty();\n      this.setCulled(true);\n    }\n    this._gradientStops = gradientStops;\n    const newGeoBounds = this._geoBounds;\n    if (!oldGeoBounds.equals(newGeoBounds)) {\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n    super.didProject(viewContext);\n  }\n\n  protected onRender(viewContext: MapViewContext): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.isHidden() && !this.isCulled()) {\n      const context = renderer.context;\n      context.save();\n      if (this._gradientStops !== 0) {\n        this.renderPolylineGradient(context, this.viewFrame);\n      } else {\n        this.renderPolylineStroke(context, this.viewFrame);\n      }\n      context.restore();\n    }\n  }\n\n  protected renderPolylineStroke(context: CanvasContext, frame: BoxR2): void {\n    const childViews = this._childViews;\n    const childCount = childViews.length;\n    let pointCount = 0;\n    context.beginPath();\n    for (let i = 0; i < childCount; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof MapPointView) {\n        const {x, y} = childView.viewPoint.value!;\n        if (pointCount === 0) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n        pointCount += 1;\n      }\n    }\n    if (pointCount !== 0) {\n      const stroke = this.stroke.value;\n      if (stroke !== void 0) {\n        const size = Math.min(frame.width, frame.height);\n        const strokeWidth = this.strokeWidth.value!.pxValue(size);\n        context.strokeStyle = stroke.toString();\n        context.lineWidth = strokeWidth;\n        context.stroke();\n      }\n    }\n  }\n\n  protected renderPolylineGradient(context: CanvasContext, frame: BoxR2): void {\n    const stroke = this.stroke.value!;\n    const size = Math.min(frame.width, frame.height);\n    const strokeWidth = this.strokeWidth.value!.pxValue(size);\n    const childViews = this._childViews;\n    const childCount = childViews.length;\n    let p0: MapPointView | undefined;\n    for (let i = 0; i < childCount; i += 1) {\n      const p1 = childViews[i];\n      if (p1 instanceof MapPointView) {\n        if (p0 !== void 0) {\n          const x0 = p0.viewPoint.value!.x;\n          const y0 = p0.viewPoint.value!.y;\n          const x1 = p1.viewPoint.value!.x;\n          const y1 = p1.viewPoint.value!.y;\n          const gradient = context.createLinearGradient(x0, y0, x1, y1);\n\n          let color = p0.color.value;\n          if (color === void 0) {\n            color = stroke;\n          }\n          let opacity = p0.opacity.value;\n          if (typeof opacity === \"number\") {\n            color = color.alpha(opacity);\n          }\n          gradient.addColorStop(0, color.toString());\n\n          color = p1.color.value;\n          if (color === void 0) {\n            color = stroke;\n          }\n          opacity = p1.opacity.value;\n          if (typeof opacity === \"number\") {\n            color = color.alpha(opacity);\n          }\n          gradient.addColorStop(1, color.toString());\n\n          context.beginPath();\n          context.moveTo(x0, y0);\n          context.lineTo(x1, y1);\n          context.strokeStyle = gradient;\n          context.lineWidth = strokeWidth;\n          context.stroke();\n        }\n        p0 = p1;\n      }\n    }\n  }\n\n  get popoverFrame(): BoxR2 {\n    const viewCenter = this._viewCenter;\n    const inversePageTransform = this.pageTransform.inverse();\n    const [px, py] = inversePageTransform.transform(viewCenter.x, viewCenter.y);\n    return new BoxR2(px, py, px, py);\n  }\n\n  get viewBounds(): BoxR2 {\n    return this._viewBounds;\n  }\n\n  get hitBounds(): BoxR2 {\n    return this.viewBounds;\n  }\n\n  get geoBounds(): GeoBox {\n    return this._geoBounds;\n  }\n\n  hitTest(x: number, y: number, viewContext: MapViewContext): RenderedView | null {\n    let hit = super.hitTest(x, y, viewContext);\n    if (hit === null) {\n      const renderer = viewContext.renderer;\n      if (renderer instanceof CanvasRenderer) {\n        const context = renderer.context;\n        context.save();\n        x *= renderer.pixelRatio;\n        y *= renderer.pixelRatio;\n        hit = this.hitTestPolyline(x, y, context, this.viewFrame);\n        context.restore();\n      }\n    }\n    return hit;\n  }\n\n  protected hitTestPolyline(x: number, y: number, context: CanvasContext, frame: BoxR2): RenderedView | null {\n    const childViews = this._childViews;\n    const childCount = childViews.length;\n    let pointCount = 0;\n    context.beginPath();\n    for (let i = 0; i < childCount; i += 1) {\n      const childView = this._childViews[i];\n      if (childView instanceof MapPointView) {\n        const {x, y} = childView.viewPoint.value!;\n        if (i === 0) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n        pointCount += 1;\n      }\n    }\n    if (pointCount !== 0) {\n      let hitWidth = this._hitWidth !== void 0 ? this._hitWidth : 0;\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== void 0) {\n        const size = Math.min(frame.width, frame.height);\n        hitWidth = Math.max(hitWidth, strokeWidth.pxValue(size));\n      }\n      context.lineWidth = hitWidth;\n      if (context.isPointInStroke(x, y)) {\n        return this;\n      }\n    }\n    return null;\n  }\n\n  static fromAny(polyline: AnyMapPolylineView): MapPolylineView {\n    if (polyline instanceof MapPolylineView) {\n      return polyline;\n    } else if (typeof polyline === \"object\" && polyline !== null) {\n      const view = new MapPolylineView();\n      if (polyline.stroke !== void 0) {\n        view.stroke(polyline.stroke);\n      }\n      if (polyline.strokeWidth !== void 0) {\n        view.strokeWidth(polyline.strokeWidth);\n      }\n      if (polyline.hitWidth !== void 0) {\n        view.hitWidth(polyline.hitWidth);\n      }\n      if (polyline.font !== void 0) {\n        view.font(polyline.font);\n      }\n      if (polyline.textColor !== void 0) {\n        view.textColor(polyline.textColor);\n      }\n      const points = polyline.points;\n      if (points !== void 0) {\n        view.points(points);\n      }\n      if (polyline.hidden !== void 0) {\n        view.setHidden(polyline.hidden);\n      }\n      if (polyline.culled !== void 0) {\n        view.setCulled(polyline.culled);\n      }\n      return view;\n    }\n    throw new TypeError(\"\" + polyline);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PointR2, BoxR2} from \"@swim/math\";\nimport {AnyLength, Length} from \"@swim/length\";\nimport {AnyColor, Color} from \"@swim/color\";\nimport {AnyFont, Font} from \"@swim/font\";\nimport {Tween} from \"@swim/transition\";\nimport {CanvasContext, CanvasRenderer} from \"@swim/render\";\nimport {\n  View,\n  MemberAnimator,\n  RenderedView,\n  FillViewInit,\n  FillView,\n  StrokeViewInit,\n  StrokeView,\n} from \"@swim/view\";\nimport {GeoPoint} from \"../geo/GeoPoint\";\nimport {GeoBox} from \"../geo/GeoBox\";\nimport {MapViewContext} from \"../MapViewContext\";\nimport {MapViewInit} from \"../MapView\";\nimport {MapGraphicsView} from \"../graphics/MapGraphicsView\";\nimport {MapGraphicsViewController} from \"../graphics/MapGraphicsViewController\";\nimport {AnyMapPointView, MapPointView} from \"./MapPointView\";\n\nexport type AnyMapPolygonView = MapPolygonView | MapPolygonViewInit;\n\nexport interface MapPolygonViewInit extends MapViewInit, FillViewInit, StrokeViewInit {\n  points?: AnyMapPointView[];\n\n  clipViewport?: true;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n}\n\nexport class MapPolygonView extends MapGraphicsView implements FillView, StrokeView {\n  /** @hidden */\n  _geoCenter: GeoPoint;\n  /** @hidden */\n  _viewCenter: PointR2;\n  /** @hidden */\n  _clipViewport: boolean;\n  /** @hidden */\n  _viewBounds: BoxR2;\n  /** @hidden */\n  _geoBounds: GeoBox;\n\n  constructor() {\n    super();\n    this._geoCenter = GeoPoint.origin();\n    this._viewCenter = PointR2.origin();\n    this._clipViewport = true;\n    this._viewBounds = BoxR2.empty();\n    this._geoBounds = GeoBox.empty();\n  }\n\n  get viewController(): MapGraphicsViewController<MapPolygonView> | null {\n    return this._viewController;\n  }\n\n  points(): ReadonlyArray<MapPointView>;\n  points(points: AnyMapPointView[], tween?: Tween<GeoPoint>): this;\n  points(points?: AnyMapPointView[], tween?: Tween<GeoPoint>): ReadonlyArray<MapPointView> | this {\n    const childViews = this._childViews;\n    if (points === void 0) {\n      points = [];\n      for (let i = 0; i < childViews.length; i += 1) {\n        const childView = childViews[i];\n        if (childView instanceof MapPointView) {\n          points.push(childView);\n        }\n      }\n      return points as ReadonlyArray<MapPointView>;\n    } else {\n      const oldGeoBounds = this._geoBounds;\n      let lngMin = Infinity;\n      let latMin = Infinity;\n      let lngMax = -Infinity;\n      let latMax = -Infinity;\n      let lngMid = 0;\n      let latMid = 0;\n      let invalid = false;\n      let i = 0;\n      let j = 0;\n      while (i < childViews.length && j < points.length) {\n        const childView = childViews[i];\n        if (childView instanceof MapPointView) {\n          const point = points[j];\n          childView.setState(point);\n          const {lng, lat} = childView.geoPoint.value!;\n          lngMid += lng;\n          latMid += lat;\n          lngMin = Math.min(lngMin, lng);\n          latMin = Math.min(latMin, lat);\n          lngMax = Math.max(lng, lngMax);\n          latMax = Math.max(lat, latMax);\n          invalid = invalid || !isFinite(lng) || !isFinite(lat);\n          j += 1;\n        }\n        i += 1;\n      }\n      while (j < points.length) {\n        const point = MapPointView.fromAny(points[j]);\n        this.appendChildView(point);\n        const {lng, lat} = point.geoPoint.value!;\n        lngMid += lng;\n        latMid += lat;\n        lngMin = Math.min(lngMin, lng);\n        latMin = Math.min(latMin, lat);\n        lngMax = Math.max(lng, lngMax);\n        latMax = Math.max(lat, latMax);\n        invalid = invalid || !isFinite(lng) || !isFinite(lat);\n        i += 1;\n        j += 1;\n      }\n      while (i < childViews.length) {\n        const childView = childViews[i];\n        if (childView instanceof MapPointView) {\n          this.removeChildView(childView);\n        } else {\n          i += 1;\n        }\n      }\n      if (!invalid && j !== 0) {\n        lngMid /= j;\n        latMid /= j;\n        this._geoCenter = new GeoPoint(lngMid, latMid);\n        this._geoBounds = new GeoBox(lngMin, latMin, lngMax, latMax);\n      } else {\n        this._geoCenter = GeoPoint.origin();\n        this._geoBounds = GeoBox.empty();\n      }\n      const newGeoBounds = this._geoBounds;\n      if (!oldGeoBounds.equals(newGeoBounds)) {\n        this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n      }\n      return this;\n    }\n  }\n\n  appendPoint(point: AnyMapPointView, key?: string): MapPointView {\n    point = MapPointView.fromAny(point);\n    this.appendChildView(point, key);\n    return point;\n  }\n\n  setPoint(key: string, point: AnyMapPointView): MapPointView {\n    point = MapPointView.fromAny(point);\n    this.setChildView(key, point);\n    return point;\n  }\n\n  clipViewport(): boolean;\n  clipViewport(clipViewport: boolean): this;\n  clipViewport(clipViewport?: boolean): boolean | this {\n    if (clipViewport === void 0) {\n      return this._clipViewport;\n    } else {\n      this._clipViewport = clipViewport;\n      return this;\n    }\n  }\n\n  get geoCenter(): GeoPoint {\n    return this._geoCenter;\n  }\n\n  get viewCenter(): PointR2 {\n    return this._viewCenter;\n  }\n\n  @MemberAnimator(Color, {inherit: true})\n  fill: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Color, {inherit: true})\n  stroke: MemberAnimator<this, Color, AnyColor>;\n\n  @MemberAnimator(Length, {inherit: true})\n  strokeWidth: MemberAnimator<this, Length, AnyLength>;\n\n  @MemberAnimator(Font, {inherit: true})\n  font: MemberAnimator<this, Font, AnyFont>;\n\n  @MemberAnimator(Color, {inherit: true})\n  textColor: MemberAnimator<this, Color, AnyColor>;\n\n  protected onInsertChildView(childView: View, targetView: View | null | undefined): void {\n    super.onInsertChildView(childView, targetView);\n    if (childView instanceof MapPointView) {\n      this.onInsertPoint(childView);\n    }\n  }\n\n  protected onInsertPoint(childView: MapPointView): void {\n    childView.requireUpdate(View.NeedsAnimate | View.NeedsProject);\n  }\n\n  protected didProject(viewContext: MapViewContext): void {\n    const oldGeoBounds = this._geoBounds;\n    let lngMin = Infinity;\n    let latMin = Infinity;\n    let lngMax = -Infinity;\n    let latMax = -Infinity;\n    let lngMid = 0;\n    let latMid = 0;\n    let xMin = Infinity;\n    let yMin = Infinity;\n    let xMax = -Infinity;\n    let yMax = -Infinity;\n    let xMid = 0;\n    let yMid = 0;\n    let invalid = false;\n    let pointCount = 0;\n    const childViews = this._childViews;\n    for (let i = 0; i < childViews.length; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof MapPointView) {\n        const {lng, lat} = childView.geoPoint.value!;\n        lngMid += lng;\n        latMid += lat;\n        lngMin = Math.min(lngMin, lng);\n        latMin = Math.min(latMin, lat);\n        lngMax = Math.max(lng, lngMax);\n        latMax = Math.max(lat, latMax);\n        invalid = invalid || !isFinite(lng) || !isFinite(lat);\n        const {x, y} = childView.viewPoint.value!;\n        xMin = Math.min(xMin, x);\n        yMin = Math.min(yMin, y);\n        xMax = Math.max(x, xMax);\n        yMax = Math.max(y, yMax);\n        xMid += x;\n        yMid += x;\n        invalid = invalid || !isFinite(x) || !isFinite(y);\n        pointCount += 1;\n      }\n    }\n    if (!invalid && pointCount !== 0) {\n      lngMid /= pointCount;\n      latMid /= pointCount;\n      this._geoCenter = new GeoPoint(lngMid, latMid);\n      this._geoBounds = new GeoBox(lngMin, latMin, lngMax, latMax);\n      xMid /= pointCount;\n      yMid /= pointCount;\n      this._viewCenter = new PointR2(xMid, yMid);\n      this._viewBounds = new BoxR2(xMin, yMin, xMax, yMax);\n      if (viewContext.geoFrame.intersects(this._geoBounds)) {\n        const frame = this.viewFrame;\n        const bounds = this._viewBounds;\n        // check if 9x9 view frame fully contains view bounds\n        const contained = !this._clipViewport\n                       || frame.xMin - 4 * frame.width <= bounds.xMin\n                       && bounds.xMax <= frame.xMax + 4 * frame.width\n                       && frame.yMin - 4 * frame.height <= bounds.yMin\n                       && bounds.yMax <= frame.yMax + 4 * frame.height;\n        const culled = !contained || !frame.intersects(bounds);\n        this.setCulled(culled);\n      } else {\n        this.setCulled(true);\n      }\n    } else {\n      this._geoCenter = GeoPoint.origin();\n      this._geoBounds = GeoBox.empty();\n      this._viewCenter = PointR2.origin();\n      this._viewBounds = BoxR2.empty();\n      this.setCulled(true);\n    }\n    const newGeoBounds = this._geoBounds;\n    if (!oldGeoBounds.equals(newGeoBounds)) {\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n    super.didProject(viewContext);\n  }\n\n  protected onRender(viewContext: MapViewContext): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.isHidden() && !this.isCulled()) {\n      const context = renderer.context;\n      context.save();\n      this.renderPolygon(context, this.viewFrame);\n      context.restore();\n    }\n  }\n\n  protected renderPolygon(context: CanvasContext, frame: BoxR2): void {\n    const childViews = this._childViews;\n    const childCount = childViews.length;\n    let pointCount = 0;\n    context.beginPath();\n    for (let i = 0; i < childCount; i += 1) {\n      const childView = childViews[i];\n      if (childView instanceof MapPointView) {\n        const {x, y} = childView.viewPoint.value!;\n        if (pointCount === 0) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n        pointCount += 1;\n      }\n    }\n    context.closePath();\n    if (pointCount !== 0) {\n      const fill = this.fill.value;\n      if (fill !== void 0) {\n        context.fillStyle = fill.toString();\n        context.fill();\n      }\n      const stroke = this.stroke.value;\n      const strokeWidth = this.strokeWidth.value;\n      if (stroke !== void 0 && strokeWidth !== void 0) {\n        const size = Math.min(frame.width, frame.height);\n        context.lineWidth = strokeWidth.pxValue(size);\n        context.strokeStyle = stroke.toString();\n        context.stroke();\n      }\n    }\n  }\n\n  get popoverFrame(): BoxR2 {\n    const viewCenter = this._viewCenter;\n    const inversePageTransform = this.pageTransform.inverse();\n    const [px, py] = inversePageTransform.transform(viewCenter.x, viewCenter.y);\n    return new BoxR2(px, py, px, py);\n  }\n\n  get viewBounds(): BoxR2 {\n    return this._viewBounds;\n  }\n\n  get hitBounds(): BoxR2 {\n    return this.viewBounds;\n  }\n\n  get geoBounds(): GeoBox {\n    return this._geoBounds;\n  }\n\n  hitTest(x: number, y: number, viewContext: MapViewContext): RenderedView | null {\n    let hit = super.hitTest(x, y, viewContext);\n    if (hit === null) {\n      const renderer = viewContext.renderer;\n      if (renderer instanceof CanvasRenderer) {\n        const context = renderer.context;\n        context.save();\n        x *= renderer.pixelRatio;\n        y *= renderer.pixelRatio;\n        hit = this.hitTestPolygon(x, y, context, this.viewFrame);\n        context.restore();\n      }\n    }\n    return hit;\n  }\n\n  protected hitTestPolygon(x: number, y: number, context: CanvasContext, frame: BoxR2): RenderedView | null {\n    const childViews = this._childViews;\n    const childCount = childViews.length;\n    let pointCount = 0;\n    context.beginPath();\n    for (let i = 0; i < childCount; i += 1) {\n      const childView = this._childViews[i];\n      if (childView instanceof MapPointView) {\n        const {x, y} = childView.viewPoint.value!;\n        if (i === 0) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n        pointCount += 1;\n      }\n    }\n    context.closePath();\n    if (pointCount !== 0) {\n      if (this.fill.value !== void 0 && context.isPointInPath(x, y)) {\n        return this;\n      }\n      if (this.stroke.value !== void 0) {\n        const strokeWidth = this.strokeWidth.value;\n        if (strokeWidth !== void 0) {\n          const size = Math.min(frame.width, frame.height);\n          context.lineWidth = strokeWidth.pxValue(size);\n          if (context.isPointInStroke(x, y)) {\n            return this;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  static fromAny(polygon: AnyMapPolygonView): MapPolygonView {\n    if (polygon instanceof MapPolygonView) {\n      return polygon;\n    } else if (typeof polygon === \"object\" && polygon !== null) {\n      const view = new MapPolygonView();\n      if (polygon.clipViewport !== void 0) {\n        view.clipViewport(polygon.clipViewport);\n      }\n      if (polygon.fill !== void 0) {\n        view.fill(polygon.fill);\n      }\n      if (polygon.stroke !== void 0) {\n        view.stroke(polygon.stroke);\n      }\n      if (polygon.strokeWidth !== void 0) {\n        view.strokeWidth(polygon.strokeWidth);\n      }\n      if (polygon.font !== void 0) {\n        view.font(polygon.font);\n      }\n      if (polygon.textColor !== void 0) {\n        view.textColor(polygon.textColor);\n      }\n      const points = polygon.points;\n      if (points !== void 0) {\n        view.points(points);\n      }\n      if (polygon.hidden !== void 0) {\n        view.setHidden(polygon.hidden);\n      }\n      if (polygon.culled !== void 0) {\n        view.setCulled(polygon.culled);\n      }\n      return view;\n    }\n    throw new TypeError(\"\" + polygon);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as mapboxgl from \"mapbox-gl\";\nimport {AnyPointR2, PointR2} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox, GeoProjection} from \"@swim/map\";\n\nexport class MapboxProjection implements GeoProjection {\n  /** @hidden */\n  readonly _map: mapboxgl.Map;\n\n  constructor(map: mapboxgl.Map) {\n    this._map = map;\n  }\n\n  get map(): mapboxgl.Map {\n    return this._map;\n  }\n\n  get bounds(): GeoBox {\n    const bounds = this._map.getBounds();\n    return new GeoBox(bounds.getWest(), bounds.getSouth(),\n                      bounds.getEast(), bounds.getNorth());\n  }\n\n  project(geoPoint: AnyGeoPoint): PointR2;\n  project(lng: number, lat: number): PointR2;\n  project(lng: AnyGeoPoint | number, lat?: number): PointR2 {\n    let geoPoint: mapboxgl.LngLatLike;\n    if (typeof lng === \"number\") {\n      geoPoint = new mapboxgl.LngLat(lng, lat!);\n    } else {\n      geoPoint = lng;\n    }\n    const point = this._map.project(geoPoint);\n    return new PointR2(point.x, point.y);\n  }\n\n  unproject(viewPoint: AnyPointR2): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: AnyPointR2 | number, y?: number): GeoPoint {\n    let viewPoint: mapboxgl.PointLike;\n    if (typeof x === \"number\") {\n      viewPoint = new mapboxgl.Point(x, y!);\n    } else if (Array.isArray(x)) {\n      viewPoint = x;\n    } else {\n      viewPoint = new mapboxgl.Point(x.x, x.y);\n    }\n    const point = this._map.unproject(viewPoint);\n    return new GeoPoint(point.lng, point.lat);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as mapboxgl from \"mapbox-gl\";\nimport {AnyPointR2, PointR2} from \"@swim/math\";\nimport {ViewFlags, View, RenderedViewContext, RenderedView, CanvasView} from \"@swim/view\";\nimport {AnyGeoPoint, GeoPoint, GeoBox, MapViewContext, MapGraphicsView} from \"@swim/map\";\nimport {MapboxProjection} from \"./MapboxProjection\";\nimport {MapboxViewObserver} from \"./MapboxViewObserver\";\nimport {MapboxViewController} from \"./MapboxViewController\";\n\nexport class MapboxView extends MapGraphicsView {\n  /** @hidden */\n  readonly _map: mapboxgl.Map;\n  /** @hidden */\n  _geoProjection: MapboxProjection;\n  /** @hidden */\n  _mapZoom: number;\n  /** @hidden */\n  _mapHeading: number;\n  /** @hidden */\n  _mapTilt: number;\n\n  constructor(map: mapboxgl.Map) {\n    super();\n    this.onMapRender = this.onMapRender.bind(this);\n    this._map = map;\n    this._geoProjection = new MapboxProjection(this._map);\n    this._mapZoom = map.getZoom();\n    this._mapHeading = map.getBearing();\n    this._mapTilt = map.getPitch();\n    this.initMap(this._map);\n  }\n\n  get map(): mapboxgl.Map {\n    return this._map;\n  }\n\n  protected initMap(map: mapboxgl.Map): void {\n    map.on(\"render\", this.onMapRender);\n  }\n\n  get viewController(): MapboxViewController | null {\n    return this._viewController;\n  }\n\n  project(lnglat: AnyGeoPoint): PointR2;\n  project(lng: number, lat: number): PointR2;\n  project(lng: AnyGeoPoint | number, lat?: number): PointR2 {\n    return this._geoProjection.project.apply(this._geoProjection, arguments);\n  }\n\n  unproject(point: AnyPointR2): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: AnyPointR2 | number, y?: number): GeoPoint {\n    return this._geoProjection.unproject.apply(this._geoProjection, arguments);\n  }\n\n  get geoProjection(): MapboxProjection {\n    return this._geoProjection;\n  }\n\n  setGeoProjection(geoProjection: MapboxProjection): void {\n    this.willSetGeoProjection(geoProjection);\n    this._geoProjection = geoProjection;\n    this.onSetGeoProjection(geoProjection);\n    this.didSetGeoProjection(geoProjection);\n  }\n\n  protected willSetGeoProjection(geoProjection: MapboxProjection): void {\n    this.willObserve(function (viewObserver: MapboxViewObserver): void {\n      if (viewObserver.viewWillSetGeoProjection !== void 0) {\n        viewObserver.viewWillSetGeoProjection(geoProjection, this);\n      }\n    });\n  }\n\n  protected onSetGeoProjection(geoProjection: MapboxProjection): void {\n    if (!this.isHidden() && !this.isCulled()) {\n      this.requireUpdate(View.NeedsProject, true);\n    }\n  }\n\n  protected didSetGeoProjection(geoProjection: MapboxProjection): void {\n    this.didObserve(function (viewObserver: MapboxViewObserver): void {\n      if (viewObserver.viewDidSetGeoProjection !== void 0) {\n        viewObserver.viewDidSetGeoProjection(geoProjection, this);\n      }\n    });\n  }\n\n  get mapZoom(): number {\n    return this._mapZoom;\n  }\n\n  setMapZoom(newMapZoom: number): void {\n    const oldMapZoom = this._mapZoom;\n    if (oldMapZoom !== newMapZoom) {\n      this.willSetMapZoom(newMapZoom, oldMapZoom);\n      this._mapZoom = newMapZoom;\n      this.onSetMapZoom(newMapZoom, oldMapZoom);\n      this.didSetMapZoom(newMapZoom, oldMapZoom);\n    }\n  }\n\n  protected willSetMapZoom(newMapZoom: number, oldMapZoom: number): void {\n    this.didObserve(function (viewObserver: MapboxViewObserver): void {\n      if (viewObserver.viewWillSetMapZoom !== void 0) {\n        viewObserver.viewWillSetMapZoom(newMapZoom, oldMapZoom, this);\n      }\n    });\n  }\n\n  protected onSetMapZoom(newZoom: number, oldZoom: number): void {\n    // hook\n  }\n\n  protected didSetMapZoom(newZoom: number, oldZoom: number): void {\n    this.didObserve(function (viewObserver: MapboxViewObserver): void {\n      if (viewObserver.viewDidSetMapZoom !== void 0) {\n        viewObserver.viewDidSetMapZoom(newZoom, oldZoom, this);\n      }\n    });\n  }\n\n  get mapHeading(): number {\n    return this._mapHeading;\n  }\n\n  get mapTilt(): number {\n    return this._mapTilt;\n  }\n\n  protected onPower(): void {\n    super.onPower();\n    this.requireUpdate(View.NeedsProject);\n  }\n\n  cascadeProcess(processFlags: ViewFlags, viewContext: RenderedViewContext): void {\n    viewContext = this.mapViewContext(viewContext);\n    super.cascadeProcess(processFlags, viewContext);\n  }\n\n  cascadeDisplay(displayFlags: ViewFlags, viewContext: RenderedViewContext): void {\n    viewContext = this.mapViewContext(viewContext);\n    super.cascadeDisplay(displayFlags, viewContext);\n  }\n\n  childViewContext(childView: View, viewContext: MapViewContext): MapViewContext {\n    return viewContext;\n  }\n\n  mapViewContext(viewContext: RenderedViewContext): MapViewContext {\n    const mapViewContext = Object.create(viewContext);\n    mapViewContext.geoProjection = this._geoProjection;\n    mapViewContext.geoFrame = this.geoFrame;\n    mapViewContext.mapZoom = this._mapZoom;\n    mapViewContext.mapHeading = this._mapHeading;\n    mapViewContext.mapTilt = this._mapTilt;\n    return mapViewContext;\n  }\n\n  get geoFrame(): GeoBox {\n    const bounds = this._map.getBounds();\n    return new GeoBox(bounds.getWest(), bounds.getSouth(),\n                      bounds.getEast(), bounds.getNorth());\n  }\n\n  protected onMapRender(): void {\n    this._mapHeading = this._map.getBearing();\n    this._mapTilt = this._map.getPitch();\n    this.setMapZoom(this._map.getZoom());\n    this.setGeoProjection(this._geoProjection);\n  }\n\n  hitTest(x: number, y: number, viewContext: RenderedViewContext): RenderedView | null {\n    viewContext = this.mapViewContext(viewContext);\n    return super.hitTest(x, y, viewContext);\n  }\n\n  overlayCanvas(): CanvasView | null {\n    if (this._parentView !== null) {\n      return this.canvasView;\n    } else {\n      const map = this._map;\n      View.fromNode(map.getContainer());\n      const canvasContainer = View.fromNode(map.getCanvasContainer());\n      const canvas = canvasContainer.append(\"canvas\");\n      canvas.append(this);\n      return canvas;\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {MapGraphicsViewController} from \"@swim/map\";\nimport {MapboxProjection} from \"./MapboxProjection\";\nimport {MapboxView} from \"./MapboxView\";\nimport {MapboxViewObserver} from \"./MapboxViewObserver\";\n\nexport class MapboxViewController<V extends MapboxView = MapboxView> extends MapGraphicsViewController<V> implements MapboxViewObserver<V> {\n  viewWillSetGeoProjection(geoProjection: MapboxProjection, view: V): void {\n    // hook\n  }\n\n  viewDidSetGeoProjection(geoProjection: MapboxProjection, view: V): void {\n    // hook\n  }\n\n  viewWillSetMapZoom(newMapZoom: number, oldMapZoom: number, view: V): void {\n    // hook\n  }\n\n  viewDidSetMapZoom(newMapZoom: number, oldMapZoom: number, view: V): void {\n    // hook\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox, GeoProjection} from \"@swim/map\";\nimport {GoogleMapView} from \"./GoogleMapView\";\n\nexport class GoogleMapProjection implements GeoProjection {\n  /** @hidden */\n  readonly _mapView: GoogleMapView;\n\n  constructor(mapView: GoogleMapView) {\n    this._mapView = mapView;\n  }\n\n  get map(): google.maps.Map {\n    return this._mapView._map;\n  }\n\n  get bounds(): GeoBox {\n    const bounds = this._mapView._map.getBounds()!;\n    const sw = bounds.getSouthWest();\n    const ne = bounds.getNorthEast();\n    return new GeoBox(sw.lng(), sw.lat(), ne.lng(), ne.lat());\n  }\n\n  project(geoPoint: AnyGeoPoint): PointR2;\n  project(lng: number, lat: number): PointR2;\n  project(lng: AnyGeoPoint | number, lat?: number): PointR2 {\n    let geoPoint: google.maps.LatLng;\n    if (typeof lng === \"number\") {\n      geoPoint = new google.maps.LatLng(lat!, lng);\n    } else if (Array.isArray(lng)) {\n      geoPoint = new google.maps.LatLng(lng[1], lng[0]);\n    } else {\n      geoPoint = new google.maps.LatLng(lng.lat, lng.lng);\n    }\n    const projection = this._mapView._mapOverlay!.getProjection()!;\n    const point = projection.fromLatLngToContainerPixel(geoPoint);\n    return new PointR2(point.x, point.y);\n  }\n\n  unproject(viewPoint: AnyPointR2): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: AnyPointR2 | number, y?: number): GeoPoint {\n    let viewPoint: google.maps.Point;\n    if (typeof x === \"number\") {\n      viewPoint = new google.maps.Point(x, y!);\n    } else if (Array.isArray(x)) {\n      viewPoint = new google.maps.Point(x[0], x[1]);\n    } else {\n      viewPoint = new google.maps.Point(x.x, x.y);\n    }\n    const projection = this._mapView._mapOverlay!.getProjection()!;\n    const point = projection.fromContainerPixelToLatLng(viewPoint);\n    return new GeoPoint(point.lng(), point.lat());\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2} from \"@swim/math\";\nimport {ViewFlags, View, RenderedViewContext, RenderedView, ViewHtml, HtmlView, CanvasView} from \"@swim/view\";\nimport {AnyGeoPoint, GeoPoint, GeoBox, MapViewContext, MapGraphicsView} from \"@swim/map\";\nimport {GoogleMapProjection} from \"./GoogleMapProjection\";\nimport {GoogleMapViewObserver} from \"./GoogleMapViewObserver\";\nimport {GoogleMapViewController} from \"./GoogleMapViewController\";\n\nexport class GoogleMapView extends MapGraphicsView {\n  /** @hidden */\n  readonly _map: google.maps.Map;\n  /** @hidden */\n  _geoProjection: GoogleMapProjection;\n  /** @hidden */\n  _mapOverlay: google.maps.OverlayView | null;\n  /** @hidden */\n  _mapZoom: number;\n  /** @hidden */\n  _mapHeading: number;\n  /** @hidden */\n  _mapTilt: number;\n\n  constructor(map: google.maps.Map) {\n    super();\n    this.onMapRender = this.onMapRender.bind(this);\n    this._map = map;\n    this._geoProjection = new GoogleMapProjection(this);\n    this._mapOverlay = null;\n    this._mapZoom = map.getZoom();\n    this._mapHeading = map.getHeading();\n    this._mapTilt = map.getTilt();\n    this.initMap(map);\n  }\n\n  get map(): google.maps.Map {\n    return this._map;\n  }\n\n  protected initMap(map: google.maps.Map): void {\n    // hook\n  }\n\n  get viewController(): GoogleMapViewController | null {\n    return this._viewController;\n  }\n\n  project(lnglat: AnyGeoPoint): PointR2;\n  project(lng: number, lat: number): PointR2;\n  project(lng: AnyGeoPoint | number, lat?: number): PointR2 {\n    return this._geoProjection.project.apply(this._geoProjection, arguments);\n  }\n\n  unproject(point: AnyPointR2): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: AnyPointR2 | number, y?: number): GeoPoint {\n    return this._geoProjection.unproject.apply(this._geoProjection, arguments);\n  }\n\n  get geoProjection(): GoogleMapProjection {\n    return this._geoProjection;\n  }\n\n  setGeoProjection(geoProjection: GoogleMapProjection): void {\n    this.willSetGeoProjection(geoProjection);\n    this._geoProjection = geoProjection;\n    this.onSetGeoProjection(geoProjection);\n    this.didSetGeoProjection(geoProjection);\n  }\n\n  protected willSetGeoProjection(geoProjection: GoogleMapProjection): void {\n    this.willObserve(function (viewObserver: GoogleMapViewObserver): void {\n      if (viewObserver.viewWillSetGeoProjection !== void 0) {\n        viewObserver.viewWillSetGeoProjection(geoProjection, this);\n      }\n    });\n  }\n\n  protected onSetGeoProjection(geoProjection: GoogleMapProjection): void {\n    if (!this.isHidden() && !this.isCulled()) {\n      this.requireUpdate(View.NeedsProject, true);\n    }\n  }\n\n  protected didSetGeoProjection(geoProjection: GoogleMapProjection): void {\n    this.didObserve(function (viewObserver: GoogleMapViewObserver): void {\n      if (viewObserver.viewDidSetGeoProjection !== void 0) {\n        viewObserver.viewDidSetGeoProjection(geoProjection, this);\n      }\n    });\n  }\n\n  get mapOverlay(): google.maps.OverlayView | null {\n    return this._mapOverlay;\n  }\n\n  get mapZoom(): number {\n    return this._mapZoom;\n  }\n\n  setMapZoom(newMapZoom: number): void {\n    const oldMapZoom = this._mapZoom;\n    if (oldMapZoom !== newMapZoom) {\n      this.willSetMapZoom(newMapZoom, oldMapZoom);\n      this._mapZoom = newMapZoom;\n      this.onSetMapZoom(newMapZoom, oldMapZoom);\n      this.didSetMapZoom(newMapZoom, oldMapZoom);\n    }\n  }\n\n  protected willSetMapZoom(newMapZoom: number, oldMapZoom: number): void {\n    this.didObserve(function (viewObserver: GoogleMapViewObserver): void {\n      if (viewObserver.viewWillSetMapZoom !== void 0) {\n        viewObserver.viewWillSetMapZoom(newMapZoom, oldMapZoom, this);\n      }\n    });\n  }\n\n  protected onSetMapZoom(newMapZoom: number, oldMapZoom: number): void {\n    // hook\n  }\n\n  protected didSetMapZoom(newMapZoom: number, oldMapZoom: number): void {\n    this.didObserve(function (viewObserver: GoogleMapViewObserver): void {\n      if (viewObserver.viewDidSetMapZoom !== void 0) {\n        viewObserver.viewDidSetMapZoom(newMapZoom, oldMapZoom, this);\n      }\n    });\n  }\n\n  get mapHeading(): number {\n    return this._mapHeading;\n  }\n\n  get mapTilt(): number {\n    return this._mapTilt;\n  }\n\n  cascadeProcess(processFlags: ViewFlags, viewContext: RenderedViewContext): void {\n    viewContext = this.mapViewContext(viewContext);\n    super.cascadeProcess(processFlags, viewContext);\n  }\n\n  cascadeDisplay(displayFlags: ViewFlags, viewContext: RenderedViewContext): void {\n    viewContext = this.mapViewContext(viewContext);\n    super.cascadeDisplay(displayFlags, viewContext);\n  }\n\n  childViewContext(childView: View, viewContext: MapViewContext): MapViewContext {\n    return viewContext;\n  }\n\n  mapViewContext(viewContext: RenderedViewContext): MapViewContext {\n    const mapViewContext = Object.create(viewContext);\n    mapViewContext.geoProjection = this._geoProjection;\n    mapViewContext.geoFrame = this.geoFrame;\n    mapViewContext.mapZoom = this._mapZoom;\n    mapViewContext.mapHeading = this._mapHeading;\n    mapViewContext.mapTilt = this._mapTilt;\n    return mapViewContext;\n  }\n\n  get geoFrame(): GeoBox {\n    const bounds = this._map.getBounds()!;\n    const sw = bounds.getSouthWest();\n    const ne = bounds.getNorthEast();\n    return new GeoBox(sw.lng(), sw.lat(), ne.lng(), ne.lat());\n  }\n\n  hitTest(x: number, y: number, viewContext: RenderedViewContext): RenderedView | null {\n    viewContext = this.mapViewContext(viewContext);\n    return super.hitTest(x, y, viewContext);\n  }\n\n  protected onMapRender(): void {\n    this._mapHeading = this._map.getHeading();\n    this._mapTilt = this._map.getTilt();\n    this.setMapZoom(this._map.getZoom());\n    this.setGeoProjection(this._geoProjection);\n  }\n\n  overlayCanvas(): CanvasView | null {\n    if (this._parentView !== null) {\n      return this.canvasView;\n    } else {\n      class GoogleMapOverlayView extends google.maps.OverlayView {\n        readonly _mapView: GoogleMapView;\n        _canvasView: CanvasView | null;\n        constructor(mapView: GoogleMapView) {\n          super();\n          this._mapView = mapView;\n          this._canvasView = null;\n        }\n        onAdd(): void {\n          const panes = this.getPanes();\n          const overlayMouseTarget = GoogleMapView.materializeAncestors(panes.overlayMouseTarget as HTMLElement);\n          const overlayContainer = overlayMouseTarget.parentView as HtmlView;\n          const container = overlayContainer.parentView as HtmlView;\n          this._canvasView = container.append(\"canvas\");\n          this._canvasView.append(this._mapView);\n        }\n        onRemove(): void {\n          if (this._canvasView !== null) {\n            this._canvasView.remove();\n            this._canvasView = null;\n          }\n        }\n        draw(): void {\n          this._mapView.onMapRender();\n        }\n      }\n      const mapOverlay = new GoogleMapOverlayView(this);\n      mapOverlay.setMap(this._map);\n      this._mapOverlay = mapOverlay;\n      return mapOverlay._canvasView;\n    }\n  }\n\n  private static materializeAncestors(node: HTMLElement): HtmlView {\n    const parentNode = node.parentNode;\n    if (parentNode instanceof HTMLElement && !(parentNode as ViewHtml).view) {\n      GoogleMapView.materializeAncestors(parentNode);\n    }\n    return View.fromNode(node);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {MapGraphicsViewController} from \"@swim/map\";\nimport {GoogleMapProjection} from \"./GoogleMapProjection\";\nimport {GoogleMapView} from \"./GoogleMapView\";\nimport {GoogleMapViewObserver} from \"./GoogleMapViewObserver\";\n\nexport class GoogleMapViewController<V extends GoogleMapView = GoogleMapView> extends MapGraphicsViewController<V> implements GoogleMapViewObserver<V> {\n  viewWillSetGeoProjection(geoProjection: GoogleMapProjection, view: V): void {\n    // hook\n  }\n\n  viewDidSetGeoProjection(geoProjection: GoogleMapProjection, view: V): void {\n    // hook\n  }\n\n  viewWillSetMapZoom(newMapZoom: number, oldMapZoom: number, view: V): void {\n    // hook\n  }\n\n  viewDidSetMapZoom(newMapZoom: number, oldMapZoom: number, view: V): void {\n    // hook\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {GeoProjection} from \"@swim/map\";\n\nexport interface EsriProjection extends GeoProjection {\n  readonly map: __esri.View;\n}\n\n/** @hidden */\nexport const EsriProjection = {\n  webMercatorUtils: void 0 as __esri.webMercatorUtils | undefined,\n\n  init(): void {\n    if (EsriProjection.webMercatorUtils === void 0) {\n      (window.require as any)([\"esri/geometry/support/webMercatorUtils\"], function (webMercatorUtils: __esri.webMercatorUtils): void {\n        EsriProjection.webMercatorUtils = webMercatorUtils;\n      });\n    }\n  },\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2} from \"@swim/math\";\nimport {ViewFlags, View, RenderedViewContext, RenderedView, CanvasView} from \"@swim/view\";\nimport {AnyGeoPoint, GeoPoint, MapViewContext, MapGraphicsView} from \"@swim/map\";\nimport {EsriProjection} from \"./EsriProjection\";\nimport {EsriViewObserver} from \"./EsriViewObserver\";\nimport {EsriViewController} from \"./EsriViewController\";\n\nexport abstract class EsriView extends MapGraphicsView {\n  constructor() {\n    super();\n    EsriProjection.init();\n  }\n\n  abstract get map(): __esri.View;\n\n  get viewController(): EsriViewController | null {\n    return this._viewController;\n  }\n\n  abstract project(lnglat: AnyGeoPoint): PointR2;\n  abstract project(lng: number, lat: number): PointR2;\n\n  abstract unproject(point: AnyPointR2): GeoPoint;\n  abstract unproject(x: number, y: number): GeoPoint;\n\n  abstract get geoProjection(): EsriProjection;\n\n  protected willSetGeoProjection(geoProjection: EsriProjection): void {\n    this.willObserve(function (viewObserver: EsriViewObserver): void {\n      if (viewObserver.viewWillSetGeoProjection !== void 0) {\n        viewObserver.viewWillSetGeoProjection(geoProjection, this);\n      }\n    });\n  }\n\n  protected onSetGeoProjection(geoProjection: EsriProjection): void {\n    if (!this.isHidden() && !this.isCulled()) {\n      this.requireUpdate(View.NeedsProject, false);\n    }\n  }\n\n  protected didSetGeoProjection(geoProjection: EsriProjection): void {\n    this.didObserve(function (viewObserver: EsriViewObserver): void {\n      if (viewObserver.viewDidSetGeoProjection !== void 0) {\n        viewObserver.viewDidSetGeoProjection(geoProjection, this);\n      }\n    });\n  }\n\n  abstract get mapZoom(): number;\n\n  protected willSetMapZoom(newMapZoom: number, oldMapZoom: number): void {\n    this.didObserve(function (viewObserver: EsriViewObserver): void {\n      if (viewObserver.viewWillSetMapZoom !== void 0) {\n        viewObserver.viewWillSetMapZoom(newMapZoom, oldMapZoom, this);\n      }\n    });\n  }\n\n  protected onSetMapZoom(newMapZoom: number, oldMapZoom: number): void {\n    // hook\n  }\n\n  protected didSetMapZoom(newMapZoom: number, oldMapZoom: number): void {\n    this.didObserve(function (viewObserver: EsriViewObserver): void {\n      if (viewObserver.viewDidSetMapZoom !== void 0) {\n        viewObserver.viewDidSetMapZoom(newMapZoom, oldMapZoom, this);\n      }\n    });\n  }\n\n  abstract get mapHeading(): number;\n\n  abstract get mapTilt(): number;\n\n  cascadeProcess(processFlags: ViewFlags, viewContext: RenderedViewContext): void {\n    viewContext = this.mapViewContext(viewContext);\n    super.cascadeProcess(processFlags, viewContext);\n  }\n\n  cascadeDisplay(displayFlags: ViewFlags, viewContext: RenderedViewContext): void {\n    viewContext = this.mapViewContext(viewContext);\n    super.cascadeDisplay(displayFlags, viewContext);\n  }\n\n  childViewContext(childView: View, viewContext: MapViewContext): MapViewContext {\n    return viewContext;\n  }\n\n  mapViewContext(viewContext: RenderedViewContext): MapViewContext {\n    const mapViewContext = Object.create(viewContext);\n    mapViewContext.geoProjection = this.geoProjection;\n    mapViewContext.geoFrame = this.geoFrame;\n    mapViewContext.mapZoom = this.mapZoom;\n    mapViewContext.mapHeading = this.mapHeading;\n    mapViewContext.mapTilt = this.mapTilt;\n    return mapViewContext;\n  }\n\n  hitTest(x: number, y: number, viewContext: RenderedViewContext): RenderedView | null {\n    viewContext = this.mapViewContext(viewContext);\n    return super.hitTest(x, y, viewContext);\n  }\n\n  abstract overlayCanvas(): CanvasView | null;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {MapGraphicsViewController} from \"@swim/map\";\nimport {EsriProjection} from \"./EsriProjection\";\nimport {EsriView} from \"./EsriView\";\nimport {EsriViewObserver} from \"./EsriViewObserver\";\n\nexport class EsriViewController<V extends EsriView = EsriView> extends MapGraphicsViewController<V> implements EsriViewObserver<V> {\n  viewWillSetGeoProjection(geoProjection: EsriProjection, view: V): void {\n    // hook\n  }\n\n  viewDidSetGeoProjection(geoProjection: EsriProjection, view: V): void {\n    // hook\n  }\n\n  viewWillSetMapZoom(newMapZoom: number, oldMapZoom: number, view: V): void {\n    // hook\n  }\n\n  viewDidSetMapZoom(newMapZoom: number, oldMapZoom: number, view: V): void {\n    // hook\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/map\";\nimport {EsriProjection} from \"./EsriProjection\";\n\nexport class EsriMapViewProjection implements EsriProjection {\n  /** @hidden */\n  readonly _map: __esri.MapView;\n\n  constructor(map: __esri.MapView) {\n    EsriProjection.init();\n    this._map = map;\n  }\n\n  get map(): __esri.MapView {\n    return this._map;\n  }\n\n  get bounds(): GeoBox {\n    let extent = this._map.extent;\n    if (extent !== null) {\n      extent = EsriProjection.webMercatorUtils!.webMercatorToGeographic(extent) as __esri.Extent;\n    }\n    if (extent !== null) {\n      return new GeoBox(extent.xmin, extent.ymin, extent.xmax, extent.ymax);\n    } else {\n      return GeoBox.globe();\n    }\n  }\n\n  project(geoPoint: AnyGeoPoint): PointR2;\n  project(lng: number, lat: number): PointR2;\n  project(lng: AnyGeoPoint | number, lat?: number): PointR2 {\n    let geoPoint: __esri.Point;\n    if (typeof lng === \"number\") {\n      geoPoint = {x: lng, y: lat!, spatialReference: {wkid: 4326}} as __esri.Point;\n    } else if (Array.isArray(lng)) {\n      geoPoint = {x: lng[0], y: lng[1], spatialReference: {wkid: 4326}} as __esri.Point;\n    } else {\n      geoPoint = {x: lng.lng, y: lng.lat, spatialReference: {wkid: 4326}} as __esri.Point;\n    }\n    const point = this._map.toScreen(geoPoint);\n    return point !== null ? new PointR2(point.x, point.y) : PointR2.origin();\n  }\n\n  unproject(viewPoint: AnyPointR2): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: AnyPointR2 | number, y?: number): GeoPoint {\n    let viewPoint: __esri.ScreenPoint;\n    if (typeof x === \"number\") {\n      viewPoint = {x: x, y: y!};\n    } else if (Array.isArray(x)) {\n      viewPoint = {x: x[0], y: x[1]};\n    } else {\n      viewPoint = x;\n    }\n    const point = this._map.toMap(viewPoint);\n    return point !== null ? new GeoPoint(point.longitude, point.latitude) : GeoPoint.origin();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2} from \"@swim/math\";\nimport {View, CanvasView} from \"@swim/view\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/map\";\nimport {EsriProjection} from \"./EsriProjection\";\nimport {EsriView} from \"./EsriView\";\nimport {EsriMapViewProjection} from \"./EsriMapViewProjection\";\nimport {EsriMapViewController} from \"./EsriMapViewController\";\n\nexport class EsriMapView extends EsriView {\n  /** @hidden */\n  readonly _map: __esri.MapView;\n  /** @hidden */\n  _geoProjection: EsriMapViewProjection;\n  /** @hidden */\n  _mapZoom: number;\n  /** @hidden */\n  _mapHeading: number;\n\n  constructor(map: __esri.MapView) {\n    super();\n    this.onMapRender = this.onMapRender.bind(this);\n    this._map = map;\n    this._geoProjection = new EsriMapViewProjection(this._map);\n    this._mapZoom = map.zoom;\n    this._mapHeading = map.rotation;\n    this.initMap(this._map);\n  }\n\n  get map(): __esri.MapView {\n    return this._map;\n  }\n\n  protected initMap(map: __esri.MapView): void {\n    map.watch(\"extent\", this.onMapRender);\n  }\n\n  get viewController(): EsriMapViewController | null {\n    return this._viewController;\n  }\n\n  project(lnglat: AnyGeoPoint): PointR2;\n  project(lng: number, lat: number): PointR2;\n  project(lng: AnyGeoPoint | number, lat?: number): PointR2 {\n    return this._geoProjection.project.apply(this._geoProjection, arguments);\n  }\n\n  unproject(point: AnyPointR2): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: AnyPointR2 | number, y?: number): GeoPoint {\n    return this._geoProjection.unproject.apply(this._geoProjection, arguments);\n  }\n\n  get geoProjection(): EsriMapViewProjection {\n    return this._geoProjection;\n  }\n\n  setGeoProjection(geoProjection: EsriMapViewProjection): void {\n    this.willSetGeoProjection(geoProjection);\n    this._geoProjection = geoProjection;\n    this.onSetGeoProjection(geoProjection);\n    this.didSetGeoProjection(geoProjection);\n  }\n\n  get mapZoom(): number {\n    return this._mapZoom;\n  }\n\n  setMapZoom(newMapZoom: number): void {\n    const oldMapZoom = this._mapZoom;\n    if (oldMapZoom !== newMapZoom) {\n      this.willSetMapZoom(newMapZoom, oldMapZoom);\n      this._mapZoom = newMapZoom;\n      this.onSetMapZoom(newMapZoom, oldMapZoom);\n      this.didSetMapZoom(newMapZoom, oldMapZoom);\n    }\n  }\n\n  get mapHeading(): number {\n    return this._mapHeading;\n  }\n\n  get mapTilt(): number {\n    return 0;\n  }\n\n  get geoFrame(): GeoBox {\n    let extent = this._map.extent;\n    if (extent !== null) {\n      extent = EsriProjection.webMercatorUtils!.webMercatorToGeographic(extent) as __esri.Extent;\n    }\n    if (extent !== null) {\n      return new GeoBox(extent.xmin, extent.ymin, extent.xmax, extent.ymax);\n    } else {\n      return GeoBox.globe();\n    }\n  }\n\n  protected onMapRender(): void {\n    this._mapHeading = this._map.rotation;\n    this.setMapZoom(this._map.zoom);\n    this.setGeoProjection(this._geoProjection);\n  }\n\n  overlayCanvas(): CanvasView | null {\n    if (this._parentView !== null) {\n      return this.canvasView;\n    } else {\n      const map = this._map;\n      const container = View.fromNode(map.container);\n      const esriViewRoot = View.fromNode(container.node.querySelector(\".esri-view-root\") as HTMLDivElement);\n      const esriOverlaySurface = View.fromNode(esriViewRoot.node.querySelector(\".esri-overlay-surface\") as HTMLDivElement);\n      const canvas = esriOverlaySurface.append(\"canvas\");\n      canvas.setEventSurface(esriViewRoot.node);\n      canvas.append(this);\n      return canvas;\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {EsriViewController} from \"./EsriViewController\";\nimport {EsriMapViewProjection} from \"./EsriMapViewProjection\";\nimport {EsriMapView} from \"./EsriMapView\";\nimport {EsriMapViewObserver} from \"./EsriMapViewObserver\";\n\nexport class EsriMapViewController<V extends EsriMapView = EsriMapView> extends EsriViewController<V> implements EsriMapViewObserver<V> {\n  viewWillSetGeoProjection(geoProjection: EsriMapViewProjection, view: V): void {\n    // hook\n  }\n\n  viewDidSetGeoProjection(geoProjection: EsriMapViewProjection, view: V): void {\n    // hook\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/map\";\nimport {EsriProjection} from \"./EsriProjection\";\n\nexport class EsriSceneViewProjection implements EsriProjection {\n  /** @hidden */\n  readonly _map: __esri.SceneView;\n\n  constructor(map: __esri.SceneView) {\n    EsriProjection.init();\n    this._map = map;\n  }\n\n  get map(): __esri.SceneView {\n    return this._map;\n  }\n\n  get bounds(): GeoBox {\n    let extent = this._map.extent;\n    if (extent !== null) {\n      extent = EsriProjection.webMercatorUtils!.webMercatorToGeographic(extent) as __esri.Extent;\n    }\n    if (extent !== null) {\n      return new GeoBox(extent.xmin, extent.ymin, extent.xmax, extent.ymax);\n    } else {\n      return GeoBox.globe();\n    }\n  }\n\n  project(geoPoint: AnyGeoPoint): PointR2;\n  project(lng: number, lat: number): PointR2;\n  project(lng: AnyGeoPoint | number, lat?: number): PointR2 {\n    let geoPoint: __esri.Point;\n    if (typeof lng === \"number\") {\n      geoPoint = {x: lng, y: lat!, spatialReference: {wkid: 4326}} as __esri.Point;\n    } else if (Array.isArray(lng)) {\n      geoPoint = {x: lng[0], y: lng[1], spatialReference: {wkid: 4326}} as __esri.Point;\n    } else {\n      geoPoint = {x: lng.lng, y: lng.lat, spatialReference: {wkid: 4326}} as __esri.Point;\n    }\n    const point = this._map.toScreen(geoPoint);\n    return point !== null ? new PointR2(point.x, point.y) : PointR2.origin();\n  }\n\n  unproject(viewPoint: AnyPointR2): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: AnyPointR2 | number, y?: number): GeoPoint {\n    let viewPoint: __esri.ScreenPoint;\n    if (typeof x === \"number\") {\n      viewPoint = {x: x, y: y!};\n    } else if (Array.isArray(x)) {\n      viewPoint = {x: x[0], y: x[1]};\n    } else {\n      viewPoint = x;\n    }\n    const point = this._map.toMap(viewPoint);\n    return point !== null ? new GeoPoint(point.longitude, point.latitude) : GeoPoint.origin();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2} from \"@swim/math\";\nimport {View, CanvasView} from \"@swim/view\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/map\";\nimport {EsriProjection} from \"./EsriProjection\";\nimport {EsriView} from \"./EsriView\";\nimport {EsriSceneViewProjection} from \"./EsriSceneViewProjection\";\nimport {EsriSceneViewController} from \"./EsriSceneViewController\";\n\nexport class EsriSceneView extends EsriView {\n  /** @hidden */\n  readonly _map: __esri.SceneView;\n  /** @hidden */\n  _geoProjection: EsriSceneViewProjection;\n  /** @hidden */\n  _mapZoom: number;\n  /** @hidden */\n  _mapHeading: number;\n  /** @hidden */\n  _mapTilt: number;\n\n  constructor(map: __esri.SceneView) {\n    super();\n    this.onMapRender = this.onMapRender.bind(this);\n    this._map = map;\n    this._geoProjection = new EsriSceneViewProjection(this._map);\n    this._mapZoom = map.zoom;\n    this._mapHeading = map.camera.heading;\n    this._mapTilt = map.camera.tilt;\n    this.initMap(this._map);\n  }\n\n  get map(): __esri.SceneView {\n    return this._map;\n  }\n\n  protected initMap(map: __esri.SceneView): void {\n    map.watch(\"extent\", this.onMapRender);\n  }\n\n  get viewController(): EsriSceneViewController | null {\n    return this._viewController;\n  }\n\n  project(lnglat: AnyGeoPoint): PointR2;\n  project(lng: number, lat: number): PointR2;\n  project(lng: AnyGeoPoint | number, lat?: number): PointR2 {\n    return this._geoProjection.project.apply(this._geoProjection, arguments);\n  }\n\n  unproject(point: AnyPointR2): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: AnyPointR2 | number, y?: number): GeoPoint {\n    return this._geoProjection.unproject.apply(this._geoProjection, arguments);\n  }\n\n  get geoProjection(): EsriSceneViewProjection {\n    return this._geoProjection;\n  }\n\n  setGeoProjection(geoProjection: EsriSceneViewProjection): void {\n    this.willSetGeoProjection(geoProjection);\n    this._geoProjection = geoProjection;\n    this.onSetGeoProjection(geoProjection);\n    this.didSetGeoProjection(geoProjection);\n  }\n\n  get mapZoom(): number {\n    return this._mapZoom;\n  }\n\n  setMapZoom(newMapZoom: number): void {\n    const oldMapZoom = this._mapZoom;\n    if (oldMapZoom !== newMapZoom) {\n      this.willSetMapZoom(newMapZoom, oldMapZoom);\n      this._mapZoom = newMapZoom;\n      this.onSetMapZoom(newMapZoom, oldMapZoom);\n      this.didSetMapZoom(newMapZoom, oldMapZoom);\n    }\n  }\n\n  get mapHeading(): number {\n    return this._mapHeading;\n  }\n\n  get mapTilt(): number {\n    return this._mapTilt;\n  }\n\n  get geoFrame(): GeoBox {\n    let extent = this._map.extent;\n    if (extent !== null) {\n      extent = EsriProjection.webMercatorUtils!.webMercatorToGeographic(extent) as __esri.Extent;\n    }\n    if (extent !== null) {\n      return new GeoBox(extent.xmin, extent.ymin, extent.xmax, extent.ymax);\n    } else {\n      return GeoBox.globe();\n    }\n  }\n\n  protected onMapRender(): void {\n    this._mapHeading = this._map.camera.heading;\n    this._mapTilt = this._map.camera.tilt;\n    this.setMapZoom(this._map.zoom);\n    this.setGeoProjection(this._geoProjection);\n  }\n\n  overlayCanvas(): CanvasView | null {\n    if (this._parentView !== null) {\n      return this.canvasView;\n    } else {\n      const map = this._map;\n      const container = View.fromNode(map.container);\n      const esriViewRoot = View.fromNode(container.node.querySelector(\".esri-view-root\") as HTMLDivElement);\n      const esriViewSurface = View.fromNode(esriViewRoot.node.querySelector(\".esri-view-surface\") as HTMLDivElement);\n      const canvas = esriViewSurface.append(\"canvas\");\n      canvas.append(this);\n      return canvas;\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {EsriViewController} from \"./EsriViewController\";\nimport {EsriSceneViewProjection} from \"./EsriSceneViewProjection\";\nimport {EsriSceneView} from \"./EsriSceneView\";\nimport {EsriSceneViewObserver} from \"./EsriSceneViewObserver\";\n\nexport class EsriSceneViewController<V extends EsriSceneView = EsriSceneView> extends EsriViewController<V> implements EsriSceneViewObserver<V> {\n  viewWillSetGeoProjection(geoProjection: EsriSceneViewProjection, view: V): void {\n    // hook\n  }\n\n  viewDidSetGeoProjection(geoProjection: EsriSceneViewProjection, view: V): void {\n    // hook\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyPointR2, PointR2} from \"@swim/math\";\nimport {GeoBox} from \"./GeoBox\";\nimport {AnyGeoPoint, GeoPoint} from \"./GeoPoint\";\n\nexport interface GeoProjection {\n  readonly bounds: GeoBox;\n\n  project(lnglat: AnyGeoPoint): PointR2;\n  project(lng: number, lat: number): PointR2;\n\n  unproject(point: AnyPointR2): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n}\n\n/** @hidden */\nexport const GeoProjection = {\n  is(object: unknown): object is GeoProjection {\n    if (typeof object === \"object\" && object !== null) {\n      const projection = object as GeoProjection;\n      return typeof projection.project === \"function\"\n          && typeof projection.unproject === \"function\";\n    }\n    return false;\n  },\n};\n"]}